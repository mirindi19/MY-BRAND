{"version":3,"names":["request","require","Blogs","Blog","uploadImage","deleteImage","BlogController","AddBlog","req","res","image","file","path","data","title","body","content","url","cloudinary_id","publicId","AddNewBlog","savedBlog","save","status","json","message","error","deletBlog","blogToDeleteImage","findOne","_id","params","id","deleteOne","err","blog","findData","blogList","find","send","updateBlog","blogData","public_id","date","Date","findOneAndUpdate","$set","new","code","UpdatedBlog","FindById","searchBlog","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\","sources":["BlogController.js"],"sourcesContent":["const { request } = require(\"express\");\r\nconst Blogs = require(\"../models/Blogs\");\r\nconst Blog=require(\"../models/Blogs\");\r\n\r\nconst {uploadImage,deleteImage} =require(\"../utils/cloudinary\");\r\nclass BlogController{\r\n    static async AddBlog(req,res){\r\n       \r\n        const image = await uploadImage(req.file.path, \"blog_images\")\r\n\r\n\r\n        const data={\r\n            title: req.body.title,\r\n            content: req.body.content,\r\n            image: image.url,\r\n            cloudinary_id: image.publicId\r\n        }\r\n        const AddNewBlog=new Blog(data);\r\n    try {\r\n\r\n        const savedBlog=await AddNewBlog.save();\r\n       return res.status(201).json({\r\n            status:201,\r\n            message:\"Article Added in Blog\",\r\n            data:savedBlog\r\n        });  \r\n    } catch (error) {\r\n        res.status(500).json(error)\r\n        \r\n    }\r\n    }\r\n\r\n    static async deletBlog(req,res){\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        Blogs.deleteOne( { _id: req.params.id }, (err, blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    status: 200,\r\n                    message: \"Deleted Successfull \",\r\n                    data:blog\r\n                    \r\n                 })\r\n            } else {\r\n                res.status(404).json({\r\n                    status: 404,\r\n                    message: \"Blog to Delete Not Found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async findData(req,res){\r\n        const blogList = await Blog.find()\r\n        res.send(\r\n            res.status(200).json({\r\n                status:200,\r\n                message:\"List of Blogs\",\r\n                data:blogList\r\n            }) \r\n        )\r\n    }\r\n\r\n    static async updateBlog(req,res){\r\n        const data = await uploadImage(req.file.path, \"blog_images\")\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        const blogData = {\r\n            title : req.body.title,\r\n            image : req.body.image,\r\n            content : req.body.content,\r\n            cloudinary_id: data.public_id,\r\n            image: data.url,\r\n            date : new Date()\r\n        }\r\n        \r\n        Blogs.findOneAndUpdate( { _id:  req.params.id },{ $set:blogData },{ new:true }, (err,blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    code: 200,\r\n                    message: \"Blog updated\",\r\n                    UpdatedBlog: blog,\r\n                })\r\n            } else {\r\n                res.status(404).json({\r\n                    code: 404,\r\n                    message: \"Blog to Update not found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async FindById(req,res){\r\n        try {\r\n            const searchBlog = await Blog.findOne({ _id: req.params.id })\r\n            res.send( res.status(200).json({\r\n                status:200,\r\n                message:\"Your Blogs\",\r\n                data:searchBlog\r\n            }) )\r\n        } catch (error) {\r\n            res.send( res.status(404).json({\r\n                status:404,\r\n                error:\"Blogs doesn't exist!\",\r\n            }) \r\n            )\r\n        }\r\n      \r\n    }\r\n}\r\nmodule.exports =BlogController;"],"mappings":"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"}