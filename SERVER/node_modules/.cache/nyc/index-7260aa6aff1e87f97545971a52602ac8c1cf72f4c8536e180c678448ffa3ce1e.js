function cov_jowoahg1y(){var path="E:\\andela\\New Andela\\node_mongo_tutorial\\index.js";var hash="63c00197df52d324ade30df2c5360681b8ffa2ad";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\node_mongo_tutorial\\index.js",statementMap:{"0":{start:{line:1,column:16},end:{line:1,column:34}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:19},end:{line:3,column:41}},"3":{start:{line:4,column:15},end:{line:4,column:39}},"4":{start:{line:5,column:13},end:{line:5,column:28}},"5":{start:{line:6,column:18},end:{line:6,column:45}},"6":{start:{line:7,column:12},end:{line:7,column:21}},"7":{start:{line:8,column:21},end:{line:8,column:45}},"8":{start:{line:9,column:18},end:{line:9,column:47}},"9":{start:{line:10,column:21},end:{line:10,column:45}},"10":{start:{line:11,column:0},end:{line:11,column:16}},"11":{start:{line:12,column:16},end:{line:30,column:1}},"12":{start:{line:31,column:14},end:{line:31,column:35}},"13":{start:{line:32,column:0},end:{line:32,column:62}},"14":{start:{line:33,column:0},end:{line:33,column:12}},"15":{start:{line:34,column:0},end:{line:34,column:24}},"16":{start:{line:35,column:0},end:{line:35,column:24}},"17":{start:{line:36,column:0},end:{line:36,column:27}},"18":{start:{line:37,column:0},end:{line:39,column:4}},"19":{start:{line:40,column:0},end:{line:40,column:16}},"20":{start:{line:41,column:13},end:{line:41,column:37}},"21":{start:{line:42,column:0},end:{line:44,column:3}},"22":{start:{line:43,column:2},end:{line:43,column:51}},"23":{start:{line:45,column:0},end:{line:45,column:21}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:42,column:17},end:{line:42,column:18}},loc:{start:{line:42,column:23},end:{line:44,column:1}},line:42}},branchMap:{"0":{loc:{start:{line:41,column:13},end:{line:41,column:37}},type:"binary-expr",locations:[{start:{line:41,column:13},end:{line:41,column:29}},{start:{line:41,column:33},end:{line:41,column:37}}],line:41}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["express","require","dotenv","bodyParser","router","cors","dbConnect","app","swaggerJsdoc","swaggerUi","cookieparser","config","options","definition","openapi","info","title","version","description","contact","name","url","email","servers","apis","specs","use","serve","setup","json","origin","port","process","env","PORT","listen","console","log","module","exports"],sourceRoot:"E:\\andela\\New Andela\\node_mongo_tutorial\\",sources:["index.js"],sourcesContent:["const express =require(\"express\");\r\nconst dotenv=require(\"dotenv\");\r\nconst bodyParser = require('body-parser');\r\nconst router=require(\"./src/routers\")\r\nconst cors=require(\"cors\");\r\nconst dbConnect = require(\"./src/configs/db\");\r\nconst app =express();\r\nconst swaggerJsdoc = require(\"swagger-jsdoc\");\r\nconst swaggerUi = require(\"swagger-ui-express\");\r\nconst cookieparser= require('cookie-parser')\r\ndotenv.config();\r\n\r\nconst options = {\r\n    definition: {\r\n      openapi: \"3.0.0\",\r\n      info: {\r\n        title: \"LogRocket Express API with Swagger\",\r\n        version: \"0.1.0\",\r\n        description:\r\n          \"This is a simple CRUD API application made with Express and documented with Swagger\",\r\n        contact: {\r\n          name: \"Mirindi saidi\",\r\n          url: \"My Brand\",\r\n          email: \"mirindisaidi19@gmail.com\",\r\n        },\r\n      },\r\n      servers: [\r\n        {\r\n          url: \"http://localhost:2000\",\r\n        },\r\n      ],\r\n    },\r\n    apis: [\"./src/routers/auth.routers.js\",\"./src/routers/blog.routers.js\",\"./src/routers/contact.routers.js\"],\r\n  };\r\n  \r\n  const specs = swaggerJsdoc(options);\r\n  app.use(\r\n    \"/api-docs\",\r\n    swaggerUi.serve,\r\n    swaggerUi.setup(specs)\r\n  );\r\n\r\n\r\ndbConnect();\r\napp.use(express.json());\r\napp.use(cookieparser());\r\napp.use(bodyParser.json());\r\napp.use(cors({origin:\"*\"}))\r\napp.use(router);\r\nconst port=process.env.PORT || 2000;\r\napp.listen(port, ()=>{\r\n    console.log(\"Server in connected on\",`${port}`);\r\n})\r\n\r\nmodule.exports=app;"],mappings:"AAAA,MAAMA,OAAO,GAAEC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,MAAM,GAACD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,MAAM,GAACH,OAAO,CAAC,eAAe,CAAC;AACrC,MAAMI,IAAI,GAACJ,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMM,GAAG,GAAEP,OAAO,EAAE;AACpB,MAAMQ,YAAY,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMQ,SAAS,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMS,YAAY,GAAET,OAAO,CAAC,eAAe,CAAC;AAC5CC,MAAM,CAACS,MAAM,EAAE;AAEf,MAAMC,OAAO,GAAG;EACZC,UAAU,EAAE;IACVC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,KAAK,EAAE,oCAAoC;MAC3CC,OAAO,EAAE,OAAO;MAChBC,WAAW,EACT,qFAAqF;MACvFC,OAAO,EAAE;QACPC,IAAI,EAAE,eAAe;QACrBC,GAAG,EAAE,UAAU;QACfC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,OAAO,EAAE,CACP;MACEF,GAAG,EAAE;IACP,CAAC;EAEL,CAAC;EACDG,IAAI,EAAE,CAAC,+BAA+B,EAAC,+BAA+B,EAAC,kCAAkC;AAC3G,CAAC;AAED,MAAMC,KAAK,GAAGjB,YAAY,CAACI,OAAO,CAAC;AACnCL,GAAG,CAACmB,GAAG,CACL,WAAW,EACXjB,SAAS,CAACkB,KAAK,EACflB,SAAS,CAACmB,KAAK,CAACH,KAAK,CAAC,CACvB;AAGHnB,SAAS,EAAE;AACXC,GAAG,CAACmB,GAAG,CAAC1B,OAAO,CAAC6B,IAAI,EAAE,CAAC;AACvBtB,GAAG,CAACmB,GAAG,CAAChB,YAAY,EAAE,CAAC;AACvBH,GAAG,CAACmB,GAAG,CAACvB,UAAU,CAAC0B,IAAI,EAAE,CAAC;AAC1BtB,GAAG,CAACmB,GAAG,CAACrB,IAAI,CAAC;EAACyB,MAAM,EAAC;AAAG,CAAC,CAAC,CAAC;AAC3BvB,GAAG,CAACmB,GAAG,CAACtB,MAAM,CAAC;AACf,MAAM2B,IAAI,GAACC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AACnC3B,GAAG,CAAC4B,MAAM,CAACJ,IAAI,EAAE,MAAI;EACjBK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,GAAEN,IAAK,EAAC,CAAC;AACnD,CAAC,CAAC;AAEFO,MAAM,CAACC,OAAO,GAAChC,GAAG"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"63c00197df52d324ade30df2c5360681b8ffa2ad"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_jowoahg1y=function(){return actualCoverage;};}return actualCoverage;}cov_jowoahg1y();const express=(cov_jowoahg1y().s[0]++,require("express"));const dotenv=(cov_jowoahg1y().s[1]++,require("dotenv"));const bodyParser=(cov_jowoahg1y().s[2]++,require('body-parser'));const router=(cov_jowoahg1y().s[3]++,require("./src/routers"));const cors=(cov_jowoahg1y().s[4]++,require("cors"));const dbConnect=(cov_jowoahg1y().s[5]++,require("./src/configs/db"));const app=(cov_jowoahg1y().s[6]++,express());const swaggerJsdoc=(cov_jowoahg1y().s[7]++,require("swagger-jsdoc"));const swaggerUi=(cov_jowoahg1y().s[8]++,require("swagger-ui-express"));const cookieparser=(cov_jowoahg1y().s[9]++,require('cookie-parser'));cov_jowoahg1y().s[10]++;dotenv.config();const options=(cov_jowoahg1y().s[11]++,{definition:{openapi:"3.0.0",info:{title:"LogRocket Express API with Swagger",version:"0.1.0",description:"This is a simple CRUD API application made with Express and documented with Swagger",contact:{name:"Mirindi saidi",url:"My Brand",email:"mirindisaidi19@gmail.com"}},servers:[{url:"http://localhost:2000"}]},apis:["./src/routers/auth.routers.js","./src/routers/blog.routers.js","./src/routers/contact.routers.js"]});const specs=(cov_jowoahg1y().s[12]++,swaggerJsdoc(options));cov_jowoahg1y().s[13]++;app.use("/api-docs",swaggerUi.serve,swaggerUi.setup(specs));cov_jowoahg1y().s[14]++;dbConnect();cov_jowoahg1y().s[15]++;app.use(express.json());cov_jowoahg1y().s[16]++;app.use(cookieparser());cov_jowoahg1y().s[17]++;app.use(bodyParser.json());cov_jowoahg1y().s[18]++;app.use(cors({origin:"*"}));cov_jowoahg1y().s[19]++;app.use(router);const port=(cov_jowoahg1y().s[20]++,(cov_jowoahg1y().b[0][0]++,process.env.PORT)||(cov_jowoahg1y().b[0][1]++,2000));cov_jowoahg1y().s[21]++;app.listen(port,()=>{cov_jowoahg1y().f[0]++;cov_jowoahg1y().s[22]++;console.log("Server in connected on",`${port}`);});cov_jowoahg1y().s[23]++;module.exports=app;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImRvdGVudiIsImJvZHlQYXJzZXIiLCJyb3V0ZXIiLCJjb3JzIiwiZGJDb25uZWN0IiwiYXBwIiwic3dhZ2dlckpzZG9jIiwic3dhZ2dlclVpIiwiY29va2llcGFyc2VyIiwiY29uZmlnIiwib3B0aW9ucyIsImRlZmluaXRpb24iLCJvcGVuYXBpIiwiaW5mbyIsInRpdGxlIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwiY29udGFjdCIsIm5hbWUiLCJ1cmwiLCJlbWFpbCIsInNlcnZlcnMiLCJhcGlzIiwic3BlY3MiLCJ1c2UiLCJzZXJ2ZSIsInNldHVwIiwianNvbiIsIm9yaWdpbiIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJFOlxcYW5kZWxhXFxOZXcgQW5kZWxhXFxub2RlX21vbmdvX3R1dG9yaWFsXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPXJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCBkb3RlbnY9cmVxdWlyZShcImRvdGVudlwiKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmNvbnN0IHJvdXRlcj1yZXF1aXJlKFwiLi9zcmMvcm91dGVyc1wiKVxyXG5jb25zdCBjb3JzPXJlcXVpcmUoXCJjb3JzXCIpO1xyXG5jb25zdCBkYkNvbm5lY3QgPSByZXF1aXJlKFwiLi9zcmMvY29uZmlncy9kYlwiKTtcclxuY29uc3QgYXBwID1leHByZXNzKCk7XHJcbmNvbnN0IHN3YWdnZXJKc2RvYyA9IHJlcXVpcmUoXCJzd2FnZ2VyLWpzZG9jXCIpO1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKFwic3dhZ2dlci11aS1leHByZXNzXCIpO1xyXG5jb25zdCBjb29raWVwYXJzZXI9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKVxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBvcHRpb25zID0ge1xyXG4gICAgZGVmaW5pdGlvbjoge1xyXG4gICAgICBvcGVuYXBpOiBcIjMuMC4wXCIsXHJcbiAgICAgIGluZm86IHtcclxuICAgICAgICB0aXRsZTogXCJMb2dSb2NrZXQgRXhwcmVzcyBBUEkgd2l0aCBTd2FnZ2VyXCIsXHJcbiAgICAgICAgdmVyc2lvbjogXCIwLjEuMFwiLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOlxyXG4gICAgICAgICAgXCJUaGlzIGlzIGEgc2ltcGxlIENSVUQgQVBJIGFwcGxpY2F0aW9uIG1hZGUgd2l0aCBFeHByZXNzIGFuZCBkb2N1bWVudGVkIHdpdGggU3dhZ2dlclwiLFxyXG4gICAgICAgIGNvbnRhY3Q6IHtcclxuICAgICAgICAgIG5hbWU6IFwiTWlyaW5kaSBzYWlkaVwiLFxyXG4gICAgICAgICAgdXJsOiBcIk15IEJyYW5kXCIsXHJcbiAgICAgICAgICBlbWFpbDogXCJtaXJpbmRpc2FpZGkxOUBnbWFpbC5jb21cIixcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBzZXJ2ZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6MjAwMFwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgYXBpczogW1wiLi9zcmMvcm91dGVycy9hdXRoLnJvdXRlcnMuanNcIixcIi4vc3JjL3JvdXRlcnMvYmxvZy5yb3V0ZXJzLmpzXCIsXCIuL3NyYy9yb3V0ZXJzL2NvbnRhY3Qucm91dGVycy5qc1wiXSxcclxuICB9O1xyXG4gIFxyXG4gIGNvbnN0IHNwZWNzID0gc3dhZ2dlckpzZG9jKG9wdGlvbnMpO1xyXG4gIGFwcC51c2UoXHJcbiAgICBcIi9hcGktZG9jc1wiLFxyXG4gICAgc3dhZ2dlclVpLnNlcnZlLFxyXG4gICAgc3dhZ2dlclVpLnNldHVwKHNwZWNzKVxyXG4gICk7XHJcblxyXG5cclxuZGJDb25uZWN0KCk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGNvb2tpZXBhcnNlcigpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoY29ycyh7b3JpZ2luOlwiKlwifSkpXHJcbmFwcC51c2Uocm91dGVyKTtcclxuY29uc3QgcG9ydD1wcm9jZXNzLmVudi5QT1JUIHx8IDIwMDA7XHJcbmFwcC5saXN0ZW4ocG9ydCwgKCk9PntcclxuICAgIGNvbnNvbGUubG9nKFwiU2VydmVyIGluIGNvbm5lY3RlZCBvblwiLGAke3BvcnR9YCk7XHJcbn0pXHJcblxyXG5tb2R1bGUuZXhwb3J0cz1hcHA7Il0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxPQUFPLEdBQUVDLE9BQU8sQ0FBQyxTQUFTLENBQUM7QUFDakMsTUFBTUMsTUFBTSxHQUFDRCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQzlCLE1BQU1FLFVBQVUsR0FBR0YsT0FBTyxDQUFDLGFBQWEsQ0FBQztBQUN6QyxNQUFNRyxNQUFNLEdBQUNILE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDckMsTUFBTUksSUFBSSxHQUFDSixPQUFPLENBQUMsTUFBTSxDQUFDO0FBQzFCLE1BQU1LLFNBQVMsR0FBR0wsT0FBTyxDQUFDLGtCQUFrQixDQUFDO0FBQzdDLE1BQU1NLEdBQUcsR0FBRVAsT0FBTyxFQUFFO0FBQ3BCLE1BQU1RLFlBQVksR0FBR1AsT0FBTyxDQUFDLGVBQWUsQ0FBQztBQUM3QyxNQUFNUSxTQUFTLEdBQUdSLE9BQU8sQ0FBQyxvQkFBb0IsQ0FBQztBQUMvQyxNQUFNUyxZQUFZLEdBQUVULE9BQU8sQ0FBQyxlQUFlLENBQUM7QUFDNUNDLE1BQU0sQ0FBQ1MsTUFBTSxFQUFFO0FBRWYsTUFBTUMsT0FBTyxHQUFHO0VBQ1pDLFVBQVUsRUFBRTtJQUNWQyxPQUFPLEVBQUUsT0FBTztJQUNoQkMsSUFBSSxFQUFFO01BQ0pDLEtBQUssRUFBRSxvQ0FBb0M7TUFDM0NDLE9BQU8sRUFBRSxPQUFPO01BQ2hCQyxXQUFXLEVBQ1QscUZBQXFGO01BQ3ZGQyxPQUFPLEVBQUU7UUFDUEMsSUFBSSxFQUFFLGVBQWU7UUFDckJDLEdBQUcsRUFBRSxVQUFVO1FBQ2ZDLEtBQUssRUFBRTtNQUNUO0lBQ0YsQ0FBQztJQUNEQyxPQUFPLEVBQUUsQ0FDUDtNQUNFRixHQUFHLEVBQUU7SUFDUCxDQUFDO0VBRUwsQ0FBQztFQUNERyxJQUFJLEVBQUUsQ0FBQywrQkFBK0IsRUFBQywrQkFBK0IsRUFBQyxrQ0FBa0M7QUFDM0csQ0FBQztBQUVELE1BQU1DLEtBQUssR0FBR2pCLFlBQVksQ0FBQ0ksT0FBTyxDQUFDO0FBQ25DTCxHQUFHLENBQUNtQixHQUFHLENBQ0wsV0FBVyxFQUNYakIsU0FBUyxDQUFDa0IsS0FBSyxFQUNmbEIsU0FBUyxDQUFDbUIsS0FBSyxDQUFDSCxLQUFLLENBQUMsQ0FDdkI7QUFHSG5CLFNBQVMsRUFBRTtBQUNYQyxHQUFHLENBQUNtQixHQUFHLENBQUMxQixPQUFPLENBQUM2QixJQUFJLEVBQUUsQ0FBQztBQUN2QnRCLEdBQUcsQ0FBQ21CLEdBQUcsQ0FBQ2hCLFlBQVksRUFBRSxDQUFDO0FBQ3ZCSCxHQUFHLENBQUNtQixHQUFHLENBQUN2QixVQUFVLENBQUMwQixJQUFJLEVBQUUsQ0FBQztBQUMxQnRCLEdBQUcsQ0FBQ21CLEdBQUcsQ0FBQ3JCLElBQUksQ0FBQztFQUFDeUIsTUFBTSxFQUFDO0FBQUcsQ0FBQyxDQUFDLENBQUM7QUFDM0J2QixHQUFHLENBQUNtQixHQUFHLENBQUN0QixNQUFNLENBQUM7QUFDZixNQUFNMkIsSUFBSSxHQUFDQyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsSUFBSSxJQUFJLElBQUk7QUFDbkMzQixHQUFHLENBQUM0QixNQUFNLENBQUNKLElBQUksRUFBRSxNQUFJO0VBQ2pCSyxPQUFPLENBQUNDLEdBQUcsQ0FBQyx3QkFBd0IsRUFBRSxHQUFFTixJQUFLLEVBQUMsQ0FBQztBQUNuRCxDQUFDLENBQUM7QUFFRk8sTUFBTSxDQUFDQyxPQUFPLEdBQUNoQyxHQUFHIn0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijg2TEFnQmE7QUFBQSx5RkFoQmIsS0FBTUEsUUFBTyx5QkFBRUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxFQUNqQyxLQUFNQyxPQUFNLHlCQUFDRCxPQUFPLENBQUMsUUFBUSxDQUFDLEVBQzlCLEtBQU1FLFdBQVUseUJBQUdGLE9BQU8sQ0FBQyxhQUFhLENBQUMsRUFDekMsS0FBTUcsT0FBTSx5QkFBQ0gsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUNyQyxLQUFNSSxLQUFJLHlCQUFDSixPQUFPLENBQUMsTUFBTSxDQUFDLEVBQzFCLEtBQU1LLFVBQVMseUJBQUdMLE9BQU8sQ0FBQyxrQkFBa0IsQ0FBQyxFQUM3QyxLQUFNTSxJQUFHLHlCQUFFUCxPQUFPLEVBQUUsRUFDcEIsS0FBTVEsYUFBWSx5QkFBR1AsT0FBTyxDQUFDLGVBQWUsQ0FBQyxFQUM3QyxLQUFNUSxVQUFTLHlCQUFHUixPQUFPLENBQUMsb0JBQW9CLENBQUMsRUFDL0MsS0FBTVMsYUFBWSx5QkFBRVQsT0FBTyxDQUFDLGVBQWUsQ0FBQywwQkFDNUNDLE1BQU0sQ0FBQ1MsTUFBTSxFQUFFLENBRWYsS0FBTUMsUUFBTywwQkFBRyxDQUNaQyxVQUFVLENBQUUsQ0FDVkMsT0FBTyxDQUFFLE9BQU8sQ0FDaEJDLElBQUksQ0FBRSxDQUNKQyxLQUFLLENBQUUsb0NBQW9DLENBQzNDQyxPQUFPLENBQUUsT0FBTyxDQUNoQkMsV0FBVyxDQUNULHFGQUFxRixDQUN2RkMsT0FBTyxDQUFFLENBQ1BDLElBQUksQ0FBRSxlQUFlLENBQ3JCQyxHQUFHLENBQUUsVUFBVSxDQUNmQyxLQUFLLENBQUUsMEJBQ1QsQ0FDRixDQUFDLENBQ0RDLE9BQU8sQ0FBRSxDQUNQLENBQ0VGLEdBQUcsQ0FBRSx1QkFDUCxDQUFDLENBRUwsQ0FBQyxDQUNERyxJQUFJLENBQUUsQ0FBQywrQkFBK0IsQ0FBQywrQkFBK0IsQ0FBQyxrQ0FBa0MsQ0FDM0csQ0FBQyxFQUVELEtBQU1DLE1BQUssMEJBQUdqQixZQUFZLENBQUNJLE9BQU8sQ0FBQywwQkFDbkNMLEdBQUcsQ0FBQ21CLEdBQUcsQ0FDTCxXQUFXLENBQ1hqQixTQUFTLENBQUNrQixLQUFLLENBQ2ZsQixTQUFTLENBQUNtQixLQUFLLENBQUNILEtBQUssQ0FBQyxDQUN2Qix5QkFHSG5CLFNBQVMsRUFBRSx5QkFDWEMsR0FBRyxDQUFDbUIsR0FBRyxDQUFDMUIsT0FBTyxDQUFDNkIsSUFBSSxFQUFFLENBQUMseUJBQ3ZCdEIsR0FBRyxDQUFDbUIsR0FBRyxDQUFDaEIsWUFBWSxFQUFFLENBQUMseUJBQ3ZCSCxHQUFHLENBQUNtQixHQUFHLENBQUN2QixVQUFVLENBQUMwQixJQUFJLEVBQUUsQ0FBQyx5QkFDMUJ0QixHQUFHLENBQUNtQixHQUFHLENBQUNyQixJQUFJLENBQUMsQ0FBQ3lCLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLHlCQUMzQnZCLEdBQUcsQ0FBQ21CLEdBQUcsQ0FBQ3RCLE1BQU0sQ0FBQyxDQUNmLEtBQU0yQixLQUFJLDBCQUFDQyxrQ0FBTyxDQUFDQyxHQUFHLENBQUNDLElBQUksOEJBQUksSUFBSSwyQkFDbkMzQixHQUFHLENBQUM0QixNQUFNLENBQUNKLElBQUksQ0FBRSxJQUFJLGdEQUNqQkssT0FBTyxDQUFDQyxHQUFHLENBQUMsd0JBQXdCLENBQUUsR0FBRU4sSUFBSyxFQUFDLENBQUMsQ0FDbkQsQ0FBQyxDQUFDLHlCQUVGTyxNQUFNLENBQUNDLE9BQU8sQ0FBQ2hDLEdBQUciLCJuYW1lcyI6WyJleHByZXNzIiwicmVxdWlyZSIsImRvdGVudiIsImJvZHlQYXJzZXIiLCJyb3V0ZXIiLCJjb3JzIiwiZGJDb25uZWN0IiwiYXBwIiwic3dhZ2dlckpzZG9jIiwic3dhZ2dlclVpIiwiY29va2llcGFyc2VyIiwiY29uZmlnIiwib3B0aW9ucyIsImRlZmluaXRpb24iLCJvcGVuYXBpIiwiaW5mbyIsInRpdGxlIiwidmVyc2lvbiIsImRlc2NyaXB0aW9uIiwiY29udGFjdCIsIm5hbWUiLCJ1cmwiLCJlbWFpbCIsInNlcnZlcnMiLCJhcGlzIiwic3BlY3MiLCJ1c2UiLCJzZXJ2ZSIsInNldHVwIiwianNvbiIsIm9yaWdpbiIsInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJFOlxcYW5kZWxhXFxOZXcgQW5kZWxhXFxub2RlX21vbmdvX3R1dG9yaWFsXFwiLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGV4cHJlc3MgPXJlcXVpcmUoXCJleHByZXNzXCIpO1xyXG5jb25zdCBkb3RlbnY9cmVxdWlyZShcImRvdGVudlwiKTtcclxuY29uc3QgYm9keVBhcnNlciA9IHJlcXVpcmUoJ2JvZHktcGFyc2VyJyk7XHJcbmNvbnN0IHJvdXRlcj1yZXF1aXJlKFwiLi9zcmMvcm91dGVyc1wiKVxyXG5jb25zdCBjb3JzPXJlcXVpcmUoXCJjb3JzXCIpO1xyXG5jb25zdCBkYkNvbm5lY3QgPSByZXF1aXJlKFwiLi9zcmMvY29uZmlncy9kYlwiKTtcclxuY29uc3QgYXBwID1leHByZXNzKCk7XHJcbmNvbnN0IHN3YWdnZXJKc2RvYyA9IHJlcXVpcmUoXCJzd2FnZ2VyLWpzZG9jXCIpO1xyXG5jb25zdCBzd2FnZ2VyVWkgPSByZXF1aXJlKFwic3dhZ2dlci11aS1leHByZXNzXCIpO1xyXG5jb25zdCBjb29raWVwYXJzZXI9IHJlcXVpcmUoJ2Nvb2tpZS1wYXJzZXInKVxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG5jb25zdCBvcHRpb25zID0ge1xyXG4gICAgZGVmaW5pdGlvbjoge1xyXG4gICAgICBvcGVuYXBpOiBcIjMuMC4wXCIsXHJcbiAgICAgIGluZm86IHtcclxuICAgICAgICB0aXRsZTogXCJMb2dSb2NrZXQgRXhwcmVzcyBBUEkgd2l0aCBTd2FnZ2VyXCIsXHJcbiAgICAgICAgdmVyc2lvbjogXCIwLjEuMFwiLFxyXG4gICAgICAgIGRlc2NyaXB0aW9uOlxyXG4gICAgICAgICAgXCJUaGlzIGlzIGEgc2ltcGxlIENSVUQgQVBJIGFwcGxpY2F0aW9uIG1hZGUgd2l0aCBFeHByZXNzIGFuZCBkb2N1bWVudGVkIHdpdGggU3dhZ2dlclwiLFxyXG4gICAgICAgIGNvbnRhY3Q6IHtcclxuICAgICAgICAgIG5hbWU6IFwiTWlyaW5kaSBzYWlkaVwiLFxyXG4gICAgICAgICAgdXJsOiBcIk15IEJyYW5kXCIsXHJcbiAgICAgICAgICBlbWFpbDogXCJtaXJpbmRpc2FpZGkxOUBnbWFpbC5jb21cIixcclxuICAgICAgICB9LFxyXG4gICAgICB9LFxyXG4gICAgICBzZXJ2ZXJzOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgdXJsOiBcImh0dHA6Ly9sb2NhbGhvc3Q6MjAwMFwiLFxyXG4gICAgICAgIH0sXHJcbiAgICAgIF0sXHJcbiAgICB9LFxyXG4gICAgYXBpczogW1wiLi9zcmMvcm91dGVycy9hdXRoLnJvdXRlcnMuanNcIixcIi4vc3JjL3JvdXRlcnMvYmxvZy5yb3V0ZXJzLmpzXCIsXCIuL3NyYy9yb3V0ZXJzL2NvbnRhY3Qucm91dGVycy5qc1wiXSxcclxuICB9O1xyXG4gIFxyXG4gIGNvbnN0IHNwZWNzID0gc3dhZ2dlckpzZG9jKG9wdGlvbnMpO1xyXG4gIGFwcC51c2UoXHJcbiAgICBcIi9hcGktZG9jc1wiLFxyXG4gICAgc3dhZ2dlclVpLnNlcnZlLFxyXG4gICAgc3dhZ2dlclVpLnNldHVwKHNwZWNzKVxyXG4gICk7XHJcblxyXG5cclxuZGJDb25uZWN0KCk7XHJcbmFwcC51c2UoZXhwcmVzcy5qc29uKCkpO1xyXG5hcHAudXNlKGNvb2tpZXBhcnNlcigpKTtcclxuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XHJcbmFwcC51c2UoY29ycyh7b3JpZ2luOlwiKlwifSkpXHJcbmFwcC51c2Uocm91dGVyKTtcclxuY29uc3QgcG9ydD1wcm9jZXNzLmVudi5QT1JUIHx8IDIwMDA7XHJcbmFwcC5saXN0ZW4ocG9ydCwgKCk9PntcclxuICAgIGNvbnNvbGUubG9nKFwiU2VydmVyIGluIGNvbm5lY3RlZCBvblwiLGAke3BvcnR9YCk7XHJcbn0pXHJcblxyXG5tb2R1bGUuZXhwb3J0cz1hcHA7Il19