function cov_2isaczunda(){var path="E:\\andela\\New Andela\\node_mongo_tutorial\\src\\controllers\\authController.js";var hash="0f560628393c19710eb7136bf145bb2be390dd29";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\controllers\\authController.js",statementMap:{"0":{start:{line:1,column:13},end:{line:1,column:39}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:6,column:4},end:{line:6,column:36}},"3":{start:{line:7,column:15},end:{line:7,column:32}},"4":{start:{line:8,column:0},end:{line:8,column:16}},"5":{start:{line:11,column:4},end:{line:49,column:5}},"6":{start:{line:17,column:10},end:{line:17,column:18}},"7":{start:{line:19,column:19},end:{line:19,column:54}},"8":{start:{line:20,column:24},end:{line:22,column:8}},"9":{start:{line:23,column:6},end:{line:23,column:27}},"10":{start:{line:25,column:6},end:{line:43,column:7}},"11":{start:{line:26,column:8},end:{line:29,column:11}},"12":{start:{line:31,column:27},end:{line:37,column:10}},"13":{start:{line:38,column:8},end:{line:42,column:11}},"14":{start:{line:45,column:6},end:{line:48,column:9}},"15":{start:{line:52,column:4},end:{line:114,column:5}},"16":{start:{line:56,column:10},end:{line:56,column:18}},"17":{start:{line:57,column:23},end:{line:59,column:8}},"18":{start:{line:60,column:6},end:{line:60,column:26}},"19":{start:{line:61,column:6},end:{line:108,column:7}},"20":{start:{line:62,column:8},end:{line:65,column:11}},"21":{start:{line:67,column:24},end:{line:67,column:38}},"22":{start:{line:68,column:27},end:{line:68,column:44}},"23":{start:{line:69,column:23},end:{line:69,column:36}},"24":{start:{line:70,column:34},end:{line:70,column:76}},"25":{start:{line:73,column:8},end:{line:107,column:9}},"26":{start:{line:74,column:10},end:{line:101,column:11}},"27":{start:{line:75,column:26},end:{line:78,column:14}},"28":{start:{line:79,column:27},end:{line:79,column:43}},"29":{start:{line:80,column:12},end:{line:83,column:15}},"30":{start:{line:84,column:32},end:{line:84,column:51}},"31":{start:{line:85,column:25},end:{line:85,column:43}},"32":{start:{line:86,column:35},end:{line:86,column:52}},"33":{start:{line:87,column:12},end:{line:95,column:15}},"34":{start:{line:97,column:12},end:{line:100,column:15}},"35":{start:{line:103,column:10},end:{line:106,column:13}},"36":{start:{line:110,column:6},end:{line:113,column:9}},"37":{start:{line:117,column:4},end:{line:145,column:5}},"38":{start:{line:119,column:25},end:{line:121,column:8}},"39":{start:{line:122,column:6},end:{line:124,column:7}},"40":{start:{line:123,column:8},end:{line:123,column:48}},"41":{start:{line:125,column:6},end:{line:127,column:7}},"42":{start:{line:126,column:8},end:{line:126,column:38}},"43":{start:{line:128,column:6},end:{line:130,column:7}},"44":{start:{line:129,column:8},end:{line:129,column:42}},"45":{start:{line:131,column:6},end:{line:133,column:7}},"46":{start:{line:132,column:8},end:{line:132,column:48}},"47":{start:{line:134,column:6},end:{line:134,column:30}},"48":{start:{line:135,column:6},end:{line:139,column:10}},"49":{start:{line:141,column:6},end:{line:144,column:10}},"50":{start:{line:148,column:0},end:{line:148,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:10,column:2},end:{line:10,column:3}},loc:{start:{line:10,column:38},end:{line:50,column:3}},line:10},"1":{name:"(anonymous_1)",decl:{start:{line:51,column:2},end:{line:51,column:3}},loc:{start:{line:51,column:31},end:{line:115,column:3}},line:51},"2":{name:"(anonymous_2)",decl:{start:{line:116,column:2},end:{line:116,column:3}},loc:{start:{line:116,column:32},end:{line:146,column:3}},line:116}},branchMap:{"0":{loc:{start:{line:25,column:6},end:{line:43,column:7}},type:"if",locations:[{start:{line:25,column:6},end:{line:43,column:7}},{start:{line:25,column:6},end:{line:43,column:7}}],line:25},"1":{loc:{start:{line:61,column:6},end:{line:108,column:7}},type:"if",locations:[{start:{line:61,column:6},end:{line:108,column:7}},{start:{line:61,column:6},end:{line:108,column:7}}],line:61},"2":{loc:{start:{line:73,column:8},end:{line:107,column:9}},type:"if",locations:[{start:{line:73,column:8},end:{line:107,column:9}},{start:{line:73,column:8},end:{line:107,column:9}}],line:73},"3":{loc:{start:{line:74,column:10},end:{line:101,column:11}},type:"if",locations:[{start:{line:74,column:10},end:{line:101,column:11}},{start:{line:74,column:10},end:{line:101,column:11}}],line:74},"4":{loc:{start:{line:122,column:6},end:{line:124,column:7}},type:"if",locations:[{start:{line:122,column:6},end:{line:124,column:7}},{start:{line:122,column:6},end:{line:124,column:7}}],line:122},"5":{loc:{start:{line:125,column:6},end:{line:127,column:7}},type:"if",locations:[{start:{line:125,column:6},end:{line:127,column:7}},{start:{line:125,column:6},end:{line:127,column:7}}],line:125},"6":{loc:{start:{line:128,column:6},end:{line:130,column:7}},type:"if",locations:[{start:{line:128,column:6},end:{line:130,column:7}},{start:{line:128,column:6},end:{line:130,column:7}}],line:128},"7":{loc:{start:{line:131,column:6},end:{line:133,column:7}},type:"if",locations:[{start:{line:131,column:6},end:{line:133,column:7}},{start:{line:131,column:6},end:{line:133,column:7}}],line:131}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0},f:{"0":0,"1":0,"2":0},b:{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0]},inputSourceMap:{version:3,names:["User","require","bcrypt","encode","decode","dotenv","config","authController","creatAccount","req","res","Fullname","age","email","password","body","hash","hashSync","checkUser","findOne","user","status","json","message","createDate","create","role","data","error","Login","findUser","dbEmail","dbPassword","dbRole","decreptedPassword","compare","token","maxAge","cookie","httpOnly","decodeToken","emailfromtoken","stastus","update","userupdate","_id","params","id","save","send","module","exports"],sourceRoot:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\controllers\\",sources:["authController.js"],sourcesContent:["const User =require(\"../models/users\");\r\nconst bcrypt =require(\"bcrypt\");\r\nconst {encode, decode} =require(\"../helper/jwtTokenize\")\r\nconst dotenv=require(\"dotenv\");\r\n\r\ndotenv.config();\r\nclass authController{\r\n    static async creatAccount(req, res){\r\n        try {\r\n            const {Fullname,age,email,password}=req.body;\r\n            // console.log(\"email:\",email);\r\n            const hash = await bcrypt.hashSync(password, 10);\r\n            const checkUser = await User.findOne({email});\r\n            req.user=checkUser\r\n            // console.log(\"this:\",checkUser)\r\n            if(req.user){\r\n                return res.status(409).json({\r\n                    status:409,\r\n                    message:\"Email already exist\"\r\n                    \r\n                })\r\n            }\r\n            else{\r\n                const createDate = await User.create({\r\n                 Fullname,\r\n                 age,\r\n                 email,\r\n                 role:\"user\",\r\n                 password:hash\r\n                });\r\n               return res.status(200).json({\r\n                    status: 200,\r\n                    message: \"Account created\",\r\n                    data:createDate\r\n                })\r\n\r\n            }\r\n        } catch (error) {\r\n            res.status(500).json({\r\n                status:500,\r\n                message:\"server problem:\" + error.message\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    static async Login(req, res){\r\n        try {\r\n            const {email,password}=req.body\r\n            const findUser = await User.findOne({email})\r\n            req.user=findUser\r\n            if(!findUser){\r\n                res.status(404).json({\r\n                    status: 404,\r\n                    message:\"Account don't exit\"\r\n                })\r\n            }\r\n            else{\r\n                const dbEmail = req.user.email\r\n                const dbPassword = req.user.password\r\n                const dbRole= req.user.role\r\n                const decreptedPassword = await bcrypt.compare(password, dbPassword)\r\n                // console.log(\"dec\",decreptedPassword)\r\n                // console.log(dbEmail,dbPassword);\r\n                if(dbEmail == email){\r\n                    if(decreptedPassword){\r\n                        const token=await encode({\r\n                            email,\r\n                            dbRole   \r\n                        });\r\n                        const maxAge=3*24*60*60\r\n                        res.cookie('jwt',token,{httpOnly:true,maxAge:maxAge *1000})\r\n                        const decodeToken = await decode(token);\r\n                        const role = decodeToken.dbRole\r\n                        const emailfromtoken =decodeToken.email\r\n                       \r\n                       return res.status(200).json({\r\n                            stastus: 200,\r\n                            message: \"Login succefull\",\r\n                            data:{\r\n                                role,\r\n                                emailfromtoken,\r\n                                token\r\n                            }\r\n                        })\r\n                    }else{\r\n                        res.status(400).json({\r\n                            stastus: 400,\r\n                            message:\"Wrong Password\"\r\n                        })\r\n                    }\r\n                }else{\r\n                    res.status(400).json({\r\n                        stastus: 400,\r\n                        message:\"Wrong Email\"\r\n                    })\r\n                }\r\n            }\r\n            \r\n        } catch (error) {\r\n            res.status(500).json({\r\n                stastus: 500,\r\n                message:\"server problem\" +error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    static async update(req,res){\r\n        try {\r\n            // const hash = await bcrypt.hashSync(password, 10);\r\n            const userupdate = await User.findOne({ _id: req.params.id })\r\n            \r\n            if (req.body.Fullname) {\r\n                userupdate.Fullname = req.body.Fullname\r\n            }\r\n    \r\n            if (req.body.age) {\r\n                userupdate.age = req.body.age\r\n            }\r\n            if (req.body.email) {\r\n                userupdate.email = req.body.email\r\n            }\r\n            if (req.body.password) {\r\n                userupdate.password = req.body.password\r\n                \r\n            }\r\n           \r\n\r\n            await userupdate.save()\r\n            res.send( res.status(200).json({\r\n                status:200,\r\n                message:\"Account Updated Successfull\",\r\n                data: userupdate\r\n            }) \r\n            )\r\n        } catch {\r\n            res.send( res.status(404).json({\r\n                status:404,\r\n                error:\"Account doesn't exist!\",\r\n            }) \r\n            )\r\n        }\r\n    }\r\n}\r\nmodule.exports=authController;"],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"0f560628393c19710eb7136bf145bb2be390dd29"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2isaczunda=function(){return actualCoverage;};}return actualCoverage;}cov_2isaczunda();const User=(cov_2isaczunda().s[0]++,require("../models/users"));const bcrypt=(cov_2isaczunda().s[1]++,require("bcrypt"));const{encode,decode}=(cov_2isaczunda().s[2]++,require("../helper/jwtTokenize"));const dotenv=(cov_2isaczunda().s[3]++,require("dotenv"));cov_2isaczunda().s[4]++;dotenv.config();class authController{static async creatAccount(req,res){cov_2isaczunda().f[0]++;cov_2isaczunda().s[5]++;try{const{Fullname,age,email,password}=(cov_2isaczunda().s[6]++,req.body);// console.log("email:",email);
const hash=(cov_2isaczunda().s[7]++,await bcrypt.hashSync(password,10));const checkUser=(cov_2isaczunda().s[8]++,await User.findOne({email}));cov_2isaczunda().s[9]++;req.user=checkUser;// console.log("this:",checkUser)
cov_2isaczunda().s[10]++;if(req.user){cov_2isaczunda().b[0][0]++;cov_2isaczunda().s[11]++;return res.status(409).json({status:409,message:"Email already exist"});}else{cov_2isaczunda().b[0][1]++;const createDate=(cov_2isaczunda().s[12]++,await User.create({Fullname,age,email,role:"user",password:hash}));cov_2isaczunda().s[13]++;return res.status(200).json({status:200,message:"Account created",data:createDate});}}catch(error){cov_2isaczunda().s[14]++;res.status(500).json({status:500,message:"server problem:"+error.message});}}static async Login(req,res){cov_2isaczunda().f[1]++;cov_2isaczunda().s[15]++;try{const{email,password}=(cov_2isaczunda().s[16]++,req.body);const findUser=(cov_2isaczunda().s[17]++,await User.findOne({email}));cov_2isaczunda().s[18]++;req.user=findUser;cov_2isaczunda().s[19]++;if(!findUser){cov_2isaczunda().b[1][0]++;cov_2isaczunda().s[20]++;res.status(404).json({status:404,message:"Account don't exit"});}else{cov_2isaczunda().b[1][1]++;const dbEmail=(cov_2isaczunda().s[21]++,req.user.email);const dbPassword=(cov_2isaczunda().s[22]++,req.user.password);const dbRole=(cov_2isaczunda().s[23]++,req.user.role);const decreptedPassword=(cov_2isaczunda().s[24]++,await bcrypt.compare(password,dbPassword));// console.log("dec",decreptedPassword)
// console.log(dbEmail,dbPassword);
cov_2isaczunda().s[25]++;if(dbEmail==email){cov_2isaczunda().b[2][0]++;cov_2isaczunda().s[26]++;if(decreptedPassword){cov_2isaczunda().b[3][0]++;const token=(cov_2isaczunda().s[27]++,await encode({email,dbRole}));const maxAge=(cov_2isaczunda().s[28]++,3*24*60*60);cov_2isaczunda().s[29]++;res.cookie('jwt',token,{httpOnly:true,maxAge:maxAge*1000});const decodeToken=(cov_2isaczunda().s[30]++,await decode(token));const role=(cov_2isaczunda().s[31]++,decodeToken.dbRole);const emailfromtoken=(cov_2isaczunda().s[32]++,decodeToken.email);cov_2isaczunda().s[33]++;return res.status(200).json({stastus:200,message:"Login succefull",data:{role,emailfromtoken,token}});}else{cov_2isaczunda().b[3][1]++;cov_2isaczunda().s[34]++;res.status(400).json({stastus:400,message:"Wrong Password"});}}else{cov_2isaczunda().b[2][1]++;cov_2isaczunda().s[35]++;res.status(400).json({stastus:400,message:"Wrong Email"});}}}catch(error){cov_2isaczunda().s[36]++;res.status(500).json({stastus:500,message:"server problem"+error.message});}}static async update(req,res){cov_2isaczunda().f[2]++;cov_2isaczunda().s[37]++;try{// const hash = await bcrypt.hashSync(password, 10);
const userupdate=(cov_2isaczunda().s[38]++,await User.findOne({_id:req.params.id}));cov_2isaczunda().s[39]++;if(req.body.Fullname){cov_2isaczunda().b[4][0]++;cov_2isaczunda().s[40]++;userupdate.Fullname=req.body.Fullname;}else{cov_2isaczunda().b[4][1]++;}cov_2isaczunda().s[41]++;if(req.body.age){cov_2isaczunda().b[5][0]++;cov_2isaczunda().s[42]++;userupdate.age=req.body.age;}else{cov_2isaczunda().b[5][1]++;}cov_2isaczunda().s[43]++;if(req.body.email){cov_2isaczunda().b[6][0]++;cov_2isaczunda().s[44]++;userupdate.email=req.body.email;}else{cov_2isaczunda().b[6][1]++;}cov_2isaczunda().s[45]++;if(req.body.password){cov_2isaczunda().b[7][0]++;cov_2isaczunda().s[46]++;userupdate.password=req.body.password;}else{cov_2isaczunda().b[7][1]++;}cov_2isaczunda().s[47]++;await userupdate.save();cov_2isaczunda().s[48]++;res.send(res.status(200).json({status:200,message:"Account Updated Successfull",data:userupdate}));}catch{cov_2isaczunda().s[49]++;res.send(res.status(404).json({status:404,error:"Account doesn't exist!"}));}}}cov_2isaczunda().s[50]++;module.exports=authController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,