function cov_27alowdalj(){var path="E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\jwtTokenize.js";var hash="6e0b0eb83bc761192241d573e5271042ba786b77";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\jwtTokenize.js",statementMap:{"0":{start:{line:1,column:12},end:{line:1,column:35}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:0},end:{line:3,column:16}},"3":{start:{line:4,column:15},end:{line:9,column:1}},"4":{start:{line:5,column:16},end:{line:7,column:4}},"5":{start:{line:8,column:2},end:{line:8,column:15}},"6":{start:{line:10,column:15},end:{line:13,column:1}},"7":{start:{line:11,column:18},end:{line:11,column:59}},"8":{start:{line:12,column:2},end:{line:12,column:17}},"9":{start:{line:14,column:0},end:{line:17,column:2}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:15},end:{line:4,column:16}},loc:{start:{line:4,column:25},end:{line:9,column:1}},line:4},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:15},end:{line:10,column:16}},loc:{start:{line:10,column:24},end:{line:13,column:1}},line:10}},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0},f:{"0":0,"1":0},b:{},inputSourceMap:{version:3,names:["jwt","require","dotenv","config","encode","claims","token","sign","process","env","JWT_SECRET","expiresIn","decode","payload","verify","module","exports"],sourceRoot:"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\",sources:["jwtTokenize.js"],sourcesContent:["const jwt =require(\"jsonwebtoken\");\r\nconst dotenv= require(\"dotenv\");\r\n\r\n\r\n\r\ndotenv.config();\r\n\r\n const encode = (claims)=>{\r\n    const token= jwt.sign(claims, process.env.JWT_SECRET, { expiresIn: \"7d\"});\r\n    return token;\r\n};\r\n\r\n const decode=(token)=>{\r\n    const payload=jwt.verify(token, process.env.JWT_SECRET)\r\n    return payload;\r\n}\r\nmodule.exports = {encode,decode};"],mappings:"AAAA,MAAMA,GAAG,GAAEC,OAAO,CAAC,cAAc,CAAC;AAClC,MAAMC,MAAM,GAAED,OAAO,CAAC,QAAQ,CAAC;AAI/BC,MAAM,CAACC,MAAM,EAAE;AAEd,MAAMC,MAAM,GAAIC,MAAM,IAAG;EACtB,MAAMC,KAAK,GAAEN,GAAG,CAACO,IAAI,CAACF,MAAM,EAAEG,OAAO,CAACC,GAAG,CAACC,UAAU,EAAE;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC;EACzE,OAAOL,KAAK;AAChB,CAAC;AAEA,MAAMM,MAAM,GAAEN,KAAK,IAAG;EACnB,MAAMO,OAAO,GAACb,GAAG,CAACc,MAAM,CAACR,KAAK,EAAEE,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EACvD,OAAOG,OAAO;AAClB,CAAC;AACDE,MAAM,CAACC,OAAO,GAAG;EAACZ,MAAM;EAACQ;AAAM,CAAC"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"6e0b0eb83bc761192241d573e5271042ba786b77"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_27alowdalj=function(){return actualCoverage;};}return actualCoverage;}cov_27alowdalj();const jwt=(cov_27alowdalj().s[0]++,require("jsonwebtoken"));const dotenv=(cov_27alowdalj().s[1]++,require("dotenv"));cov_27alowdalj().s[2]++;dotenv.config();cov_27alowdalj().s[3]++;const encode=claims=>{cov_27alowdalj().f[0]++;const token=(cov_27alowdalj().s[4]++,jwt.sign(claims,process.env.JWT_SECRET,{expiresIn:"7d"}));cov_27alowdalj().s[5]++;return token;};cov_27alowdalj().s[6]++;const decode=token=>{cov_27alowdalj().f[1]++;const payload=(cov_27alowdalj().s[7]++,jwt.verify(token,process.env.JWT_SECRET));cov_27alowdalj().s[8]++;return payload;};cov_27alowdalj().s[9]++;module.exports={encode,decode};//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiZG90ZW52IiwiY29uZmlnIiwiZW5jb2RlIiwiY2xhaW1zIiwidG9rZW4iLCJzaWduIiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJleHBpcmVzSW4iLCJkZWNvZGUiLCJwYXlsb2FkIiwidmVyaWZ5IiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRTpcXGFuZGVsYVxcTmV3IEFuZGVsYVxcTVkgQlJBTkRcXFNFUlZFUlxcc3JjXFxoZWxwZXJcXCIsInNvdXJjZXMiOlsiand0VG9rZW5pemUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qgand0ID1yZXF1aXJlKFwianNvbndlYnRva2VuXCIpO1xyXG5jb25zdCBkb3RlbnY9IHJlcXVpcmUoXCJkb3RlbnZcIik7XHJcblxyXG5cclxuXHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbiBjb25zdCBlbmNvZGUgPSAoY2xhaW1zKT0+e1xyXG4gICAgY29uc3QgdG9rZW49IGp3dC5zaWduKGNsYWltcywgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCwgeyBleHBpcmVzSW46IFwiN2RcIn0pO1xyXG4gICAgcmV0dXJuIHRva2VuO1xyXG59O1xyXG5cclxuIGNvbnN0IGRlY29kZT0odG9rZW4pPT57XHJcbiAgICBjb25zdCBwYXlsb2FkPWp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpXHJcbiAgICByZXR1cm4gcGF5bG9hZDtcclxufVxyXG5tb2R1bGUuZXhwb3J0cyA9IHtlbmNvZGUsZGVjb2RlfTsiXSwibWFwcGluZ3MiOiJBQUFBLE1BQU1BLEdBQUcsR0FBRUMsT0FBTyxDQUFDLGNBQWMsQ0FBQztBQUNsQyxNQUFNQyxNQUFNLEdBQUVELE9BQU8sQ0FBQyxRQUFRLENBQUM7QUFJL0JDLE1BQU0sQ0FBQ0MsTUFBTSxFQUFFO0FBRWQsTUFBTUMsTUFBTSxHQUFJQyxNQUFNLElBQUc7RUFDdEIsTUFBTUMsS0FBSyxHQUFFTixHQUFHLENBQUNPLElBQUksQ0FBQ0YsTUFBTSxFQUFFRyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxFQUFFO0lBQUVDLFNBQVMsRUFBRTtFQUFJLENBQUMsQ0FBQztFQUN6RSxPQUFPTCxLQUFLO0FBQ2hCLENBQUM7QUFFQSxNQUFNTSxNQUFNLEdBQUVOLEtBQUssSUFBRztFQUNuQixNQUFNTyxPQUFPLEdBQUNiLEdBQUcsQ0FBQ2MsTUFBTSxDQUFDUixLQUFLLEVBQUVFLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxVQUFVLENBQUM7RUFDdkQsT0FBT0csT0FBTztBQUNsQixDQUFDO0FBQ0RFLE1BQU0sQ0FBQ0MsT0FBTyxHQUFHO0VBQUNaLE1BQU07RUFBQ1E7QUFBTSxDQUFDIn0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Im1zRkFnQnlCQTtBQUFBQSwyRkFoQnpCLEtBQU1DLElBQUcsMEJBQUVDLE9BQU8sQ0FBQyxjQUFjLENBQUMsRUFDbEMsS0FBTUMsT0FBTSwwQkFBRUQsT0FBTyxDQUFDLFFBQVEsQ0FBQywwQkFJL0JDLE1BQU0sQ0FBQ0MsTUFBTSxFQUFFLHlCQUVkLEtBQU1DLE9BQU0sQ0FBSUMsTUFBTSxFQUFHLHlCQUN0QixLQUFNQyxNQUFLLDBCQUFFTixHQUFHLENBQUNPLElBQUksQ0FBQ0YsTUFBTSxDQUFFRyxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxDQUFFLENBQUVDLFNBQVMsQ0FBRSxJQUFJLENBQUMsQ0FBQywwQkFDekUsTUFBT0wsTUFBSyxDQUNoQixDQUFDLHlCQUVBLEtBQU1QLE9BQU0sQ0FBRU8sS0FBSyxFQUFHLHlCQUNuQixLQUFNTSxRQUFPLDBCQUFDWixHQUFHLENBQUNhLE1BQU0sQ0FBQ1AsS0FBSyxDQUFFRSxPQUFPLENBQUNDLEdBQUcsQ0FBQ0MsVUFBVSxDQUFDLDBCQUN2RCxNQUFPRSxRQUFPLENBQ2xCLENBQUMseUJBQ0RFLE1BQU0sQ0FBQ0MsT0FBTyxDQUFHLENBQUNYLE1BQU0sQ0FBQ0wsTUFBTSxDQUFDIiwibmFtZXMiOlsiZGVjb2RlIiwiand0IiwicmVxdWlyZSIsImRvdGVudiIsImNvbmZpZyIsImVuY29kZSIsImNsYWltcyIsInRva2VuIiwic2lnbiIsInByb2Nlc3MiLCJlbnYiLCJKV1RfU0VDUkVUIiwiZXhwaXJlc0luIiwicGF5bG9hZCIsInZlcmlmeSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkU6XFxhbmRlbGFcXE5ldyBBbmRlbGFcXE1ZIEJSQU5EXFxTRVJWRVJcXHNyY1xcaGVscGVyXFwiLCJzb3VyY2VzIjpbImp3dFRva2VuaXplLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dCA9cmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcclxuY29uc3QgZG90ZW52PSByZXF1aXJlKFwiZG90ZW52XCIpO1xyXG5cclxuXHJcblxyXG5kb3RlbnYuY29uZmlnKCk7XHJcblxyXG4gY29uc3QgZW5jb2RlID0gKGNsYWltcyk9PntcclxuICAgIGNvbnN0IHRva2VuPSBqd3Quc2lnbihjbGFpbXMsIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQsIHsgZXhwaXJlc0luOiBcIjdkXCJ9KTtcclxuICAgIHJldHVybiB0b2tlbjtcclxufTtcclxuXHJcbiBjb25zdCBkZWNvZGU9KHRva2VuKT0+e1xyXG4gICAgY29uc3QgcGF5bG9hZD1qd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKVxyXG4gICAgcmV0dXJuIHBheWxvYWQ7XHJcbn1cclxubW9kdWxlLmV4cG9ydHMgPSB7ZW5jb2RlLGRlY29kZX07Il19