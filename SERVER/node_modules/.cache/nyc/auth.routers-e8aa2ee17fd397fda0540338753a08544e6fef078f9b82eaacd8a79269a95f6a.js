function cov_2wcl17xf9(){var path="E:\\andela\\New Andela\\node_mongo_tutorial\\src\\routers\\auth.routers.js";var hash="278a2387f6d2c081e2a9eb5a3052b5dc772d195f";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\routers\\auth.routers.js",statementMap:{"0":{start:{line:89,column:15},end:{line:89,column:42}},"1":{start:{line:90,column:23},end:{line:90,column:63}},"2":{start:{line:91,column:19},end:{line:91,column:55}},"3":{start:{line:92,column:0},end:{line:92,column:64}},"4":{start:{line:93,column:0},end:{line:93,column:44}},"5":{start:{line:94,column:0},end:{line:94,column:42}},"6":{start:{line:95,column:0},end:{line:95,column:24}}},fnMap:{},branchMap:{},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},f:{},b:{},inputSourceMap:{version:3,names:["router","require","Router","authController","validation","post","creatAccount","Login","put","update","module","exports"],sourceRoot:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\routers\\",sources:["auth.routers.js"],sourcesContent:["/**\r\n * @swagger\r\n * tags:\r\n *   name: User\r\n *   description: This is the Users API\r\n * /auth/signup:\r\n *   post:\r\n *     summary: SignUp user \r\n *     tags: [User]\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               Fullname:\r\n *                 type: string\r\n *               age:\r\n *                 type: string\r\n *               email:\r\n *                 type: string\r\n *               password:\r\n *                 type: string\r\n *             example:\r\n *               fullname: \"Mirindi Saidi\"\r\n *               age: \"23\"\r\n *               email: \"mirindisaidi@mail.com\"\r\n *               password: \"Password@1\"\r\n *     responses:\r\n *       200:\r\n *         description: SignUp Successfull.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n * /auth/login:\r\n *   post:\r\n *     summary: Login a user \r\n *     tags: [User]\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *               password:\r\n *                 type: string\r\n *             example:\r\n *               email: \"mirindisaidi@mail.com\"\r\n *               password: \"Password@1\"\r\n *     responses:\r\n *       200:\r\n *         description: Login Successfull.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n *\r\n */\r\n\r\nconst router=require(\"express\").Router();\r\nconst authController=require(\"../controllers/authController\");\r\nconst validation=require(\"../middlewares/validation\");\r\nrouter.post(\"/signup\",validation,authController.creatAccount);\r\nrouter.post(\"/login\",authController.Login);\r\nrouter.put(\"/:id\",authController.update);\r\nmodule.exports =router;"],mappings:"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,MAAM,GAACC,OAAO,CAAC,SAAS,CAAC,CAACC,MAAM,EAAE;AACxC,MAAMC,cAAc,GAACF,OAAO,CAAC,+BAA+B,CAAC;AAC7D,MAAMG,UAAU,GAACH,OAAO,CAAC,2BAA2B,CAAC;AACrDD,MAAM,CAACK,IAAI,CAAC,SAAS,EAACD,UAAU,EAACD,cAAc,CAACG,YAAY,CAAC;AAC7DN,MAAM,CAACK,IAAI,CAAC,QAAQ,EAACF,cAAc,CAACI,KAAK,CAAC;AAC1CP,MAAM,CAACQ,GAAG,CAAC,MAAM,EAACL,cAAc,CAACM,MAAM,CAAC;AACxCC,MAAM,CAACC,OAAO,GAAEX,MAAM"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"278a2387f6d2c081e2a9eb5a3052b5dc772d195f"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_2wcl17xf9=function(){return actualCoverage;};}return actualCoverage;}cov_2wcl17xf9();/**
 * @swagger
 * tags:
 *   name: User
 *   description: This is the Users API
 * /auth/signup:
 *   post:
 *     summary: SignUp user 
 *     tags: [User]
 *     requestBody:
 *       required: true
 *       content: 
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - email
 *               - password
 *             properties:
 *               Fullname:
 *                 type: string
 *               age:
 *                 type: string
 *               email:
 *                 type: string
 *               password:
 *                 type: string
 *             example:
 *               fullname: "Mirindi Saidi"
 *               age: "23"
 *               email: "mirindisaidi@mail.com"
 *               password: "Password@1"
 *     responses:
 *       200:
 *         description: SignUp Successfull.
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties: 
 *                 status:
 *                  type: integer
 *                 message:
 *                  type: string
 *                 data:
 *                  type: object
 *       500:
 *         description: Some server error
 * /auth/login:
 *   post:
 *     summary: Login a user 
 *     tags: [User]
 *     requestBody:
 *       required: true
 *       content: 
 *         application/json:
 *           schema:
 *             type: object
 *             required:
 *               - email
 *               - password
 *             properties:
 *               email:
 *                 type: string
 *               password:
 *                 type: string
 *             example:
 *               email: "mirindisaidi@mail.com"
 *               password: "Password@1"
 *     responses:
 *       200:
 *         description: Login Successfull.
 *         content:
 *           application/json:
 *             schema:
 *               type: object
 *               properties: 
 *                 status:
 *                  type: integer
 *                 message:
 *                  type: string
 *                 data:
 *                  type: object
 *       500:
 *         description: Some server error
 *
 */const router=(cov_2wcl17xf9().s[0]++,require("express").Router());const authController=(cov_2wcl17xf9().s[1]++,require("../controllers/authController"));const validation=(cov_2wcl17xf9().s[2]++,require("../middlewares/validation"));cov_2wcl17xf9().s[3]++;router.post("/signup",validation,authController.creatAccount);cov_2wcl17xf9().s[4]++;router.post("/login",authController.Login);cov_2wcl17xf9().s[5]++;router.put("/:id",authController.update);cov_2wcl17xf9().s[6]++;module.exports=router;//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJyb3V0ZXIiLCJyZXF1aXJlIiwiUm91dGVyIiwiYXV0aENvbnRyb2xsZXIiLCJ2YWxpZGF0aW9uIiwicG9zdCIsImNyZWF0QWNjb3VudCIsIkxvZ2luIiwicHV0IiwidXBkYXRlIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRTpcXGFuZGVsYVxcTmV3IEFuZGVsYVxcbm9kZV9tb25nb190dXRvcmlhbFxcc3JjXFxyb3V0ZXJzXFwiLCJzb3VyY2VzIjpbImF1dGgucm91dGVycy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQHN3YWdnZXJcclxuICogdGFnczpcclxuICogICBuYW1lOiBVc2VyXHJcbiAqICAgZGVzY3JpcHRpb246IFRoaXMgaXMgdGhlIFVzZXJzIEFQSVxyXG4gKiAvYXV0aC9zaWdudXA6XHJcbiAqICAgcG9zdDpcclxuICogICAgIHN1bW1hcnk6IFNpZ25VcCB1c2VyIFxyXG4gKiAgICAgdGFnczogW1VzZXJdXHJcbiAqICAgICByZXF1ZXN0Qm9keTpcclxuICogICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICogICAgICAgY29udGVudDogXHJcbiAqICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgIHJlcXVpcmVkOlxyXG4gKiAgICAgICAgICAgICAgIC0gZW1haWxcclxuICogICAgICAgICAgICAgICAtIHBhc3N3b3JkXHJcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgRnVsbG5hbWU6XHJcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICBhZ2U6XHJcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICBlbWFpbDpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgIHBhc3N3b3JkOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgIGV4YW1wbGU6XHJcbiAqICAgICAgICAgICAgICAgZnVsbG5hbWU6IFwiTWlyaW5kaSBTYWlkaVwiXHJcbiAqICAgICAgICAgICAgICAgYWdlOiBcIjIzXCJcclxuICogICAgICAgICAgICAgICBlbWFpbDogXCJtaXJpbmRpc2FpZGlAbWFpbC5jb21cIlxyXG4gKiAgICAgICAgICAgICAgIHBhc3N3b3JkOiBcIlBhc3N3b3JkQDFcIlxyXG4gKiAgICAgcmVzcG9uc2VzOlxyXG4gKiAgICAgICAyMDA6XHJcbiAqICAgICAgICAgZGVzY3JpcHRpb246IFNpZ25VcCBTdWNjZXNzZnVsbC5cclxuICogICAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IFxyXG4gKiAgICAgICAgICAgICAgICAgc3RhdHVzOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXJcclxuICogICAgICAgICAgICAgICAgIG1lc3NhZ2U6XHJcbiAqICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgICBkYXRhOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICA1MDA6XHJcbiAqICAgICAgICAgZGVzY3JpcHRpb246IFNvbWUgc2VydmVyIGVycm9yXHJcbiAqIC9hdXRoL2xvZ2luOlxyXG4gKiAgIHBvc3Q6XHJcbiAqICAgICBzdW1tYXJ5OiBMb2dpbiBhIHVzZXIgXHJcbiAqICAgICB0YWdzOiBbVXNlcl1cclxuICogICAgIHJlcXVlc3RCb2R5OlxyXG4gKiAgICAgICByZXF1aXJlZDogdHJ1ZVxyXG4gKiAgICAgICBjb250ZW50OiBcclxuICogICAgICAgICBhcHBsaWNhdGlvbi9qc29uOlxyXG4gKiAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgICAgICAgcmVxdWlyZWQ6XHJcbiAqICAgICAgICAgICAgICAgLSBlbWFpbFxyXG4gKiAgICAgICAgICAgICAgIC0gcGFzc3dvcmRcclxuICogICAgICAgICAgICAgcHJvcGVydGllczpcclxuICogICAgICAgICAgICAgICBlbWFpbDpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgIHBhc3N3b3JkOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgIGV4YW1wbGU6XHJcbiAqICAgICAgICAgICAgICAgZW1haWw6IFwibWlyaW5kaXNhaWRpQG1haWwuY29tXCJcclxuICogICAgICAgICAgICAgICBwYXNzd29yZDogXCJQYXNzd29yZEAxXCJcclxuICogICAgIHJlc3BvbnNlczpcclxuICogICAgICAgMjAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBMb2dpbiBTdWNjZXNzZnVsbC5cclxuICogICAgICAgICBjb250ZW50OlxyXG4gKiAgICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgICAgc2NoZW1hOlxyXG4gKiAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICAgIHByb3BlcnRpZXM6IFxyXG4gKiAgICAgICAgICAgICAgICAgc3RhdHVzOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IGludGVnZXJcclxuICogICAgICAgICAgICAgICAgIG1lc3NhZ2U6XHJcbiAqICAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgICBkYXRhOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICA1MDA6XHJcbiAqICAgICAgICAgZGVzY3JpcHRpb246IFNvbWUgc2VydmVyIGVycm9yXHJcbiAqXHJcbiAqL1xyXG5cclxuY29uc3Qgcm91dGVyPXJlcXVpcmUoXCJleHByZXNzXCIpLlJvdXRlcigpO1xyXG5jb25zdCBhdXRoQ29udHJvbGxlcj1yZXF1aXJlKFwiLi4vY29udHJvbGxlcnMvYXV0aENvbnRyb2xsZXJcIik7XHJcbmNvbnN0IHZhbGlkYXRpb249cmVxdWlyZShcIi4uL21pZGRsZXdhcmVzL3ZhbGlkYXRpb25cIik7XHJcbnJvdXRlci5wb3N0KFwiL3NpZ251cFwiLHZhbGlkYXRpb24sYXV0aENvbnRyb2xsZXIuY3JlYXRBY2NvdW50KTtcclxucm91dGVyLnBvc3QoXCIvbG9naW5cIixhdXRoQ29udHJvbGxlci5Mb2dpbik7XHJcbnJvdXRlci5wdXQoXCIvOmlkXCIsYXV0aENvbnRyb2xsZXIudXBkYXRlKTtcclxubW9kdWxlLmV4cG9ydHMgPXJvdXRlcjsiXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQSxNQUFNQSxNQUFNLEdBQUNDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ0MsTUFBTSxFQUFFO0FBQ3hDLE1BQU1DLGNBQWMsR0FBQ0YsT0FBTyxDQUFDLCtCQUErQixDQUFDO0FBQzdELE1BQU1HLFVBQVUsR0FBQ0gsT0FBTyxDQUFDLDJCQUEyQixDQUFDO0FBQ3JERCxNQUFNLENBQUNLLElBQUksQ0FBQyxTQUFTLEVBQUNELFVBQVUsRUFBQ0QsY0FBYyxDQUFDRyxZQUFZLENBQUM7QUFDN0ROLE1BQU0sQ0FBQ0ssSUFBSSxDQUFDLFFBQVEsRUFBQ0YsY0FBYyxDQUFDSSxLQUFLLENBQUM7QUFDMUNQLE1BQU0sQ0FBQ1EsR0FBRyxDQUFDLE1BQU0sRUFBQ0wsY0FBYyxDQUFDTSxNQUFNLENBQUM7QUFDeENDLE1BQU0sQ0FBQ0MsT0FBTyxHQUFFWCxNQUFNIn0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6Ijg4SkFlQTtBQUFBLHlGQWZBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxHQUVBLEtBQU1BLE9BQU0seUJBQUNDLE9BQU8sQ0FBQyxTQUFTLENBQUMsQ0FBQ0MsTUFBTSxFQUFFLEVBQ3hDLEtBQU1DLGVBQWMseUJBQUNGLE9BQU8sQ0FBQywrQkFBK0IsQ0FBQyxFQUM3RCxLQUFNRyxXQUFVLHlCQUFDSCxPQUFPLENBQUMsMkJBQTJCLENBQUMseUJBQ3JERCxNQUFNLENBQUNLLElBQUksQ0FBQyxTQUFTLENBQUNELFVBQVUsQ0FBQ0QsY0FBYyxDQUFDRyxZQUFZLENBQUMsd0JBQzdETixNQUFNLENBQUNLLElBQUksQ0FBQyxRQUFRLENBQUNGLGNBQWMsQ0FBQ0ksS0FBSyxDQUFDLHdCQUMxQ1AsTUFBTSxDQUFDUSxHQUFHLENBQUMsTUFBTSxDQUFDTCxjQUFjLENBQUNNLE1BQU0sQ0FBQyx3QkFDeENDLE1BQU0sQ0FBQ0MsT0FBTyxDQUFFWCxNQUFNIiwibmFtZXMiOlsicm91dGVyIiwicmVxdWlyZSIsIlJvdXRlciIsImF1dGhDb250cm9sbGVyIiwidmFsaWRhdGlvbiIsInBvc3QiLCJjcmVhdEFjY291bnQiLCJMb2dpbiIsInB1dCIsInVwZGF0ZSIsIm1vZHVsZSIsImV4cG9ydHMiXSwic291cmNlUm9vdCI6IkU6XFxhbmRlbGFcXE5ldyBBbmRlbGFcXG5vZGVfbW9uZ29fdHV0b3JpYWxcXHNyY1xccm91dGVyc1xcIiwic291cmNlcyI6WyJhdXRoLnJvdXRlcnMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIEBzd2FnZ2VyXHJcbiAqIHRhZ3M6XHJcbiAqICAgbmFtZTogVXNlclxyXG4gKiAgIGRlc2NyaXB0aW9uOiBUaGlzIGlzIHRoZSBVc2VycyBBUElcclxuICogL2F1dGgvc2lnbnVwOlxyXG4gKiAgIHBvc3Q6XHJcbiAqICAgICBzdW1tYXJ5OiBTaWduVXAgdXNlciBcclxuICogICAgIHRhZ3M6IFtVc2VyXVxyXG4gKiAgICAgcmVxdWVzdEJvZHk6XHJcbiAqICAgICAgIHJlcXVpcmVkOiB0cnVlXHJcbiAqICAgICAgIGNvbnRlbnQ6IFxyXG4gKiAgICAgICAgIGFwcGxpY2F0aW9uL2pzb246XHJcbiAqICAgICAgICAgICBzY2hlbWE6XHJcbiAqICAgICAgICAgICAgIHR5cGU6IG9iamVjdFxyXG4gKiAgICAgICAgICAgICByZXF1aXJlZDpcclxuICogICAgICAgICAgICAgICAtIGVtYWlsXHJcbiAqICAgICAgICAgICAgICAgLSBwYXNzd29yZFxyXG4gKiAgICAgICAgICAgICBwcm9wZXJ0aWVzOlxyXG4gKiAgICAgICAgICAgICAgIEZ1bGxuYW1lOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgYWdlOlxyXG4gKiAgICAgICAgICAgICAgICAgdHlwZTogc3RyaW5nXHJcbiAqICAgICAgICAgICAgICAgZW1haWw6XHJcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICBwYXNzd29yZDpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICBleGFtcGxlOlxyXG4gKiAgICAgICAgICAgICAgIGZ1bGxuYW1lOiBcIk1pcmluZGkgU2FpZGlcIlxyXG4gKiAgICAgICAgICAgICAgIGFnZTogXCIyM1wiXHJcbiAqICAgICAgICAgICAgICAgZW1haWw6IFwibWlyaW5kaXNhaWRpQG1haWwuY29tXCJcclxuICogICAgICAgICAgICAgICBwYXNzd29yZDogXCJQYXNzd29yZEAxXCJcclxuICogICAgIHJlc3BvbnNlczpcclxuICogICAgICAgMjAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTaWduVXAgU3VjY2Vzc2Z1bGwuXHJcbiAqICAgICAgICAgY29udGVudDpcclxuICogICAgICAgICAgIGFwcGxpY2F0aW9uL2pzb246XHJcbiAqICAgICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiBcclxuICogICAgICAgICAgICAgICAgIHN0YXR1czpcclxuICogICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyXHJcbiAqICAgICAgICAgICAgICAgICBtZXNzYWdlOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgZGF0YTpcclxuICogICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgNTAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTb21lIHNlcnZlciBlcnJvclxyXG4gKiAvYXV0aC9sb2dpbjpcclxuICogICBwb3N0OlxyXG4gKiAgICAgc3VtbWFyeTogTG9naW4gYSB1c2VyIFxyXG4gKiAgICAgdGFnczogW1VzZXJdXHJcbiAqICAgICByZXF1ZXN0Qm9keTpcclxuICogICAgICAgcmVxdWlyZWQ6IHRydWVcclxuICogICAgICAgY29udGVudDogXHJcbiAqICAgICAgICAgYXBwbGljYXRpb24vanNvbjpcclxuICogICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgdHlwZTogb2JqZWN0XHJcbiAqICAgICAgICAgICAgIHJlcXVpcmVkOlxyXG4gKiAgICAgICAgICAgICAgIC0gZW1haWxcclxuICogICAgICAgICAgICAgICAtIHBhc3N3b3JkXHJcbiAqICAgICAgICAgICAgIHByb3BlcnRpZXM6XHJcbiAqICAgICAgICAgICAgICAgZW1haWw6XHJcbiAqICAgICAgICAgICAgICAgICB0eXBlOiBzdHJpbmdcclxuICogICAgICAgICAgICAgICBwYXNzd29yZDpcclxuICogICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICBleGFtcGxlOlxyXG4gKiAgICAgICAgICAgICAgIGVtYWlsOiBcIm1pcmluZGlzYWlkaUBtYWlsLmNvbVwiXHJcbiAqICAgICAgICAgICAgICAgcGFzc3dvcmQ6IFwiUGFzc3dvcmRAMVwiXHJcbiAqICAgICByZXNwb25zZXM6XHJcbiAqICAgICAgIDIwMDpcclxuICogICAgICAgICBkZXNjcmlwdGlvbjogTG9naW4gU3VjY2Vzc2Z1bGwuXHJcbiAqICAgICAgICAgY29udGVudDpcclxuICogICAgICAgICAgIGFwcGxpY2F0aW9uL2pzb246XHJcbiAqICAgICAgICAgICAgIHNjaGVtYTpcclxuICogICAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgICAgICAgICBwcm9wZXJ0aWVzOiBcclxuICogICAgICAgICAgICAgICAgIHN0YXR1czpcclxuICogICAgICAgICAgICAgICAgICB0eXBlOiBpbnRlZ2VyXHJcbiAqICAgICAgICAgICAgICAgICBtZXNzYWdlOlxyXG4gKiAgICAgICAgICAgICAgICAgIHR5cGU6IHN0cmluZ1xyXG4gKiAgICAgICAgICAgICAgICAgZGF0YTpcclxuICogICAgICAgICAgICAgICAgICB0eXBlOiBvYmplY3RcclxuICogICAgICAgNTAwOlxyXG4gKiAgICAgICAgIGRlc2NyaXB0aW9uOiBTb21lIHNlcnZlciBlcnJvclxyXG4gKlxyXG4gKi9cclxuXHJcbmNvbnN0IHJvdXRlcj1yZXF1aXJlKFwiZXhwcmVzc1wiKS5Sb3V0ZXIoKTtcclxuY29uc3QgYXV0aENvbnRyb2xsZXI9cmVxdWlyZShcIi4uL2NvbnRyb2xsZXJzL2F1dGhDb250cm9sbGVyXCIpO1xyXG5jb25zdCB2YWxpZGF0aW9uPXJlcXVpcmUoXCIuLi9taWRkbGV3YXJlcy92YWxpZGF0aW9uXCIpO1xyXG5yb3V0ZXIucG9zdChcIi9zaWdudXBcIix2YWxpZGF0aW9uLGF1dGhDb250cm9sbGVyLmNyZWF0QWNjb3VudCk7XHJcbnJvdXRlci5wb3N0KFwiL2xvZ2luXCIsYXV0aENvbnRyb2xsZXIuTG9naW4pO1xyXG5yb3V0ZXIucHV0KFwiLzppZFwiLGF1dGhDb250cm9sbGVyLnVwZGF0ZSk7XHJcbm1vZHVsZS5leHBvcnRzID1yb3V0ZXI7Il19