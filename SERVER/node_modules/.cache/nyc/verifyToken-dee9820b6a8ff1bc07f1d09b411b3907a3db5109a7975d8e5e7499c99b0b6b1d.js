function cov_1ed3lubjti(){var path="E:\\andela\\New Andela\\node_mongo_tutorial\\src\\middlewares\\verifyToken.js";var hash="48397d7372fea0fcd41691863c16cf533269530a";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\middlewares\\verifyToken.js",statementMap:{"0":{start:{line:1,column:12},end:{line:1,column:35}},"1":{start:{line:2,column:15},end:{line:2,column:32}},"2":{start:{line:3,column:0},end:{line:3,column:16}},"3":{start:{line:4,column:20},end:{line:18,column:1}},"4":{start:{line:5,column:16},end:{line:5,column:36}},"5":{start:{line:7,column:2},end:{line:9,column:3}},"6":{start:{line:8,column:4},end:{line:8,column:74}},"7":{start:{line:10,column:2},end:{line:16,column:3}},"8":{start:{line:11,column:20},end:{line:11,column:61}},"9":{start:{line:12,column:4},end:{line:12,column:23}},"10":{start:{line:15,column:4},end:{line:15,column:49}},"11":{start:{line:17,column:2},end:{line:17,column:16}},"12":{start:{line:19,column:0},end:{line:19,column:29}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:4,column:20},end:{line:4,column:21}},loc:{start:{line:4,column:46},end:{line:18,column:1}},line:4}},branchMap:{"0":{loc:{start:{line:7,column:2},end:{line:9,column:3}},type:"if",locations:[{start:{line:7,column:2},end:{line:9,column:3}},{start:{line:7,column:2},end:{line:9,column:3}}],line:7}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},f:{"0":0},b:{"0":[0,0]},inputSourceMap:{version:3,names:["jwt","require","dotenv","config","verifyToken","req","res","next","token","headers","status","send","decoded","verify","process","env","JWT_SECRET","user","err","module","exports"],sourceRoot:"E:\\andela\\New Andela\\node_mongo_tutorial\\src\\middlewares\\",sources:["verifyToken.js"],sourcesContent:["const jwt=require(\"jsonwebtoken\");\r\nconst dotenv=require(\"dotenv\");\r\ndotenv.config();\r\n\r\nconst verifyToken=async(req, res, next)=>{\r\nconst token=req.headers['token']\r\n//const token=authHeader && authHeader.split('')[1]\r\nif (!token) {\r\n    return res.status(403).send(\"A token is required for authentication\");\r\n  }\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n    req.user = decoded;\r\n    // console.log(req.user)\r\n  } catch (err) {\r\n    return res.status(401).send(\"Invalid Token\");\r\n  }\r\n  return next();\r\n\r\n}\r\nmodule.exports=verifyToken;\r\n\r\n\r\n\r\n// const jwt=require(\"jsonwebtoken\");\r\n// const dotenv=require(\"dotenv\");\r\n// dotenv.config();\r\n\r\n// const verifyToken=async(req, res, next)=>{\r\n// // const token=req.headers['token']\r\n// //const token=authHeader && authHeader.split('')[1]\r\n// const token = req.cookies.jwt\r\n// if(token){\r\n//     jwt.verify(token,'mirinditokensecrete',(err,decodedtoken)=>{\r\n//         if(err){\r\n//             res.status(401).json({\"Error\":\"Please Login First !!!\"})\r\n//         }\r\n//         if(decodedtoken){\r\n//              next()\r\n//         }\r\n//     })\r\n// }else{\r\n//     res.status(401).json({\"Message\":\"Please Login First !!!\"})\r\n//  }\r\n// // if (!token) {\r\n// //     return res.status(404).send(\"A token is required for authentication\");\r\n// //   }\r\n// //   try {\r\n// //     const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n// //     req.user = decoded;\r\n// //     // console.log(req.user)\r\n// //   } catch (err) {\r\n// //     return res.status(401).send(\"Invalid Token\");\r\n// //   }\r\n// //   return next();\r\n\r\n// }\r\n// module.exports=verifyToken;\r\n\r\n"],mappings:"AAAA,MAAMA,GAAG,GAACC,OAAO,CAAC,cAAc,CAAC;AACjC,MAAMC,MAAM,GAACD,OAAO,CAAC,QAAQ,CAAC;AAC9BC,MAAM,CAACC,MAAM,EAAE;AAEf,MAAMC,WAAW,GAAC,OAAMC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAG;EACzC,MAAMC,KAAK,GAACH,GAAG,CAACI,OAAO,CAAC,OAAO,CAAC;EAChC;EACA,IAAI,CAACD,KAAK,EAAE;IACR,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,wCAAwC,CAAC;EACvE;EACA,IAAI;IACF,MAAMC,OAAO,GAAGZ,GAAG,CAACa,MAAM,CAACL,KAAK,EAAEM,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACzDX,GAAG,CAACY,IAAI,GAAGL,OAAO;IAClB;EACF,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,OAAOZ,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;EAC9C;EACA,OAAOJ,IAAI,EAAE;AAEf,CAAC;AACDY,MAAM,CAACC,OAAO,GAAChB,WAAW;;AAI1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"48397d7372fea0fcd41691863c16cf533269530a"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_1ed3lubjti=function(){return actualCoverage;};}return actualCoverage;}cov_1ed3lubjti();const jwt=(cov_1ed3lubjti().s[0]++,require("jsonwebtoken"));const dotenv=(cov_1ed3lubjti().s[1]++,require("dotenv"));cov_1ed3lubjti().s[2]++;dotenv.config();cov_1ed3lubjti().s[3]++;const verifyToken=async(req,res,next)=>{cov_1ed3lubjti().f[0]++;const token=(cov_1ed3lubjti().s[4]++,req.headers['token']);//const token=authHeader && authHeader.split('')[1]
cov_1ed3lubjti().s[5]++;if(!token){cov_1ed3lubjti().b[0][0]++;cov_1ed3lubjti().s[6]++;return res.status(403).send("A token is required for authentication");}else{cov_1ed3lubjti().b[0][1]++;}cov_1ed3lubjti().s[7]++;try{const decoded=(cov_1ed3lubjti().s[8]++,jwt.verify(token,process.env.JWT_SECRET));cov_1ed3lubjti().s[9]++;req.user=decoded;// console.log(req.user)
}catch(err){cov_1ed3lubjti().s[10]++;return res.status(401).send("Invalid Token");}cov_1ed3lubjti().s[11]++;return next();};cov_1ed3lubjti().s[12]++;module.exports=verifyToken;// const jwt=require("jsonwebtoken");
// const dotenv=require("dotenv");
// dotenv.config();
// const verifyToken=async(req, res, next)=>{
// // const token=req.headers['token']
// //const token=authHeader && authHeader.split('')[1]
// const token = req.cookies.jwt
// if(token){
//     jwt.verify(token,'mirinditokensecrete',(err,decodedtoken)=>{
//         if(err){
//             res.status(401).json({"Error":"Please Login First !!!"})
//         }
//         if(decodedtoken){
//              next()
//         }
//     })
// }else{
//     res.status(401).json({"Message":"Please Login First !!!"})
//  }
// // if (!token) {
// //     return res.status(404).send("A token is required for authentication");
// //   }
// //   try {
// //     const decoded = jwt.verify(token, process.env.JWT_SECRET);
// //     req.user = decoded;
// //     // console.log(req.user)
// //   } catch (err) {
// //     return res.status(401).send("Invalid Token");
// //   }
// //   return next();
// }
// module.exports=verifyToken;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJqd3QiLCJyZXF1aXJlIiwiZG90ZW52IiwiY29uZmlnIiwidmVyaWZ5VG9rZW4iLCJyZXEiLCJyZXMiLCJuZXh0IiwidG9rZW4iLCJoZWFkZXJzIiwic3RhdHVzIiwic2VuZCIsImRlY29kZWQiLCJ2ZXJpZnkiLCJwcm9jZXNzIiwiZW52IiwiSldUX1NFQ1JFVCIsInVzZXIiLCJlcnIiLCJtb2R1bGUiLCJleHBvcnRzIl0sInNvdXJjZVJvb3QiOiJFOlxcYW5kZWxhXFxOZXcgQW5kZWxhXFxub2RlX21vbmdvX3R1dG9yaWFsXFxzcmNcXG1pZGRsZXdhcmVzXFwiLCJzb3VyY2VzIjpbInZlcmlmeVRva2VuLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IGp3dD1yZXF1aXJlKFwianNvbndlYnRva2VuXCIpO1xyXG5jb25zdCBkb3RlbnY9cmVxdWlyZShcImRvdGVudlwiKTtcclxuZG90ZW52LmNvbmZpZygpO1xyXG5cclxuY29uc3QgdmVyaWZ5VG9rZW49YXN5bmMocmVxLCByZXMsIG5leHQpPT57XHJcbmNvbnN0IHRva2VuPXJlcS5oZWFkZXJzWyd0b2tlbiddXHJcbi8vY29uc3QgdG9rZW49YXV0aEhlYWRlciAmJiBhdXRoSGVhZGVyLnNwbGl0KCcnKVsxXVxyXG5pZiAoIXRva2VuKSB7XHJcbiAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDMpLnNlbmQoXCJBIHRva2VuIGlzIHJlcXVpcmVkIGZvciBhdXRoZW50aWNhdGlvblwiKTtcclxuICB9XHJcbiAgdHJ5IHtcclxuICAgIGNvbnN0IGRlY29kZWQgPSBqd3QudmVyaWZ5KHRva2VuLCBwcm9jZXNzLmVudi5KV1RfU0VDUkVUKTtcclxuICAgIHJlcS51c2VyID0gZGVjb2RlZDtcclxuICAgIC8vIGNvbnNvbGUubG9nKHJlcS51c2VyKVxyXG4gIH0gY2F0Y2ggKGVycikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAxKS5zZW5kKFwiSW52YWxpZCBUb2tlblwiKTtcclxuICB9XHJcbiAgcmV0dXJuIG5leHQoKTtcclxuXHJcbn1cclxubW9kdWxlLmV4cG9ydHM9dmVyaWZ5VG9rZW47XHJcblxyXG5cclxuXHJcbi8vIGNvbnN0IGp3dD1yZXF1aXJlKFwianNvbndlYnRva2VuXCIpO1xyXG4vLyBjb25zdCBkb3RlbnY9cmVxdWlyZShcImRvdGVudlwiKTtcclxuLy8gZG90ZW52LmNvbmZpZygpO1xyXG5cclxuLy8gY29uc3QgdmVyaWZ5VG9rZW49YXN5bmMocmVxLCByZXMsIG5leHQpPT57XHJcbi8vIC8vIGNvbnN0IHRva2VuPXJlcS5oZWFkZXJzWyd0b2tlbiddXHJcbi8vIC8vY29uc3QgdG9rZW49YXV0aEhlYWRlciAmJiBhdXRoSGVhZGVyLnNwbGl0KCcnKVsxXVxyXG4vLyBjb25zdCB0b2tlbiA9IHJlcS5jb29raWVzLmp3dFxyXG4vLyBpZih0b2tlbil7XHJcbi8vICAgICBqd3QudmVyaWZ5KHRva2VuLCdtaXJpbmRpdG9rZW5zZWNyZXRlJywoZXJyLGRlY29kZWR0b2tlbik9PntcclxuLy8gICAgICAgICBpZihlcnIpe1xyXG4vLyAgICAgICAgICAgICByZXMuc3RhdHVzKDQwMSkuanNvbih7XCJFcnJvclwiOlwiUGxlYXNlIExvZ2luIEZpcnN0ICEhIVwifSlcclxuLy8gICAgICAgICB9XHJcbi8vICAgICAgICAgaWYoZGVjb2RlZHRva2VuKXtcclxuLy8gICAgICAgICAgICAgIG5leHQoKVxyXG4vLyAgICAgICAgIH1cclxuLy8gICAgIH0pXHJcbi8vIH1lbHNle1xyXG4vLyAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe1wiTWVzc2FnZVwiOlwiUGxlYXNlIExvZ2luIEZpcnN0ICEhIVwifSlcclxuLy8gIH1cclxuLy8gLy8gaWYgKCF0b2tlbikge1xyXG4vLyAvLyAgICAgcmV0dXJuIHJlcy5zdGF0dXMoNDA0KS5zZW5kKFwiQSB0b2tlbiBpcyByZXF1aXJlZCBmb3IgYXV0aGVudGljYXRpb25cIik7XHJcbi8vIC8vICAgfVxyXG4vLyAvLyAgIHRyeSB7XHJcbi8vIC8vICAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCk7XHJcbi8vIC8vICAgICByZXEudXNlciA9IGRlY29kZWQ7XHJcbi8vIC8vICAgICAvLyBjb25zb2xlLmxvZyhyZXEudXNlcilcclxuLy8gLy8gICB9IGNhdGNoIChlcnIpIHtcclxuLy8gLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuc2VuZChcIkludmFsaWQgVG9rZW5cIik7XHJcbi8vIC8vICAgfVxyXG4vLyAvLyAgIHJldHVybiBuZXh0KCk7XHJcblxyXG4vLyB9XHJcbi8vIG1vZHVsZS5leHBvcnRzPXZlcmlmeVRva2VuO1xyXG5cclxuIl0sIm1hcHBpbmdzIjoiQUFBQSxNQUFNQSxHQUFHLEdBQUNDLE9BQU8sQ0FBQyxjQUFjLENBQUM7QUFDakMsTUFBTUMsTUFBTSxHQUFDRCxPQUFPLENBQUMsUUFBUSxDQUFDO0FBQzlCQyxNQUFNLENBQUNDLE1BQU0sRUFBRTtBQUVmLE1BQU1DLFdBQVcsR0FBQyxPQUFNQyxHQUFHLEVBQUVDLEdBQUcsRUFBRUMsSUFBSSxLQUFHO0VBQ3pDLE1BQU1DLEtBQUssR0FBQ0gsR0FBRyxDQUFDSSxPQUFPLENBQUMsT0FBTyxDQUFDO0VBQ2hDO0VBQ0EsSUFBSSxDQUFDRCxLQUFLLEVBQUU7SUFDUixPQUFPRixHQUFHLENBQUNJLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQ0MsSUFBSSxDQUFDLHdDQUF3QyxDQUFDO0VBQ3ZFO0VBQ0EsSUFBSTtJQUNGLE1BQU1DLE9BQU8sR0FBR1osR0FBRyxDQUFDYSxNQUFNLENBQUNMLEtBQUssRUFBRU0sT0FBTyxDQUFDQyxHQUFHLENBQUNDLFVBQVUsQ0FBQztJQUN6RFgsR0FBRyxDQUFDWSxJQUFJLEdBQUdMLE9BQU87SUFDbEI7RUFDRixDQUFDLENBQUMsT0FBT00sR0FBRyxFQUFFO0lBQ1osT0FBT1osR0FBRyxDQUFDSSxNQUFNLENBQUMsR0FBRyxDQUFDLENBQUNDLElBQUksQ0FBQyxlQUFlLENBQUM7RUFDOUM7RUFDQSxPQUFPSixJQUFJLEVBQUU7QUFFZixDQUFDO0FBQ0RZLE1BQU0sQ0FBQ0MsT0FBTyxHQUFDaEIsV0FBVzs7QUFJMUI7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBIn0=
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJtYXBwaW5ncyI6ImltSkFnQkU7QUFBQSwyRkFoQkYsS0FBTUEsSUFBRywwQkFBQ0MsT0FBTyxDQUFDLGNBQWMsQ0FBQyxFQUNqQyxLQUFNQyxPQUFNLDBCQUFDRCxPQUFPLENBQUMsUUFBUSxDQUFDLDBCQUM5QkMsTUFBTSxDQUFDQyxNQUFNLEVBQUUseUJBRWYsS0FBTUMsWUFBVyxDQUFDLE1BQU1DLEdBQUcsQ0FBRUMsR0FBRyxDQUFFQyxJQUFJLEdBQUcseUJBQ3pDLEtBQU1DLE1BQUssMEJBQUNILEdBQUcsQ0FBQ0ksT0FBTyxDQUFDLE9BQU8sQ0FBQyxFQUNoQztBQUFBLHdCQUNBLEdBQUksQ0FBQ0QsS0FBSyxDQUFFLG9EQUNSLE1BQU9GLElBQUcsQ0FBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsd0NBQXdDLENBQUMsQ0FDdkUsMERBQ0EsR0FBSSxDQUNGLEtBQU1DLFFBQU8sMEJBQUdaLEdBQUcsQ0FBQ2EsTUFBTSxDQUFDTCxLQUFLLENBQUVNLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDQyxVQUFVLENBQUMsMEJBQ3pEWCxHQUFHLENBQUNZLElBQUksQ0FBR0wsT0FBTyxDQUNsQjtBQUNGLENBQUUsTUFBT00sR0FBRyxDQUFFLDBCQUNaLE1BQU9aLElBQUcsQ0FBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDQyxJQUFJLENBQUMsZUFBZSxDQUFDLENBQzlDLDBCQUNBLE1BQU9KLEtBQUksRUFBRSxDQUVmLENBQUMsMEJBQ0RZLE1BQU0sQ0FBQ0MsT0FBTyxDQUFDaEIsV0FBVyxDQUkxQjtBQUNBO0FBQ0E7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFFQTtBQUNBIiwibmFtZXMiOlsiand0IiwicmVxdWlyZSIsImRvdGVudiIsImNvbmZpZyIsInZlcmlmeVRva2VuIiwicmVxIiwicmVzIiwibmV4dCIsInRva2VuIiwiaGVhZGVycyIsInN0YXR1cyIsInNlbmQiLCJkZWNvZGVkIiwidmVyaWZ5IiwicHJvY2VzcyIsImVudiIsIkpXVF9TRUNSRVQiLCJ1c2VyIiwiZXJyIiwibW9kdWxlIiwiZXhwb3J0cyJdLCJzb3VyY2VSb290IjoiRTpcXGFuZGVsYVxcTmV3IEFuZGVsYVxcbm9kZV9tb25nb190dXRvcmlhbFxcc3JjXFxtaWRkbGV3YXJlc1xcIiwic291cmNlcyI6WyJ2ZXJpZnlUb2tlbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJjb25zdCBqd3Q9cmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcclxuY29uc3QgZG90ZW52PXJlcXVpcmUoXCJkb3RlbnZcIik7XHJcbmRvdGVudi5jb25maWcoKTtcclxuXHJcbmNvbnN0IHZlcmlmeVRva2VuPWFzeW5jKHJlcSwgcmVzLCBuZXh0KT0+e1xyXG5jb25zdCB0b2tlbj1yZXEuaGVhZGVyc1sndG9rZW4nXVxyXG4vL2NvbnN0IHRva2VuPWF1dGhIZWFkZXIgJiYgYXV0aEhlYWRlci5zcGxpdCgnJylbMV1cclxuaWYgKCF0b2tlbikge1xyXG4gICAgcmV0dXJuIHJlcy5zdGF0dXMoNDAzKS5zZW5kKFwiQSB0b2tlbiBpcyByZXF1aXJlZCBmb3IgYXV0aGVudGljYXRpb25cIik7XHJcbiAgfVxyXG4gIHRyeSB7XHJcbiAgICBjb25zdCBkZWNvZGVkID0gand0LnZlcmlmeSh0b2tlbiwgcHJvY2Vzcy5lbnYuSldUX1NFQ1JFVCk7XHJcbiAgICByZXEudXNlciA9IGRlY29kZWQ7XHJcbiAgICAvLyBjb25zb2xlLmxvZyhyZXEudXNlcilcclxuICB9IGNhdGNoIChlcnIpIHtcclxuICAgIHJldHVybiByZXMuc3RhdHVzKDQwMSkuc2VuZChcIkludmFsaWQgVG9rZW5cIik7XHJcbiAgfVxyXG4gIHJldHVybiBuZXh0KCk7XHJcblxyXG59XHJcbm1vZHVsZS5leHBvcnRzPXZlcmlmeVRva2VuO1xyXG5cclxuXHJcblxyXG4vLyBjb25zdCBqd3Q9cmVxdWlyZShcImpzb253ZWJ0b2tlblwiKTtcclxuLy8gY29uc3QgZG90ZW52PXJlcXVpcmUoXCJkb3RlbnZcIik7XHJcbi8vIGRvdGVudi5jb25maWcoKTtcclxuXHJcbi8vIGNvbnN0IHZlcmlmeVRva2VuPWFzeW5jKHJlcSwgcmVzLCBuZXh0KT0+e1xyXG4vLyAvLyBjb25zdCB0b2tlbj1yZXEuaGVhZGVyc1sndG9rZW4nXVxyXG4vLyAvL2NvbnN0IHRva2VuPWF1dGhIZWFkZXIgJiYgYXV0aEhlYWRlci5zcGxpdCgnJylbMV1cclxuLy8gY29uc3QgdG9rZW4gPSByZXEuY29va2llcy5qd3RcclxuLy8gaWYodG9rZW4pe1xyXG4vLyAgICAgand0LnZlcmlmeSh0b2tlbiwnbWlyaW5kaXRva2Vuc2VjcmV0ZScsKGVycixkZWNvZGVkdG9rZW4pPT57XHJcbi8vICAgICAgICAgaWYoZXJyKXtcclxuLy8gICAgICAgICAgICAgcmVzLnN0YXR1cyg0MDEpLmpzb24oe1wiRXJyb3JcIjpcIlBsZWFzZSBMb2dpbiBGaXJzdCAhISFcIn0pXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICAgIGlmKGRlY29kZWR0b2tlbil7XHJcbi8vICAgICAgICAgICAgICBuZXh0KClcclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9KVxyXG4vLyB9ZWxzZXtcclxuLy8gICAgIHJlcy5zdGF0dXMoNDAxKS5qc29uKHtcIk1lc3NhZ2VcIjpcIlBsZWFzZSBMb2dpbiBGaXJzdCAhISFcIn0pXHJcbi8vICB9XHJcbi8vIC8vIGlmICghdG9rZW4pIHtcclxuLy8gLy8gICAgIHJldHVybiByZXMuc3RhdHVzKDQwNCkuc2VuZChcIkEgdG9rZW4gaXMgcmVxdWlyZWQgZm9yIGF1dGhlbnRpY2F0aW9uXCIpO1xyXG4vLyAvLyAgIH1cclxuLy8gLy8gICB0cnkge1xyXG4vLyAvLyAgICAgY29uc3QgZGVjb2RlZCA9IGp3dC52ZXJpZnkodG9rZW4sIHByb2Nlc3MuZW52LkpXVF9TRUNSRVQpO1xyXG4vLyAvLyAgICAgcmVxLnVzZXIgPSBkZWNvZGVkO1xyXG4vLyAvLyAgICAgLy8gY29uc29sZS5sb2cocmVxLnVzZXIpXHJcbi8vIC8vICAgfSBjYXRjaCAoZXJyKSB7XHJcbi8vIC8vICAgICByZXR1cm4gcmVzLnN0YXR1cyg0MDEpLnNlbmQoXCJJbnZhbGlkIFRva2VuXCIpO1xyXG4vLyAvLyAgIH1cclxuLy8gLy8gICByZXR1cm4gbmV4dCgpO1xyXG5cclxuLy8gfVxyXG4vLyBtb2R1bGUuZXhwb3J0cz12ZXJpZnlUb2tlbjtcclxuXHJcbiJdfQ==