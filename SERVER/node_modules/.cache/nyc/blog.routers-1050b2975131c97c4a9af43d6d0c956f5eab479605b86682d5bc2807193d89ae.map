{"version":3,"names":["router","require","Router","BlogController","verifyToken","isAdmin","upload","post","single","AddBlog","delete","deletBlog","get","findData","put","updateBlog","FindById","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\","sources":["blog.routers.js"],"sourcesContent":["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Book:\r\n *       type: object\r\n *       required:\r\n *         - title\r\n *         - author\r\n *         - finished\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: The auto-generated id of the book\r\n *         title:\r\n *           type: string\r\n *           description: The title of your book\r\n *         author:\r\n *           type: string\r\n *           description: The book author\r\n *         finished:\r\n *           type: boolean\r\n *           description: Whether you have finished reading the book\r\n *         createdAt:\r\n *           type: string\r\n *           format: date\r\n *           description: The date the book was added\r\n *       example:\r\n *         id: d5fE_asz\r\n *         title: The New Turing Omnibus\r\n *         author: Alexander K. Dewdney\r\n *         finished: false\r\n *         createdAt: 2020-03-10T04:05:06.157Z\r\n */\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Blogs\r\n *   description: This is the blogs APiI\r\n * /blog:\r\n *   get:\r\n *     summary: Get all Blogs \r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Blogs Have been Fetched.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                   type: integer\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *       500:\r\n *         description: Some server error\r\n *   post:\r\n *     summary: Add BLogsr \r\n *     tags: [Blogs]\r\n *     parameters:\r\n *       - name: token\r\n *         in: header\r\n *         description: THis is the token to login\r\n *         type: string\r\n *         required: true\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - title\r\n *               - content\r\n *               - image\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *               content:\r\n *                 type: string\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *     responses:\r\n *       200:\r\n *         description: Blog Created Successfully.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n * /blog/{id}:\r\n *   delete:\r\n *     summary: delete blog\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : object id of blog\r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Blog deleted\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type:  object\r\n *             properties:\r\n *               status:\r\n *                 type: integer\r\n *               message:\r\n *                 type: string\r\n *               data:\r\n *                 type: object\r\n *       404:\r\n *         description: Blog Not Found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type:  object\r\n *   put:\r\n *     summary: Update a blog \r\n *     tags: [Blogs]\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : id of blog\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *               content:\r\n *                 type: string\r\n *     responses:\r\n *       201:\r\n *         description: Blog Created \r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 status:\r\n *                   type: integer\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *       406:\r\n *         description: A field is Empty\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *   get:\r\n *     summary: single blog\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : id of blog\r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Single Blog Retrieved\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *       404:\r\n *         description: Single Blog Not Found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n */\r\nconst router=require(\"express\").Router();\r\nconst BlogController=require(\"../controllers/BlogController\");\r\nconst verifyToken =require(\"../middlewares/verifyToken\");\r\nconst isAdmin=require(\"../middlewares/isAdmin\");\r\nconst upload=require(\"../utils/multer\")\r\nrouter.post(\"/\",verifyToken,isAdmin,upload.single(\"image\"),BlogController.AddBlog);\r\nrouter.delete(\"/:id\",verifyToken,isAdmin,BlogController.deletBlog);\r\nrouter.get(\"/\",BlogController.findData);\r\nrouter.put(\"/:id\",verifyToken,isAdmin,upload.single(\"image\"),BlogController.updateBlog);\r\nrouter.get(\"/:id\",verifyToken,isAdmin,BlogController.FindById);\r\nmodule.exports =router;"],"mappingsxC,MAAMC,cAAc,GAACF,OAAO,CAAC,+BAA+B,CAAC;AAC7D,MAAMG,WAAW,GAAEH,OAAO,CAAC,4BAA4B,CAAC;AACxD,MAAMI,OAAO,GAACJ,OAAO,CAAC,wBAAwB,CAAC;AAC/C,MAAMK,MAAM,GAACL,OAAO,CAAC,iBAAiB,CAAC;AACvCD,MAAM,CAACO,IAAI,CAAC,GAAG,EAACH,WAAW,EAACC,OAAO,EAACC,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAACL,cAAc,CAACM,OAAO,CAAC;AAClFT,MAAM,CAACU,MAAM,CAAC,MAAM,EAACN,WAAW,EAACC,OAAO,EAACF,cAAc,CAACQ,SAAS,CAAC;AAClEX,MAAM,CAACY,GAAG,CAAC,GAAG,EAACT,cAAc,CAACU,QAAQ,CAAC;AACvCb,MAAM,CAACc,GAAG,CAAC,MAAM,EAACV,WAAW,EAACC,OAAO,EAACC,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAACL,cAAc,CAACY,UAAU,CAAC;AACvFf,MAAM,CAACY,GAAG,CAAC,MAAM,EAACR,WAAW,EAACC,OAAO,EAACF,cAAc,CAACa,QAAQ,CAAC;AAC9DC,MAAM,CAACC,OAAO,GAAElB,MAAM"}