{"version":3,"names":["express","require","dotenv","bodyParser","router","cors","dbConnect","app","swaggerJsdoc","swaggerUi","cookieparser","config","options","definition","openapi","info","title","version","description","contact","name","url","email","servers","apis","specs","use","serve","setup","json","origin","port","process","env","PORT","listen","console","log","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\node_mongo_tutorial\\","sources":["index.js"],"sourcesContent":["const express =require(\"express\");\r\nconst dotenv=require(\"dotenv\");\r\nconst bodyParser = require('body-parser');\r\nconst router=require(\"./src/routers\")\r\nconst cors=require(\"cors\");\r\nconst dbConnect = require(\"./src/configs/db\");\r\nconst app =express();\r\nconst swaggerJsdoc = require(\"swagger-jsdoc\");\r\nconst swaggerUi = require(\"swagger-ui-express\");\r\nconst cookieparser= require('cookie-parser')\r\ndotenv.config();\r\n\r\nconst options = {\r\n    definition: {\r\n      openapi: \"3.0.0\",\r\n      info: {\r\n        title: \"LogRocket Express API with Swagger\",\r\n        version: \"0.1.0\",\r\n        description:\r\n          \"This is a simple CRUD API application made with Express and documented with Swagger\",\r\n        contact: {\r\n          name: \"Mirindi saidi\",\r\n          url: \"My Brand\",\r\n          email: \"mirindisaidi19@gmail.com\",\r\n        },\r\n      },\r\n      servers: [\r\n        {\r\n          url: \"http://localhost:2000\",\r\n        },\r\n      ],\r\n    },\r\n    apis: [\"./src/routers/auth.routers.js\",\"./src/routers/blog.routers.js\",\"./src/routers/contact.routers.js\"],\r\n  };\r\n  \r\n  const specs = swaggerJsdoc(options);\r\n  app.use(\r\n    \"/api-docs\",\r\n    swaggerUi.serve,\r\n    swaggerUi.setup(specs)\r\n  );\r\n\r\n\r\ndbConnect();\r\napp.use(express.json());\r\napp.use(cookieparser());\r\napp.use(bodyParser.json());\r\napp.use(cors({origin:\"*\"}))\r\napp.use(router);\r\nconst port=process.env.PORT || 2000;\r\napp.listen(port, ()=>{\r\n    console.log(\"Server in connected on\",`${port}`);\r\n})\r\n\r\nmodule.exports=app;"],"mappings":"AAAA,MAAMA,OAAO,GAAEC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,MAAM,GAACD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,MAAM,GAACH,OAAO,CAAC,eAAe,CAAC;AACrC,MAAMI,IAAI,GAACJ,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMM,GAAG,GAAEP,OAAO,EAAE;AACpB,MAAMQ,YAAY,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMQ,SAAS,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMS,YAAY,GAAET,OAAO,CAAC,eAAe,CAAC;AAC5CC,MAAM,CAACS,MAAM,EAAE;AAEf,MAAMC,OAAO,GAAG;EACZC,UAAU,EAAE;IACVC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,KAAK,EAAE,oCAAoC;MAC3CC,OAAO,EAAE,OAAO;MAChBC,WAAW,EACT,qFAAqF;MACvFC,OAAO,EAAE;QACPC,IAAI,EAAE,eAAe;QACrBC,GAAG,EAAE,UAAU;QACfC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,OAAO,EAAE,CACP;MACEF,GAAG,EAAE;IACP,CAAC;EAEL,CAAC;EACDG,IAAI,EAAE,CAAC,+BAA+B,EAAC,+BAA+B,EAAC,kCAAkC;AAC3G,CAAC;AAED,MAAMC,KAAK,GAAGjB,YAAY,CAACI,OAAO,CAAC;AACnCL,GAAG,CAACmB,GAAG,CACL,WAAW,EACXjB,SAAS,CAACkB,KAAK,EACflB,SAAS,CAACmB,KAAK,CAACH,KAAK,CAAC,CACvB;AAGHnB,SAAS,EAAE;AACXC,GAAG,CAACmB,GAAG,CAAC1B,OAAO,CAAC6B,IAAI,EAAE,CAAC;AACvBtB,GAAG,CAACmB,GAAG,CAAChB,YAAY,EAAE,CAAC;AACvBH,GAAG,CAACmB,GAAG,CAACvB,UAAU,CAAC0B,IAAI,EAAE,CAAC;AAC1BtB,GAAG,CAACmB,GAAG,CAACrB,IAAI,CAAC;EAACyB,MAAM,EAAC;AAAG,CAAC,CAAC,CAAC;AAC3BvB,GAAG,CAACmB,GAAG,CAACtB,MAAM,CAAC;AACf,MAAM2B,IAAI,GAACC,OAAO,CAACC,GAAG,CAACC,IAAI,IAAI,IAAI;AACnC3B,GAAG,CAAC4B,MAAM,CAACJ,IAAI,EAAE,MAAI;EACjBK,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,GAAEN,IAAK,EAAC,CAAC;AACnD,CAAC,CAAC;AAEFO,MAAM,CAACC,OAAO,GAAChC,GAAG"}