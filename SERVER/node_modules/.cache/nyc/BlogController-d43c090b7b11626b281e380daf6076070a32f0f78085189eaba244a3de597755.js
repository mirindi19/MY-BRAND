function cov_165rpzmkt2(){var path="E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\BlogController.js";var hash="263095cde00091974285135ffc648e1a05b8085b";var global=new Function("return this")();var gcv="__coverage__";var coverageData={path:"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\BlogController.js",statementMap:{"0":{start:{line:3,column:4},end:{line:3,column:22}},"1":{start:{line:4,column:14},end:{line:4,column:40}},"2":{start:{line:5,column:13},end:{line:5,column:39}},"3":{start:{line:9,column:4},end:{line:9,column:34}},"4":{start:{line:12,column:18},end:{line:12,column:65}},"5":{start:{line:13,column:17},end:{line:18,column:5}},"6":{start:{line:19,column:23},end:{line:19,column:37}},"7":{start:{line:20,column:4},end:{line:29,column:5}},"8":{start:{line:21,column:24},end:{line:21,column:47}},"9":{start:{line:22,column:6},end:{line:26,column:9}},"10":{start:{line:28,column:6},end:{line:28,column:34}},"11":{start:{line:32,column:30},end:{line:34,column:6}},"12":{start:{line:35,column:21},end:{line:35,column:52}},"13":{start:{line:36,column:4},end:{line:36,column:32}},"14":{start:{line:37,column:4},end:{line:52,column:7}},"15":{start:{line:40,column:6},end:{line:51,column:7}},"16":{start:{line:41,column:8},end:{line:45,column:11}},"17":{start:{line:47,column:8},end:{line:50,column:11}},"18":{start:{line:55,column:21},end:{line:55,column:38}},"19":{start:{line:56,column:4},end:{line:60,column:8}},"20":{start:{line:63,column:17},end:{line:63,column:64}},"21":{start:{line:64,column:30},end:{line:66,column:6}},"22":{start:{line:67,column:21},end:{line:67,column:52}},"23":{start:{line:68,column:4},end:{line:68,column:32}},"24":{start:{line:69,column:21},end:{line:76,column:5}},"25":{start:{line:77,column:4},end:{line:96,column:7}},"26":{start:{line:84,column:6},end:{line:95,column:7}},"27":{start:{line:85,column:8},end:{line:89,column:11}},"28":{start:{line:91,column:8},end:{line:94,column:11}},"29":{start:{line:99,column:4},end:{line:113,column:5}},"30":{start:{line:100,column:25},end:{line:102,column:8}},"31":{start:{line:103,column:6},end:{line:107,column:10}},"32":{start:{line:109,column:6},end:{line:112,column:10}},"33":{start:{line:116,column:0},end:{line:116,column:32}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:11,column:2},end:{line:11,column:3}},loc:{start:{line:11,column:33},end:{line:30,column:3}},line:11},"1":{name:"(anonymous_1)",decl:{start:{line:31,column:2},end:{line:31,column:3}},loc:{start:{line:31,column:35},end:{line:53,column:3}},line:31},"2":{name:"(anonymous_2)",decl:{start:{line:39,column:7},end:{line:39,column:8}},loc:{start:{line:39,column:22},end:{line:52,column:5}},line:39},"3":{name:"(anonymous_3)",decl:{start:{line:54,column:2},end:{line:54,column:3}},loc:{start:{line:54,column:34},end:{line:61,column:3}},line:54},"4":{name:"(anonymous_4)",decl:{start:{line:62,column:2},end:{line:62,column:3}},loc:{start:{line:62,column:36},end:{line:97,column:3}},line:62},"5":{name:"(anonymous_5)",decl:{start:{line:83,column:7},end:{line:83,column:8}},loc:{start:{line:83,column:22},end:{line:96,column:5}},line:83},"6":{name:"(anonymous_6)",decl:{start:{line:98,column:2},end:{line:98,column:3}},loc:{start:{line:98,column:34},end:{line:114,column:3}},line:98}},branchMap:{"0":{loc:{start:{line:40,column:6},end:{line:51,column:7}},type:"if",locations:[{start:{line:40,column:6},end:{line:51,column:7}},{start:{line:40,column:6},end:{line:51,column:7}}],line:40},"1":{loc:{start:{line:84,column:6},end:{line:95,column:7}},type:"if",locations:[{start:{line:84,column:6},end:{line:95,column:7}},{start:{line:84,column:6},end:{line:95,column:7}}],line:84}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0},b:{"0":[0,0],"1":[0,0]},inputSourceMap:{version:3,names:["request","require","Blogs","Blog","uploadImage","deleteImage","BlogController","AddBlog","req","res","image","file","path","data","title","body","content","url","cloudinary_id","publicId","AddNewBlog","savedBlog","save","status","json","message","error","deletBlog","blogToDeleteImage","findOne","_id","params","id","deleteOne","err","blog","findData","blogList","find","send","updateBlog","blogData","public_id","date","Date","findOneAndUpdate","$set","new","code","UpdatedBlog","FindById","searchBlog","module","exports"],sourceRoot:"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\",sources:["BlogController.js"],sourcesContent:["const { request } = require(\"express\");\r\nconst Blogs = require(\"../models/Blogs\");\r\nconst Blog=require(\"../models/Blogs\");\r\n\r\nconst {uploadImage,deleteImage} =require(\"../utils/cloudinary\");\r\nclass BlogController{\r\n    static async AddBlog(req,res){\r\n       \r\n        const image = await uploadImage(req.file.path, \"blog_images\")\r\n\r\n\r\n        const data={\r\n            title: req.body.title,\r\n            content: req.body.content,\r\n            image: image.url,\r\n            cloudinary_id: image.publicId\r\n        }\r\n        const AddNewBlog=new Blog(data);\r\n    try {\r\n\r\n        const savedBlog=await AddNewBlog.save();\r\n       return res.status(201).json({\r\n            status:201,\r\n            message:\"Article Added in Blog\",\r\n            data:savedBlog\r\n        });  \r\n    } catch (error) {\r\n        res.status(500).json(error)\r\n        \r\n    }\r\n    }\r\n\r\n    static async deletBlog(req,res){\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        Blogs.deleteOne( { _id: req.params.id }, (err, blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    status: 200,\r\n                    message: \"Deleted Successfull \",\r\n                    data:blog\r\n                    \r\n                 })\r\n            } else {\r\n                res.status(404).json({\r\n                    status: 404,\r\n                    message: \"Blog to Delete Not Found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async findData(req,res){\r\n        const blogList = await Blog.find()\r\n        res.send(\r\n            res.status(200).json({\r\n                status:200,\r\n                message:\"List of Blogs\",\r\n                data:blogList\r\n            }) \r\n        )\r\n    }\r\n\r\n    static async updateBlog(req,res){\r\n        const data = await uploadImage(req.file.path, \"blog_images\")\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        const blogData = {\r\n            title : req.body.title,\r\n            image : req.body.image,\r\n            content : req.body.content,\r\n            cloudinary_id: data.public_id,\r\n            image: data.url,\r\n            date : new Date()\r\n        }\r\n        \r\n        Blogs.findOneAndUpdate( { _id:  req.params.id },{ $set:blogData },{ new:true }, (err,blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    code: 200,\r\n                    message: \"Blog updated\",\r\n                    UpdatedBlog: blog,\r\n                })\r\n            } else {\r\n                res.status(404).json({\r\n                    code: 404,\r\n                    message: \"Blog to Update not found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async FindById(req,res){\r\n        try {\r\n            const searchBlog = await Blog.findOne({ _id: req.params.id })\r\n            res.send( res.status(200).json({\r\n                status:200,\r\n                message:\"Your Blogs\",\r\n                data:searchBlog\r\n            }) )\r\n        } catch (error) {\r\n            res.send( res.status(404).json({\r\n                status:404,\r\n                error:\"Blogs doesn't exist!\",\r\n            }) \r\n            )\r\n        }\r\n      \r\n    }\r\n}\r\nmodule.exports =BlogController;"],mappings:"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"},_coverageSchema:"1a1c01bbd47fc00a2c39e90264f33305004495a9",hash:"263095cde00091974285135ffc648e1a05b8085b"};var coverage=global[gcv]||(global[gcv]={});if(!coverage[path]||coverage[path].hash!==hash){coverage[path]=coverageData;}var actualCoverage=coverage[path];{// @ts-ignore
cov_165rpzmkt2=function(){return actualCoverage;};}return actualCoverage;}cov_165rpzmkt2();const{request}=(cov_165rpzmkt2().s[0]++,require("express"));const Blogs=(cov_165rpzmkt2().s[1]++,require("../models/Blogs"));const Blog=(cov_165rpzmkt2().s[2]++,require("../models/Blogs"));const{uploadImage,deleteImage}=(cov_165rpzmkt2().s[3]++,require("../utils/cloudinary"));class BlogController{static async AddBlog(req,res){cov_165rpzmkt2().f[0]++;const image=(cov_165rpzmkt2().s[4]++,await uploadImage(req.file.path,"blog_images"));const data=(cov_165rpzmkt2().s[5]++,{title:req.body.title,content:req.body.content,image:image.url,cloudinary_id:image.publicId});const AddNewBlog=(cov_165rpzmkt2().s[6]++,new Blog(data));cov_165rpzmkt2().s[7]++;try{const savedBlog=(cov_165rpzmkt2().s[8]++,await AddNewBlog.save());cov_165rpzmkt2().s[9]++;return res.status(201).json({status:201,message:"Article Added in Blog",data:savedBlog});}catch(error){cov_165rpzmkt2().s[10]++;res.status(500).json(error);}}static async deletBlog(req,res){cov_165rpzmkt2().f[1]++;const blogToDeleteImage=(cov_165rpzmkt2().s[11]++,await Blogs.findOne({_id:req.params.id}));const publicId=(cov_165rpzmkt2().s[12]++,blogToDeleteImage.cloudinary_id);cov_165rpzmkt2().s[13]++;await deleteImage(publicId);cov_165rpzmkt2().s[14]++;Blogs.deleteOne({_id:req.params.id},(err,blog)=>{cov_165rpzmkt2().f[2]++;cov_165rpzmkt2().s[15]++;if(!err){cov_165rpzmkt2().b[0][0]++;cov_165rpzmkt2().s[16]++;res.status(200).json({status:200,message:"Deleted Successfull ",data:blog});}else{cov_165rpzmkt2().b[0][1]++;cov_165rpzmkt2().s[17]++;res.status(404).json({status:404,message:"Blog to Delete Not Found"});}});}static async findData(req,res){cov_165rpzmkt2().f[3]++;const blogList=(cov_165rpzmkt2().s[18]++,await Blog.find());cov_165rpzmkt2().s[19]++;res.send(res.status(200).json({status:200,message:"List of Blogs",data:blogList}));}static async updateBlog(req,res){cov_165rpzmkt2().f[4]++;const data=(cov_165rpzmkt2().s[20]++,await uploadImage(req.file.path,"blog_images"));const blogToDeleteImage=(cov_165rpzmkt2().s[21]++,await Blogs.findOne({_id:req.params.id}));const publicId=(cov_165rpzmkt2().s[22]++,blogToDeleteImage.cloudinary_id);cov_165rpzmkt2().s[23]++;await deleteImage(publicId);const blogData=(cov_165rpzmkt2().s[24]++,{title:req.body.title,image:req.body.image,content:req.body.content,cloudinary_id:data.public_id,image:data.url,date:new Date()});cov_165rpzmkt2().s[25]++;Blogs.findOneAndUpdate({_id:req.params.id},{$set:blogData},{new:true},(err,blog)=>{cov_165rpzmkt2().f[5]++;cov_165rpzmkt2().s[26]++;if(!err){cov_165rpzmkt2().b[1][0]++;cov_165rpzmkt2().s[27]++;res.status(200).json({code:200,message:"Blog updated",UpdatedBlog:blog});}else{cov_165rpzmkt2().b[1][1]++;cov_165rpzmkt2().s[28]++;res.status(404).json({code:404,message:"Blog to Update not found"});}});}static async FindById(req,res){cov_165rpzmkt2().f[6]++;cov_165rpzmkt2().s[29]++;try{const searchBlog=(cov_165rpzmkt2().s[30]++,await Blog.findOne({_id:req.params.id}));cov_165rpzmkt2().s[31]++;res.send(res.status(200).json({status:200,message:"Your Blogs",data:searchBlog}));}catch(error){cov_165rpzmkt2().s[32]++;res.send(res.status(404).json({status:404,error:"Blogs doesn't exist!"}));}}}cov_165rpzmkt2().s[33]++;module.exports=BlogController;//# sourceMappingURL=data:application/json;charset=utf-8;base64,
//# sourceMappingURL=data:application/json;charset=utf-8;base64,