{"E:\\andela\\New Andela\\MY BRAND\\SERVER\\index.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\index.js","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":34}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":32}},"2":{"start":{"line":3,"column":19},"end":{"line":3,"column":41}},"3":{"start":{"line":4,"column":15},"end":{"line":4,"column":39}},"4":{"start":{"line":5,"column":13},"end":{"line":5,"column":28}},"5":{"start":{"line":6,"column":18},"end":{"line":6,"column":45}},"6":{"start":{"line":7,"column":12},"end":{"line":7,"column":21}},"7":{"start":{"line":8,"column":21},"end":{"line":8,"column":45}},"8":{"start":{"line":9,"column":18},"end":{"line":9,"column":47}},"9":{"start":{"line":10,"column":21},"end":{"line":10,"column":45}},"10":{"start":{"line":11,"column":15},"end":{"line":11,"column":32}},"11":{"start":{"line":12,"column":0},"end":{"line":12,"column":24}},"12":{"start":{"line":13,"column":0},"end":{"line":13,"column":16}},"13":{"start":{"line":14,"column":16},"end":{"line":33,"column":1}},"14":{"start":{"line":34,"column":14},"end":{"line":34,"column":35}},"15":{"start":{"line":35,"column":0},"end":{"line":35,"column":62}},"16":{"start":{"line":36,"column":0},"end":{"line":36,"column":12}},"17":{"start":{"line":37,"column":0},"end":{"line":37,"column":24}},"18":{"start":{"line":38,"column":0},"end":{"line":38,"column":24}},"19":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}},"20":{"start":{"line":40,"column":0},"end":{"line":42,"column":4}},"21":{"start":{"line":43,"column":0},"end":{"line":43,"column":16}},"22":{"start":{"line":44,"column":13},"end":{"line":44,"column":37}},"23":{"start":{"line":45,"column":0},"end":{"line":47,"column":3}},"24":{"start":{"line":46,"column":2},"end":{"line":46,"column":51}},"25":{"start":{"line":48,"column":0},"end":{"line":48,"column":21}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":45,"column":17},"end":{"line":45,"column":18}},"loc":{"start":{"line":45,"column":23},"end":{"line":47,"column":1}},"line":45}},"branchMap":{"0":{"loc":{"start":{"line":44,"column":13},"end":{"line":44,"column":37}},"type":"binary-expr","locations":[{"start":{"line":44,"column":13},"end":{"line":44,"column":29}},{"start":{"line":44,"column":33},"end":{"line":44,"column":37}}],"line":44}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":1,"19":1,"20":1,"21":1,"22":1,"23":1,"24":1,"25":1},"f":{"0":1},"b":{"0":[1,0]},"inputSourceMap":{"version":3,"names":["express","require","dotenv","bodyParser","router","cors","dbConnect","app","swaggerJsdoc","swaggerUi","cookieparser","morgan","use","config","options","definition","openapi","info","title","version","description","contact","name","url","email","servers","apis","specs","serve","setup","json","origin","PORT","process","env","listen","console","log","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\","sources":["index.js"],"sourcesContent":["const express =require(\"express\");\r\nconst dotenv=require(\"dotenv\");\r\nconst bodyParser = require('body-parser');\r\nconst router=require(\"./src/routers\")\r\nconst cors=require(\"cors\");\r\nconst dbConnect = require(\"./src/configs/db\");\r\nconst app =express();\r\nconst swaggerJsdoc = require(\"swagger-jsdoc\");\r\nconst swaggerUi = require(\"swagger-ui-express\");\r\nconst cookieparser= require('cookie-parser')\r\nconst morgan = require('morgan')\r\napp.use(morgan(\"tiny\"))\r\ndotenv.config();\r\n\r\nconst options = {\r\n    definition: {\r\n      openapi: \"3.0.0\",\r\n      info: {\r\n        title: \"LogRocket Express API with Swagger\",\r\n        version: \"0.1.0\",\r\n        description:\r\n          \"This is a simple CRUD API application made with Express and documented with Swagger\",\r\n        contact: {\r\n          name: \"Mirindi saidi\",\r\n          url: \"My Brand\",\r\n          email: \"mirindisaidi19@gmail.com\",\r\n        },\r\n      },\r\n      servers: [\r\n        {\r\n          url: \"http://localhost:2000\",\r\n          url: \"https://my-brand-production-e42e.up.railway.app\",\r\n        },\r\n      ],\r\n    },\r\n    apis: [\"./src/routers/auth.routers.js\",\"./src/routers/blog.routers.js\",\"./src/routers/contact.routers.js\"],\r\n  };\r\n  \r\n  const specs = swaggerJsdoc(options);\r\n  app.use(\r\n    \"/api-docs\",\r\n    swaggerUi.serve,\r\n    swaggerUi.setup(specs)\r\n  );\r\n\r\n\r\ndbConnect();\r\napp.use(express.json());\r\napp.use(cookieparser());\r\napp.use(bodyParser.json());\r\napp.use(cors({origin:\"*\"}))\r\napp.use(router);\r\nconst PORT=process.env.PORT || 2000;\r\napp.listen(PORT, ()=>{\r\n    console.log(\"Server in connected on\",`${PORT}`);\r\n})\r\n\r\nmodule.exports=app;"],"mappings":"AAAA,MAAMA,OAAO,GAAEC,OAAO,CAAC,SAAS,CAAC;AACjC,MAAMC,MAAM,GAACD,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAME,UAAU,GAAGF,OAAO,CAAC,aAAa,CAAC;AACzC,MAAMG,MAAM,GAACH,OAAO,CAAC,eAAe,CAAC;AACrC,MAAMI,IAAI,GAACJ,OAAO,CAAC,MAAM,CAAC;AAC1B,MAAMK,SAAS,GAAGL,OAAO,CAAC,kBAAkB,CAAC;AAC7C,MAAMM,GAAG,GAAEP,OAAO,EAAE;AACpB,MAAMQ,YAAY,GAAGP,OAAO,CAAC,eAAe,CAAC;AAC7C,MAAMQ,SAAS,GAAGR,OAAO,CAAC,oBAAoB,CAAC;AAC/C,MAAMS,YAAY,GAAET,OAAO,CAAC,eAAe,CAAC;AAC5C,MAAMU,MAAM,GAAGV,OAAO,CAAC,QAAQ,CAAC;AAChCM,GAAG,CAACK,GAAG,CAACD,MAAM,CAAC,MAAM,CAAC,CAAC;AACvBT,MAAM,CAACW,MAAM,EAAE;AAEf,MAAMC,OAAO,GAAG;EACZC,UAAU,EAAE;IACVC,OAAO,EAAE,OAAO;IAChBC,IAAI,EAAE;MACJC,KAAK,EAAE,oCAAoC;MAC3CC,OAAO,EAAE,OAAO;MAChBC,WAAW,EACT,qFAAqF;MACvFC,OAAO,EAAE;QACPC,IAAI,EAAE,eAAe;QACrBC,GAAG,EAAE,UAAU;QACfC,KAAK,EAAE;MACT;IACF,CAAC;IACDC,OAAO,EAAE,CACP;MACEF,GAAG,EAAE,uBAAuB;MAC5BA,GAAG,EAAE;IACP,CAAC;EAEL,CAAC;EACDG,IAAI,EAAE,CAAC,+BAA+B,EAAC,+BAA+B,EAAC,kCAAkC;AAC3G,CAAC;AAED,MAAMC,KAAK,GAAGnB,YAAY,CAACM,OAAO,CAAC;AACnCP,GAAG,CAACK,GAAG,CACL,WAAW,EACXH,SAAS,CAACmB,KAAK,EACfnB,SAAS,CAACoB,KAAK,CAACF,KAAK,CAAC,CACvB;AAGHrB,SAAS,EAAE;AACXC,GAAG,CAACK,GAAG,CAACZ,OAAO,CAAC8B,IAAI,EAAE,CAAC;AACvBvB,GAAG,CAACK,GAAG,CAACF,YAAY,EAAE,CAAC;AACvBH,GAAG,CAACK,GAAG,CAACT,UAAU,CAAC2B,IAAI,EAAE,CAAC;AAC1BvB,GAAG,CAACK,GAAG,CAACP,IAAI,CAAC;EAAC0B,MAAM,EAAC;AAAG,CAAC,CAAC,CAAC;AAC3BxB,GAAG,CAACK,GAAG,CAACR,MAAM,CAAC;AACf,MAAM4B,IAAI,GAACC,OAAO,CAACC,GAAG,CAACF,IAAI,IAAI,IAAI;AACnCzB,GAAG,CAAC4B,MAAM,CAACH,IAAI,EAAE,MAAI;EACjBI,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAE,GAAEL,IAAK,EAAC,CAAC;AACnD,CAAC,CAAC;AAEFM,MAAM,CAACC,OAAO,GAAChC,GAAG"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ea583fe801bea61cbe37883f702734b1e7389466","contentHash":"814835fcce0325418ff316d6188815092b80fe8e658504de9a73b46d65823e3a"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\index.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\index.js","statementMap":{"0":{"start":{"line":1,"column":15},"end":{"line":1,"column":42}},"1":{"start":{"line":2,"column":19},"end":{"line":2,"column":44}},"2":{"start":{"line":3,"column":22},"end":{"line":3,"column":50}},"3":{"start":{"line":4,"column":19},"end":{"line":4,"column":44}},"4":{"start":{"line":5,"column":0},"end":{"line":5,"column":32}},"5":{"start":{"line":6,"column":0},"end":{"line":6,"column":37}},"6":{"start":{"line":7,"column":0},"end":{"line":7,"column":32}},"7":{"start":{"line":8,"column":0},"end":{"line":8,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["router","require","Router","blogRouter","contactRouter","authRouter","use","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\","sources":["index.js"],"sourcesContent":["const router=require(\"express\").Router();\r\nconst blogRouter=require(\"./blog.routers\"); \r\nconst contactRouter=require(\"./contact.routers\");\r\nconst authRouter=require(\"./auth.routers\");\r\nrouter.use(\"/blog\",blogRouter);\r\nrouter.use(\"/contat\",contactRouter);\r\nrouter.use(\"/auth\",authRouter);\r\nmodule.exports =router;"],"mappings":"AAAA,MAAMA,MAAM,GAACC,OAAO,CAAC,SAAS,CAAC,CAACC,MAAM,EAAE;AACxC,MAAMC,UAAU,GAACF,OAAO,CAAC,gBAAgB,CAAC;AAC1C,MAAMG,aAAa,GAACH,OAAO,CAAC,mBAAmB,CAAC;AAChD,MAAMI,UAAU,GAACJ,OAAO,CAAC,gBAAgB,CAAC;AAC1CD,MAAM,CAACM,GAAG,CAAC,OAAO,EAACH,UAAU,CAAC;AAC9BH,MAAM,CAACM,GAAG,CAAC,SAAS,EAACF,aAAa,CAAC;AACnCJ,MAAM,CAACM,GAAG,CAAC,OAAO,EAACD,UAAU,CAAC;AAC9BE,MAAM,CAACC,OAAO,GAAER,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7af0b3f043bd0d90d5bfeee5be7e6f3fa20c952d","contentHash":"b2c46ce75b9fc7d7cdccecd0a8d8e37b430df24310b741502d7549b7a03b818b"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\blog.routers.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\blog.routers.js","statementMap":{"0":{"start":{"line":211,"column":15},"end":{"line":211,"column":42}},"1":{"start":{"line":212,"column":23},"end":{"line":212,"column":63}},"2":{"start":{"line":213,"column":20},"end":{"line":213,"column":57}},"3":{"start":{"line":214,"column":16},"end":{"line":214,"column":49}},"4":{"start":{"line":215,"column":15},"end":{"line":215,"column":41}},"5":{"start":{"line":216,"column":0},"end":{"line":216,"column":87}},"6":{"start":{"line":217,"column":0},"end":{"line":217,"column":70}},"7":{"start":{"line":218,"column":0},"end":{"line":218,"column":41}},"8":{"start":{"line":219,"column":0},"end":{"line":219,"column":92}},"9":{"start":{"line":220,"column":0},"end":{"line":220,"column":66}},"10":{"start":{"line":221,"column":0},"end":{"line":221,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["router","require","Router","BlogController","verifyToken","isAdmin","upload","post","single","AddBlog","delete","deletBlog","get","findData","put","updateBlog","FindById","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\","sources":["blog.routers.js"],"sourcesContent":["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Book:\r\n *       type: object\r\n *       required:\r\n *         - title\r\n *         - author\r\n *         - finished\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: The auto-generated id of the book\r\n *         title:\r\n *           type: string\r\n *           description: The title of your book\r\n *         author:\r\n *           type: string\r\n *           description: The book author\r\n *         finished:\r\n *           type: boolean\r\n *           description: Whether you have finished reading the book\r\n *         createdAt:\r\n *           type: string\r\n *           format: date\r\n *           description: The date the book was added\r\n *       example:\r\n *         id: d5fE_asz\r\n *         title: The New Turing Omnibus\r\n *         author: Alexander K. Dewdney\r\n *         finished: false\r\n *         createdAt: 2020-03-10T04:05:06.157Z\r\n */\r\n/**\r\n * @swagger\r\n * tags:\r\n *   name: Blogs\r\n *   description: This is the blogs APiI\r\n * /blog:\r\n *   get:\r\n *     summary: Get all Blogs \r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Blogs Have been Fetched.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                   type: integer\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *       500:\r\n *         description: Some server error\r\n *   post:\r\n *     summary: Add BLogsr \r\n *     tags: [Blogs]\r\n *     parameters:\r\n *       - name: token\r\n *         in: header\r\n *         description: THis is the token to login\r\n *         type: string\r\n *         required: true\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - title\r\n *               - content\r\n *               - image\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *               content:\r\n *                 type: string\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *     responses:\r\n *       200:\r\n *         description: Blog Created Successfully.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n * /blog/{id}:\r\n *   delete:\r\n *     summary: delete blog\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : object id of blog\r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Blog deleted\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type:  object\r\n *             properties:\r\n *               status:\r\n *                 type: integer\r\n *               message:\r\n *                 type: string\r\n *               data:\r\n *                 type: object\r\n *       404:\r\n *         description: Blog Not Found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type:  object\r\n *   put:\r\n *     summary: Update a blog \r\n *     tags: [Blogs]\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : id of blog\r\n *     requestBody:\r\n *       required: true\r\n *       content:\r\n *         multipart/form-data:\r\n *           schema:\r\n *             type: object\r\n *             properties:\r\n *               title:\r\n *                 type: string\r\n *               image:\r\n *                 type: string\r\n *                 format: binary\r\n *               content:\r\n *                 type: string\r\n *     responses:\r\n *       201:\r\n *         description: Blog Created \r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties:\r\n *                 status:\r\n *                   type: integer\r\n *                 message:\r\n *                   type: string\r\n *                 data:\r\n *                   type: object\r\n *       406:\r\n *         description: A field is Empty\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *   get:\r\n *     summary: single blog\r\n *     parameters :\r\n *       - name: token\r\n *         in: header\r\n *         description: token to log in\r\n *       - in: path\r\n *         name: id\r\n *         schema:\r\n *           type: string\r\n *         required: true\r\n *         description : id of blog\r\n *     tags: [Blogs]\r\n *     responses:\r\n *       200:\r\n *         description: Single Blog Retrieved\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *       404:\r\n *         description: Single Blog Not Found\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n */\r\nconst router=require(\"express\").Router();\r\nconst BlogController=require(\"../controllers/BlogController\");\r\nconst verifyToken =require(\"../middlewares/verifyToken\");\r\nconst isAdmin=require(\"../middlewares/isAdmin\");\r\nconst upload=require(\"../utils/multer\")\r\nrouter.post(\"/\",verifyToken,isAdmin,upload.single(\"image\"),BlogController.AddBlog);\r\nrouter.delete(\"/:id\",verifyToken,isAdmin,BlogController.deletBlog);\r\nrouter.get(\"/\",BlogController.findData);\r\nrouter.put(\"/:id\",verifyToken,isAdmin,upload.single(\"image\"),BlogController.updateBlog);\r\nrouter.get(\"/:id\",verifyToken,isAdmin,BlogController.FindById);\r\nmodule.exports =router;"],"mappingsxC,MAAMC,cAAc,GAACF,OAAO,CAAC,+BAA+B,CAAC;AAC7D,MAAMG,WAAW,GAAEH,OAAO,CAAC,4BAA4B,CAAC;AACxD,MAAMI,OAAO,GAACJ,OAAO,CAAC,wBAAwB,CAAC;AAC/C,MAAMK,MAAM,GAACL,OAAO,CAAC,iBAAiB,CAAC;AACvCD,MAAM,CAACO,IAAI,CAAC,GAAG,EAACH,WAAW,EAACC,OAAO,EAACC,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAACL,cAAc,CAACM,OAAO,CAAC;AAClFT,MAAM,CAACU,MAAM,CAAC,MAAM,EAACN,WAAW,EAACC,OAAO,EAACF,cAAc,CAACQ,SAAS,CAAC;AAClEX,MAAM,CAACY,GAAG,CAAC,GAAG,EAACT,cAAc,CAACU,QAAQ,CAAC;AACvCb,MAAM,CAACc,GAAG,CAAC,MAAM,EAACV,WAAW,EAACC,OAAO,EAACC,MAAM,CAACE,MAAM,CAAC,OAAO,CAAC,EAACL,cAAc,CAACY,UAAU,CAAC;AACvFf,MAAM,CAACY,GAAG,CAAC,MAAM,EAACR,WAAW,EAACC,OAAO,EAACF,cAAc,CAACa,QAAQ,CAAC;AAC9DC,MAAM,CAACC,OAAO,GAAElB,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"446144f2025865bc1c0c1cf2c4a1078a4ee20f08","contentHash":"b0a6bbb21747b6bef80d0f6900215a5b2c87efd77ffac778465007762feb54c8"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\BlogController.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\BlogController.js","statementMap":{"0":{"start":{"line":3,"column":4},"end":{"line":3,"column":22}},"1":{"start":{"line":4,"column":14},"end":{"line":4,"column":40}},"2":{"start":{"line":5,"column":13},"end":{"line":5,"column":39}},"3":{"start":{"line":9,"column":4},"end":{"line":9,"column":34}},"4":{"start":{"line":12,"column":18},"end":{"line":12,"column":65}},"5":{"start":{"line":13,"column":17},"end":{"line":18,"column":5}},"6":{"start":{"line":19,"column":23},"end":{"line":19,"column":37}},"7":{"start":{"line":20,"column":4},"end":{"line":29,"column":5}},"8":{"start":{"line":21,"column":24},"end":{"line":21,"column":47}},"9":{"start":{"line":22,"column":6},"end":{"line":26,"column":9}},"10":{"start":{"line":28,"column":6},"end":{"line":28,"column":34}},"11":{"start":{"line":32,"column":30},"end":{"line":34,"column":6}},"12":{"start":{"line":35,"column":21},"end":{"line":35,"column":52}},"13":{"start":{"line":36,"column":4},"end":{"line":36,"column":32}},"14":{"start":{"line":37,"column":4},"end":{"line":52,"column":7}},"15":{"start":{"line":40,"column":6},"end":{"line":51,"column":7}},"16":{"start":{"line":41,"column":8},"end":{"line":45,"column":11}},"17":{"start":{"line":47,"column":8},"end":{"line":50,"column":11}},"18":{"start":{"line":55,"column":21},"end":{"line":55,"column":38}},"19":{"start":{"line":56,"column":4},"end":{"line":60,"column":8}},"20":{"start":{"line":63,"column":17},"end":{"line":63,"column":64}},"21":{"start":{"line":64,"column":30},"end":{"line":66,"column":6}},"22":{"start":{"line":67,"column":21},"end":{"line":67,"column":52}},"23":{"start":{"line":68,"column":4},"end":{"line":68,"column":32}},"24":{"start":{"line":69,"column":21},"end":{"line":76,"column":5}},"25":{"start":{"line":77,"column":4},"end":{"line":96,"column":7}},"26":{"start":{"line":84,"column":6},"end":{"line":95,"column":7}},"27":{"start":{"line":85,"column":8},"end":{"line":89,"column":11}},"28":{"start":{"line":91,"column":8},"end":{"line":94,"column":11}},"29":{"start":{"line":99,"column":4},"end":{"line":113,"column":5}},"30":{"start":{"line":100,"column":25},"end":{"line":102,"column":8}},"31":{"start":{"line":103,"column":6},"end":{"line":107,"column":10}},"32":{"start":{"line":109,"column":6},"end":{"line":112,"column":10}},"33":{"start":{"line":116,"column":0},"end":{"line":116,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":2},"end":{"line":11,"column":3}},"loc":{"start":{"line":11,"column":33},"end":{"line":30,"column":3}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":31,"column":2},"end":{"line":31,"column":3}},"loc":{"start":{"line":31,"column":35},"end":{"line":53,"column":3}},"line":31},"2":{"name":"(anonymous_2)","decl":{"start":{"line":39,"column":7},"end":{"line":39,"column":8}},"loc":{"start":{"line":39,"column":22},"end":{"line":52,"column":5}},"line":39},"3":{"name":"(anonymous_3)","decl":{"start":{"line":54,"column":2},"end":{"line":54,"column":3}},"loc":{"start":{"line":54,"column":34},"end":{"line":61,"column":3}},"line":54},"4":{"name":"(anonymous_4)","decl":{"start":{"line":62,"column":2},"end":{"line":62,"column":3}},"loc":{"start":{"line":62,"column":36},"end":{"line":97,"column":3}},"line":62},"5":{"name":"(anonymous_5)","decl":{"start":{"line":83,"column":7},"end":{"line":83,"column":8}},"loc":{"start":{"line":83,"column":22},"end":{"line":96,"column":5}},"line":83},"6":{"name":"(anonymous_6)","decl":{"start":{"line":98,"column":2},"end":{"line":98,"column":3}},"loc":{"start":{"line":98,"column":34},"end":{"line":114,"column":3}},"line":98}},"branchMap":{"0":{"loc":{"start":{"line":40,"column":6},"end":{"line":51,"column":7}},"type":"if","locations":[{"start":{"line":40,"column":6},"end":{"line":51,"column":7}},{"start":{"line":40,"column":6},"end":{"line":51,"column":7}}],"line":40},"1":{"loc":{"start":{"line":84,"column":6},"end":{"line":95,"column":7}},"type":"if","locations":[{"start":{"line":84,"column":6},"end":{"line":95,"column":7}},{"start":{"line":84,"column":6},"end":{"line":95,"column":7}}],"line":84}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":0,"11":1,"12":1,"13":1,"14":1,"15":1,"16":1,"17":0,"18":1,"19":1,"20":1,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":1,"30":1,"31":1,"32":1,"33":1},"f":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":1},"b":{"0":[1,0],"1":[0,0]},"inputSourceMap":{"version":3,"names":["request","require","Blogs","Blog","uploadImage","deleteImage","BlogController","AddBlog","req","res","image","file","path","data","title","body","content","url","cloudinary_id","publicId","AddNewBlog","savedBlog","save","status","json","message","error","deletBlog","blogToDeleteImage","findOne","_id","params","id","deleteOne","err","blog","findData","blogList","find","send","updateBlog","blogData","public_id","date","Date","findOneAndUpdate","$set","new","code","UpdatedBlog","FindById","searchBlog","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\","sources":["BlogController.js"],"sourcesContent":["const { request } = require(\"express\");\r\nconst Blogs = require(\"../models/Blogs\");\r\nconst Blog=require(\"../models/Blogs\");\r\n\r\nconst {uploadImage,deleteImage} =require(\"../utils/cloudinary\");\r\nclass BlogController{\r\n    static async AddBlog(req,res){\r\n       \r\n        const image = await uploadImage(req.file.path, \"blog_images\")\r\n\r\n\r\n        const data={\r\n            title: req.body.title,\r\n            content: req.body.content,\r\n            image: image.url,\r\n            cloudinary_id: image.publicId\r\n        }\r\n        const AddNewBlog=new Blog(data);\r\n    try {\r\n\r\n        const savedBlog=await AddNewBlog.save();\r\n       return res.status(201).json({\r\n            status:201,\r\n            message:\"Article Added in Blog\",\r\n            data:savedBlog\r\n        });  \r\n    } catch (error) {\r\n        res.status(500).json(error)\r\n        \r\n    }\r\n    }\r\n\r\n    static async deletBlog(req,res){\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        Blogs.deleteOne( { _id: req.params.id }, (err, blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    status: 200,\r\n                    message: \"Deleted Successfull \",\r\n                    data:blog\r\n                    \r\n                 })\r\n            } else {\r\n                res.status(404).json({\r\n                    status: 404,\r\n                    message: \"Blog to Delete Not Found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async findData(req,res){\r\n        const blogList = await Blog.find()\r\n        res.send(\r\n            res.status(200).json({\r\n                status:200,\r\n                message:\"List of Blogs\",\r\n                data:blogList\r\n            }) \r\n        )\r\n    }\r\n\r\n    static async updateBlog(req,res){\r\n        const data = await uploadImage(req.file.path, \"blog_images\")\r\n        const blogToDeleteImage = await Blogs.findOne({ _id: req.params.id })\r\n        const publicId = blogToDeleteImage.cloudinary_id\r\n        await deleteImage(publicId)\r\n        const blogData = {\r\n            title : req.body.title,\r\n            image : req.body.image,\r\n            content : req.body.content,\r\n            cloudinary_id: data.public_id,\r\n            image: data.url,\r\n            date : new Date()\r\n        }\r\n        \r\n        Blogs.findOneAndUpdate( { _id:  req.params.id },{ $set:blogData },{ new:true }, (err,blog) => {\r\n            if (!err) {\r\n                res.status(200).json({\r\n                    code: 200,\r\n                    message: \"Blog updated\",\r\n                    UpdatedBlog: blog,\r\n                })\r\n            } else {\r\n                res.status(404).json({\r\n                    code: 404,\r\n                    message: \"Blog to Update not found\",\r\n                })\r\n            }\r\n        })\r\n    }\r\n\r\n    static async FindById(req,res){\r\n        try {\r\n            const searchBlog = await Blog.findOne({ _id: req.params.id })\r\n            res.send( res.status(200).json({\r\n                status:200,\r\n                message:\"Your Blogs\",\r\n                data:searchBlog\r\n            }) )\r\n        } catch (error) {\r\n            res.send( res.status(404).json({\r\n                status:404,\r\n                error:\"Blogs doesn't exist!\",\r\n            }) \r\n            )\r\n        }\r\n      \r\n    }\r\n}\r\nmodule.exports =BlogController;"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"263095cde00091974285135ffc648e1a05b8085b","contentHash":"7dba8ef5dfa5d0bf5a5a2128e9ead53182f9f39dd8fd384260bd2a7013844d77"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\Blogs.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\Blogs.js","statementMap":{"0":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}},"1":{"start":{"line":2,"column":19},"end":{"line":19,"column":2}},"2":{"start":{"line":20,"column":0},"end":{"line":20,"column":53}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["mongoose","require","BlogSchema","Schema","title","type","String","content","image","cloudinary_id","date","Date","default","now","module","exports","model"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\","sources":["Blogs.js"],"sourcesContent":["const mongoose=require('mongoose');\r\n\r\nconst BlogSchema=new mongoose.Schema({\r\n    title:{\r\n            type:String\r\n    },\r\n    content:{\r\n        type:String\r\n    },\r\n    image:{\r\n        type:String\r\n    },\r\n    cloudinary_id:{\r\n        type:String\r\n    },\r\n    date:{\r\n        type: Date,\r\n        default: Date.now,\r\n    },\r\n\r\n});\r\nmodule.exports=mongoose.model(\"Blogs\",BlogSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAACC,OAAO,CAAC,UAAU,CAAC;AAElC,MAAMC,UAAU,GAAC,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACjCC,KAAK,EAAC;IACEC,IAAI,EAACC;EACb,CAAC;EACDC,OAAO,EAAC;IACJF,IAAI,EAACC;EACT,CAAC;EACDE,KAAK,EAAC;IACFH,IAAI,EAACC;EACT,CAAC;EACDG,aAAa,EAAC;IACVJ,IAAI,EAACC;EACT,CAAC;EACDI,IAAI,EAAC;IACDL,IAAI,EAAEM,IAAI;IACVC,OAAO,EAAED,IAAI,CAACE;EAClB;AAEJ,CAAC,CAAC;AACFC,MAAM,CAACC,OAAO,GAACf,QAAQ,CAACgB,KAAK,CAAC,OAAO,EAACd,UAAU,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4794cc46afcb22889cef1f837e550983207fc1c3","contentHash":"ece762bebecbc14b3e5bc7c3d8107bf3233c9c50eb4c3b54d6a41a9b2350ea16"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\cloudinary.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\cloudinary.js","statementMap":{"0":{"start":{"line":1,"column":19},"end":{"line":1,"column":40}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":41}},"2":{"start":{"line":3,"column":0},"end":{"line":7,"column":3}},"3":{"start":{"line":8,"column":20},"end":{"line":20,"column":1}},"4":{"start":{"line":9,"column":2},"end":{"line":19,"column":3}},"5":{"start":{"line":10,"column":17},"end":{"line":12,"column":6}},"6":{"start":{"line":13,"column":4},"end":{"line":16,"column":6}},"7":{"start":{"line":18,"column":4},"end":{"line":18,"column":23}},"8":{"start":{"line":21,"column":20},"end":{"line":25,"column":1}},"9":{"start":{"line":22,"column":2},"end":{"line":24,"column":5}},"10":{"start":{"line":23,"column":4},"end":{"line":23,"column":31}},"11":{"start":{"line":26,"column":0},"end":{"line":29,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":20},"end":{"line":8,"column":21}},"loc":{"start":{"line":8,"column":44},"end":{"line":20,"column":1}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":21,"column":20},"end":{"line":21,"column":21}},"loc":{"start":{"line":21,"column":39},"end":{"line":25,"column":1}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":50},"end":{"line":22,"column":51}},"loc":{"start":{"line":22,"column":69},"end":{"line":24,"column":3}},"line":22}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1,"10":1,"11":1},"f":{"0":1,"1":1,"2":1},"b":{},"inputSourceMap":{"version":3,"names":["cloudinary","require","dotenv","config","cloud_name","api_key","api_secret","uploadImage","path","folder","data","v2","uploader","upload","url","publicId","public_id","error","console","log","deleteImage","destroy","result","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\","sources":["cloudinary.js"],"sourcesContent":["const cloudinary = require(\"cloudinary\");\r\nconst dotenv =require(\"dotenv\").config();\r\ncloudinary.config({\r\n    cloud_name: \"dblsyshxg\",\r\n    api_key: \"175262494617865\",\r\n    api_secret: \"gr2XlbQcnCxB7EiGJ-bPKZTPdf4\",\r\n});\r\n\r\nconst uploadImage = async (path , folder) => {\r\n    try {\r\n        const data = await cloudinary.v2.uploader.upload(path, {\r\n            folder\r\n        });\r\n        return { url: data.url, publicId: data.public_id };\r\n    } catch (error) {\r\n        console.log(error)\r\n    }\r\n}\r\n\r\nconst deleteImage = async (public_id) => {\r\n    await cloudinary.v2.uploader.destroy(public_id, (error, result) => {\r\n        console.log(result,error)\r\n    })\r\n}\r\nmodule.exports = {deleteImage,uploadImage};"],"mappings":"AAAA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAY,CAAC;AACxC,MAAMC,MAAM,GAAED,OAAO,CAAC,QAAQ,CAAC,CAACE,MAAM,EAAE;AACxCH,UAAU,CAACG,MAAM,CAAC;EACdC,UAAU,EAAE,WAAW;EACvBC,OAAO,EAAE,iBAAiB;EAC1BC,UAAU,EAAE;AAChB,CAAC,CAAC;AAEF,MAAMC,WAAW,GAAG,OAAOC,IAAI,EAAGC,MAAM,KAAK;EACzC,IAAI;IACA,MAAMC,IAAI,GAAG,MAAMV,UAAU,CAACW,EAAE,CAACC,QAAQ,CAACC,MAAM,CAACL,IAAI,EAAE;MACnDC;IACJ,CAAC,CAAC;IACF,OAAO;MAAEK,GAAG,EAAEJ,IAAI,CAACI,GAAG;MAAEC,QAAQ,EAAEL,IAAI,CAACM;IAAU,CAAC;EACtD,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZC,OAAO,CAACC,GAAG,CAACF,KAAK,CAAC;EACtB;AACJ,CAAC;AAED,MAAMG,WAAW,GAAG,MAAOJ,SAAS,IAAK;EACrC,MAAMhB,UAAU,CAACW,EAAE,CAACC,QAAQ,CAACS,OAAO,CAACL,SAAS,EAAE,CAACC,KAAK,EAAEK,MAAM,KAAK;IAC/DJ,OAAO,CAACC,GAAG,CAACG,MAAM,EAACL,KAAK,CAAC;EAC7B,CAAC,CAAC;AACN,CAAC;AACDM,MAAM,CAACC,OAAO,GAAG;EAACJ,WAAW;EAACb;AAAW,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"96620ad53f4ffdb3bd46fe86b5f6238f510f23b7","contentHash":"058518757f1d3e116b65a5bda974203e9936960f15aa5fb76936b4848ac47f88"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\verifyToken.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\verifyToken.js","statementMap":{"0":{"start":{"line":1,"column":12},"end":{"line":1,"column":35}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":32}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"3":{"start":{"line":4,"column":20},"end":{"line":18,"column":1}},"4":{"start":{"line":5,"column":16},"end":{"line":5,"column":36}},"5":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"6":{"start":{"line":8,"column":4},"end":{"line":8,"column":74}},"7":{"start":{"line":10,"column":2},"end":{"line":16,"column":3}},"8":{"start":{"line":11,"column":20},"end":{"line":11,"column":61}},"9":{"start":{"line":12,"column":4},"end":{"line":12,"column":23}},"10":{"start":{"line":15,"column":4},"end":{"line":15,"column":49}},"11":{"start":{"line":17,"column":2},"end":{"line":17,"column":16}},"12":{"start":{"line":19,"column":0},"end":{"line":19,"column":29}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":20},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":46},"end":{"line":18,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},"type":"if","locations":[{"start":{"line":7,"column":2},"end":{"line":9,"column":3}},{"start":{"line":7,"column":2},"end":{"line":9,"column":3}}],"line":7}},"s":{"0":1,"1":1,"2":1,"3":1,"4":5,"5":5,"6":0,"7":5,"8":5,"9":5,"10":0,"11":5,"12":1},"f":{"0":5},"b":{"0":[0,5]},"inputSourceMap":{"version":3,"names":["jwt","require","dotenv","config","verifyToken","req","res","next","token","headers","status","send","decoded","verify","process","env","JWT_SECRET","user","err","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\","sources":["verifyToken.js"],"sourcesContent":["const jwt=require(\"jsonwebtoken\");\r\nconst dotenv=require(\"dotenv\");\r\ndotenv.config();\r\n\r\nconst verifyToken=async(req, res, next)=>{\r\nconst token=req.headers['token']\r\n//const token=authHeader && authHeader.split('')[1]\r\nif (!token) {\r\n    return res.status(403).send(\"A token is required for authentication\");\r\n  }\r\n  try {\r\n    const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n    req.user = decoded;\r\n    // console.log(req.user)\r\n  } catch (err) {\r\n    return res.status(401).send(\"Invalid Token\");\r\n  }\r\n  return next();\r\n\r\n}\r\nmodule.exports=verifyToken;\r\n\r\n\r\n\r\n// const jwt=require(\"jsonwebtoken\");\r\n// const dotenv=require(\"dotenv\");\r\n// dotenv.config();\r\n\r\n// const verifyToken=async(req, res, next)=>{\r\n// // const token=req.headers['token']\r\n// //const token=authHeader && authHeader.split('')[1]\r\n// const token = req.cookies.jwt\r\n// if(token){\r\n//     jwt.verify(token,'mirinditokensecrete',(err,decodedtoken)=>{\r\n//         if(err){\r\n//             res.status(401).json({\"Error\":\"Please Login First !!!\"})\r\n//         }\r\n//         if(decodedtoken){\r\n//              next()\r\n//         }\r\n//     })\r\n// }else{\r\n//     res.status(401).json({\"Message\":\"Please Login First !!!\"})\r\n//  }\r\n// // if (!token) {\r\n// //     return res.status(404).send(\"A token is required for authentication\");\r\n// //   }\r\n// //   try {\r\n// //     const decoded = jwt.verify(token, process.env.JWT_SECRET);\r\n// //     req.user = decoded;\r\n// //     // console.log(req.user)\r\n// //   } catch (err) {\r\n// //     return res.status(401).send(\"Invalid Token\");\r\n// //   }\r\n// //   return next();\r\n\r\n// }\r\n// module.exports=verifyToken;\r\n\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAACC,OAAO,CAAC,cAAc,CAAC;AACjC,MAAMC,MAAM,GAACD,OAAO,CAAC,QAAQ,CAAC;AAC9BC,MAAM,CAACC,MAAM,EAAE;AAEf,MAAMC,WAAW,GAAC,OAAMC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAG;EACzC,MAAMC,KAAK,GAACH,GAAG,CAACI,OAAO,CAAC,OAAO,CAAC;EAChC;EACA,IAAI,CAACD,KAAK,EAAE;IACR,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,wCAAwC,CAAC;EACvE;EACA,IAAI;IACF,MAAMC,OAAO,GAAGZ,GAAG,CAACa,MAAM,CAACL,KAAK,EAAEM,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IACzDX,GAAG,CAACY,IAAI,GAAGL,OAAO;IAClB;EACF,CAAC,CAAC,OAAOM,GAAG,EAAE;IACZ,OAAOZ,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;EAC9C;EACA,OAAOJ,IAAI,EAAE;AAEf,CAAC;AACDY,MAAM,CAACC,OAAO,GAAChB,WAAW;;AAI1B;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"834f6507261d3f2b0dc796344a51e69843f65117","contentHash":"740963c57824e7e9536b3f18466b8bdef7dcfbcb5ac77337234ec90a333cfdb9"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\isAdmin.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\isAdmin.js","statementMap":{"0":{"start":{"line":1,"column":12},"end":{"line":1,"column":35}},"1":{"start":{"line":2,"column":14},"end":{"line":2,"column":40}},"2":{"start":{"line":3,"column":16},"end":{"line":60,"column":1}},"3":{"start":{"line":32,"column":16},"end":{"line":32,"column":36}},"4":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"5":{"start":{"line":34,"column":4},"end":{"line":34,"column":74}},"6":{"start":{"line":36,"column":2},"end":{"line":59,"column":3}},"7":{"start":{"line":37,"column":20},"end":{"line":37,"column":67}},"8":{"start":{"line":38,"column":4},"end":{"line":38,"column":23}},"9":{"start":{"line":39,"column":18},"end":{"line":39,"column":32}},"10":{"start":{"line":40,"column":18},"end":{"line":42,"column":6}},"11":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"12":{"start":{"line":44,"column":6},"end":{"line":47,"column":9}},"13":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"14":{"start":{"line":50,"column":6},"end":{"line":50,"column":20}},"15":{"start":{"line":52,"column":6},"end":{"line":55,"column":9}},"16":{"start":{"line":58,"column":4},"end":{"line":58,"column":49}},"17":{"start":{"line":61,"column":0},"end":{"line":61,"column":25}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":16},"end":{"line":3,"column":17}},"loc":{"start":{"line":3,"column":42},"end":{"line":60,"column":1}},"line":3}},"branchMap":{"0":{"loc":{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},"type":"if","locations":[{"start":{"line":33,"column":2},"end":{"line":35,"column":3}},{"start":{"line":33,"column":2},"end":{"line":35,"column":3}}],"line":33},"1":{"loc":{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":48,"column":5}},{"start":{"line":43,"column":4},"end":{"line":48,"column":5}}],"line":43},"2":{"loc":{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},"type":"if","locations":[{"start":{"line":49,"column":4},"end":{"line":56,"column":5}},{"start":{"line":49,"column":4},"end":{"line":56,"column":5}}],"line":49}},"s":{"0":1,"1":1,"2":1,"3":5,"4":5,"5":0,"6":5,"7":5,"8":5,"9":5,"10":5,"11":5,"12":0,"13":5,"14":5,"15":0,"16":0,"17":1},"f":{"0":5},"b":{"0":[0,5],"1":[0,5],"2":[5,0]},"inputSourceMap":{"version":3,"names":["jwt","require","users","isAdmin","req","res","next","Token","headers","status","send","decoded","verify","process","env","JWT_SECRET","user","email","found","findOne","json","message","role","err","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\","sources":["isAdmin.js"],"sourcesContent":["const jwt =require(\"jsonwebtoken\");\r\nconst users =require(\"../models/users\");\r\n\r\nconst isAdmin = async (req, res, next) => {\r\n\r\n  // const Token = req.cookies.jwt\r\n//   if(token){\r\n//       jwt.verify(token,'mirinditokensecrete',async(err,decodedtoken)=>{\r\n//           if(err){\r\n//               res.status(400).json({\"message\":err})\r\n//   // next()\r\n//           }\r\n//           if(decodedtoken){\r\n//               const data= await users.findById(decodedtoken.id)\r\n//               res.status(200).json({\r\n//                 data:token\r\n//               })\r\n//               // if(data){\r\n//               //    if(data.email==\"admin@gmail.com\"){\r\n//               //     next()\r\n//               //    }\r\n//               //    else{\r\n//               //     res.status(400).json({\"message\":\"Only Admin can perform this action\"})\r\n//               //    }\r\n//               // }else{\r\n//               //     res.status(400).json({\"message\":\"user not found\"})\r\n//               // }\r\n//           }\r\n//       })\r\n//   }else{\r\n//       res.status(401).json({\"message\":\"Log In first !!\"})\r\n// }\r\n\r\n  const Token = req.headers[\"token\"];\r\n  if (!Token) {\r\n    return res.status(403).send(\"A token is required for authentication\");\r\n  }\r\n  try {\r\n    const decoded = await jwt.verify(Token, process.env.JWT_SECRET);\r\n    req.user = decoded;\r\n   const email = req.user.email;\r\n    const found = await users.findOne({email} );\r\n    if (!found) {\r\n      return res.status(404).json({\r\n        status: 404,\r\n        message: \"User not found\",\r\n      });\r\n    }\r\n    if (found.role == \"Admin\") {\r\n      return next();\r\n    } else {\r\n      return res.status(403).json({\r\n        status: 403,\r\n        message: \"Only Admin allowed\",\r\n      });\r\n    }\r\n  } catch (err) {\r\n    return res.status(401).send(\"Invalid Token\");\r\n  }\r\n};\r\nmodule.exports=isAdmin;\r\n"],"mappings":"AAAA,MAAMA,GAAG,GAAEC,OAAO,CAAC,cAAc,CAAC;AAClC,MAAMC,KAAK,GAAED,OAAO,CAAC,iBAAiB,CAAC;AAEvC,MAAME,OAAO,GAAG,OAAOC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAK;EAExC;EACF;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEE,MAAMC,KAAK,GAAGH,GAAG,CAACI,OAAO,CAAC,OAAO,CAAC;EAClC,IAAI,CAACD,KAAK,EAAE;IACV,OAAOF,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,wCAAwC,CAAC;EACvE;EACA,IAAI;IACF,MAAMC,OAAO,GAAG,MAAMX,GAAG,CAACY,MAAM,CAACL,KAAK,EAAEM,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;IAC/DX,GAAG,CAACY,IAAI,GAAGL,OAAO;IACnB,MAAMM,KAAK,GAAGb,GAAG,CAACY,IAAI,CAACC,KAAK;IAC3B,MAAMC,KAAK,GAAG,MAAMhB,KAAK,CAACiB,OAAO,CAAC;MAACF;IAAK,CAAC,CAAE;IAC3C,IAAI,CAACC,KAAK,EAAE;MACV,OAAOb,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACW,IAAI,CAAC;QAC1BX,MAAM,EAAE,GAAG;QACXY,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;IACA,IAAIH,KAAK,CAACI,IAAI,IAAI,OAAO,EAAE;MACzB,OAAOhB,IAAI,EAAE;IACf,CAAC,MAAM;MACL,OAAOD,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACW,IAAI,CAAC;QAC1BX,MAAM,EAAE,GAAG;QACXY,OAAO,EAAE;MACX,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,OAAOE,GAAG,EAAE;IACZ,OAAOlB,GAAG,CAACI,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,eAAe,CAAC;EAC9C;AACF,CAAC;AACDc,MAAM,CAACC,OAAO,GAACtB,OAAO"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9a8f01c39c380ef9fa24ebf2146ae85dc403f93d","contentHash":"5fb78e7e2a09fa6ca549710e0c741957e072d9bf1a91fc0b7a5e59672442baa7"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\users.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\users.js","statementMap":{"0":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}},"1":{"start":{"line":2,"column":19},"end":{"line":18,"column":2}},"2":{"start":{"line":19,"column":0},"end":{"line":19,"column":53}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["mongoose","require","UserSchema","Schema","Fullname","type","String","age","email","password","role","module","exports","model"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\","sources":["users.js"],"sourcesContent":["const mongoose=require('mongoose');\r\n\r\nconst UserSchema=new mongoose.Schema({\r\n    Fullname:{\r\n        type:String\r\n    },\r\n    age:{\r\n        type:String\r\n    },\r\n    email:{\r\n        type:String\r\n    },\r\n    password:{\r\n        type:String\r\n    },\r\n    role:{\r\n        type:String\r\n    },\r\n});\r\nmodule.exports=mongoose.model(\"users\",UserSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAACC,OAAO,CAAC,UAAU,CAAC;AAElC,MAAMC,UAAU,GAAC,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACjCC,QAAQ,EAAC;IACLC,IAAI,EAACC;EACT,CAAC;EACDC,GAAG,EAAC;IACAF,IAAI,EAACC;EACT,CAAC;EACDE,KAAK,EAAC;IACFH,IAAI,EAACC;EACT,CAAC;EACDG,QAAQ,EAAC;IACLJ,IAAI,EAACC;EACT,CAAC;EACDI,IAAI,EAAC;IACDL,IAAI,EAACC;EACT;AACJ,CAAC,CAAC;AACFK,MAAM,CAACC,OAAO,GAACZ,QAAQ,CAACa,KAAK,CAAC,OAAO,EAACX,UAAU,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c6a308966a0fbf8588a2df60089c7c92330c11a8","contentHash":"15aabda40a8a46f0cb6de7d71dc8d48a222dca9ad8bbca0a95afb392ae265ad5"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\multer.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\multer.js","statementMap":{"0":{"start":{"line":1,"column":15},"end":{"line":1,"column":32}},"1":{"start":{"line":2,"column":13},"end":{"line":2,"column":28}},"2":{"start":{"line":15,"column":16},"end":{"line":15,"column":38}},"3":{"start":{"line":16,"column":15},"end":{"line":18,"column":2}},"4":{"start":{"line":19,"column":0},"end":{"line":19,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["multer","require","path","storage","diskStorage","upload","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\utils\\","sources":["multer.js"],"sourcesContent":["const multer =require(\"multer\");\r\nconst path=require(\"path\");\r\n\r\n// const   multer({\r\n//     storage: multer.diskStorage({}),\r\n//     fileFilter: (req, file, cb) => {\r\n//         let ext = path.extname(file.originalname);\r\n//         if(ext !== \".jpg\" && ext !== \".jpeg\" && ext !== \".png\"){\r\n//             cb(new Error(\"File type is not supported\"), false);\r\n//             return;\r\n//         }\r\n//         cb(null, true);\r\n//     },\r\n// });\r\nconst storage = multer.diskStorage({})\r\nconst upload = multer({ storage: storage })\r\n\r\nmodule.exports =upload;\r\n"],"mappings":"AAAA,MAAMA,MAAM,GAAEC,OAAO,CAAC,QAAQ,CAAC;AAC/B,MAAMC,IAAI,GAACD,OAAO,CAAC,MAAM,CAAC;;AAE1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,OAAO,GAAGH,MAAM,CAACI,WAAW,CAAC,CAAC,CAAC,CAAC;AACtC,MAAMC,MAAM,GAAGL,MAAM,CAAC;EAAEG,OAAO,EAAEA;AAAQ,CAAC,CAAC;AAE3CG,MAAM,CAACC,OAAO,GAAEF,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"895517b780c47e1a53bf473a3a262ee24ad55917","contentHash":"0dcfc4d64aab85d042b1df1db78b43296c0dac1eae9f7e9417571eac348bc734"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\contact.routers.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\contact.routers.js","statementMap":{"0":{"start":{"line":108,"column":15},"end":{"line":108,"column":42}},"1":{"start":{"line":109,"column":20},"end":{"line":109,"column":57}},"2":{"start":{"line":110,"column":16},"end":{"line":110,"column":49}},"3":{"start":{"line":111,"column":26},"end":{"line":111,"column":69}},"4":{"start":{"line":112,"column":0},"end":{"line":112,"column":48}},"5":{"start":{"line":113,"column":0},"end":{"line":113,"column":72}},"6":{"start":{"line":114,"column":0},"end":{"line":114,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["router","require","Router","verifyToken","isAdmin","contactController","post","SendMessage","get","DisplayContact","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\","sources":["contact.routers.js"],"sourcesContent":["/**\r\n * @swagger\r\n * components:\r\n *   schemas:\r\n *     Book:\r\n *       type: object\r\n *       required:\r\n *         - title\r\n *         - author\r\n *         - finished\r\n *       properties:\r\n *         id:\r\n *           type: string\r\n *           description: The auto-generated id of the book\r\n *         title:\r\n *           type: string\r\n *           description: The title of your book\r\n *         author:\r\n *           type: string\r\n *           description: The book author\r\n *         finished:\r\n *           type: boolean\r\n *           description: Whether you have finished reading the book\r\n *         createdAt:\r\n *           type: string\r\n *           format: date\r\n *           description: The date the book was added\r\n *       example:\r\n *         id: d5fE_asz\r\n *         title: The New Turing Omnibus\r\n *         author: Alexander K. Dewdney\r\n *         finished: false\r\n *         createdAt: 2020-03-10T04:05:06.157Z\r\n */\r\n/**\r\n * @swagger\r\n * /contat:\r\n *   get:\r\n *     summary: Get all Contact \r\n *     tags: [Contacts]\r\n *     parameters:\r\n *       - name: token\r\n *         in: header\r\n *         description: THis is the token to login\r\n *         type: string\r\n *         required: true\r\n *     responses:\r\n *       200:\r\n *         description: Contact Have been Fetched.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n *   post:\r\n *     summary: Send Message \r\n *     tags: [Contacts]\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - name\r\n *               - email\r\n *               - address\r\n *               - message\r\n *             properties:\r\n *               name:\r\n *                 type: string\r\n *               email:\r\n *                 type: string\r\n *               address:\r\n *                 type: string\r\n *               message:\r\n *                 type: string\r\n *           example:\r\n *               name: \"mirindi saidi\"\r\n *               email: \"mirindisaidi19@gmail.com\"\r\n *               address: \"rubavu\"\r\n *               message: \"Do you know java?\"\r\n *     responses:\r\n *       201:\r\n *         description: Message Send Successfully.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n */\r\nconst router=require(\"express\").Router();\r\nconst verifyToken =require(\"../middlewares/verifyToken\");\r\nconst isAdmin=require(\"../middlewares/isAdmin\");\r\nconst contactController =require(\"../controllers/ContactController\");\r\nrouter.post(\"/\",contactController.SendMessage);\r\nrouter.get(\"/\",verifyToken,isAdmin,contactController.DisplayContact);\r\nmodule.exports=router;"],"mappingsxC,MAAMC,WAAW,GAAEF,OAAO,CAAC,4BAA4B,CAAC;AACxD,MAAMG,OAAO,GAACH,OAAO,CAAC,wBAAwB,CAAC;AAC/C,MAAMI,iBAAiB,GAAEJ,OAAO,CAAC,kCAAkC,CAAC;AACpED,MAAM,CAACM,IAAI,CAAC,GAAG,EAACD,iBAAiB,CAACE,WAAW,CAAC;AAC9CP,MAAM,CAACQ,GAAG,CAAC,GAAG,EAACL,WAAW,EAACC,OAAO,EAACC,iBAAiB,CAACI,cAAc,CAAC;AACpEC,MAAM,CAACC,OAAO,GAACX,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"499982e785457bbaf41c36bc1b60fde1e7d35e50","contentHash":"016b5e965e813364dff3954b0f800e587ac1bf8c0f6a7ce8658a47fa62564d70"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\ContactController.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\ContactController.js","statementMap":{"0":{"start":{"line":1,"column":16},"end":{"line":1,"column":45}},"1":{"start":{"line":4,"column":17},"end":{"line":9,"column":6}},"2":{"start":{"line":10,"column":4},"end":{"line":10,"column":22}},"3":{"start":{"line":11,"column":4},"end":{"line":15,"column":8}},"4":{"start":{"line":18,"column":24},"end":{"line":18,"column":44}},"5":{"start":{"line":19,"column":4},"end":{"line":23,"column":8}},"6":{"start":{"line":26,"column":0},"end":{"line":26,"column":33}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":3,"column":2},"end":{"line":3,"column":3}},"loc":{"start":{"line":3,"column":37},"end":{"line":16,"column":3}},"line":3},"1":{"name":"(anonymous_1)","decl":{"start":{"line":17,"column":2},"end":{"line":17,"column":3}},"loc":{"start":{"line":17,"column":40},"end":{"line":24,"column":3}},"line":17}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"names":["contact","require","ContactCtroller","SendMessage","req","res","send","name","body","email","address","message","save","status","json","data","DisplayContact","ContactList","find","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\","sources":["ContactController.js"],"sourcesContent":["const contact =require(\"../models/Contacts\");\r\n\r\nclass ContactCtroller{\r\n    static async SendMessage(req,res){\r\n        const send = new contact({\r\n            name: req.body.name,\r\n            email: req.body.email,\r\n            address: req.body.address,\r\n            message: req.body.message,\r\n        })\r\n        await send.save()\r\n        res.send(\r\n            res.status(201).json({\r\n            status:201,\r\n            message:\"Successfull Send\",\r\n            data:send\r\n        }) )\r\n    }\r\n\r\n    static async DisplayContact(req,res){\r\n        const ContactList = await contact.find()\r\n        res.send(\r\n            res.status(200).json({\r\n               status:200,\r\n                message:\"List of Contact\",\r\n                data:ContactList\r\n            })  \r\n        )\r\n    }\r\n    }\r\n\r\nmodule.exports=ContactCtroller;"],"mappings":"AAAA,MAAMA,OAAO,GAAEC,OAAO,CAAC,oBAAoB,CAAC;AAE5C,MAAMC,eAAe;EACjB,aAAaC,WAAW,CAACC,GAAG,EAACC,GAAG,EAAC;IAC7B,MAAMC,IAAI,GAAG,IAAIN,OAAO,CAAC;MACrBO,IAAI,EAAEH,GAAG,CAACI,IAAI,CAACD,IAAI;MACnBE,KAAK,EAAEL,GAAG,CAACI,IAAI,CAACC,KAAK;MACrBC,OAAO,EAAEN,GAAG,CAACI,IAAI,CAACE,OAAO;MACzBC,OAAO,EAAEP,GAAG,CAACI,IAAI,CAACG;IACtB,CAAC,CAAC;IACF,MAAML,IAAI,CAACM,IAAI,EAAE;IACjBP,GAAG,CAACC,IAAI,CACJD,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACrBD,MAAM,EAAC,GAAG;MACVF,OAAO,EAAC,kBAAkB;MAC1BI,IAAI,EAACT;IACT,CAAC,CAAC,CAAE;EACR;EAEA,aAAaU,cAAc,CAACZ,GAAG,EAACC,GAAG,EAAC;IAChC,MAAMY,WAAW,GAAG,MAAMjB,OAAO,CAACkB,IAAI,EAAE;IACxCb,GAAG,CAACC,IAAI,CACJD,GAAG,CAACQ,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAClBD,MAAM,EAAC,GAAG;MACTF,OAAO,EAAC,iBAAiB;MACzBI,IAAI,EAACE;IACT,CAAC,CAAC,CACL;EACL;AACA;AAEJE,MAAM,CAACC,OAAO,GAAClB,eAAe"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7d275558bb7584d3864547582e09311ac47582b0","contentHash":"421558c1809970cb556dc7c4db86a4b3a0b466adc2058fef9dbe36194eb6ad95"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\Contacts.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\Contacts.js","statementMap":{"0":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}},"1":{"start":{"line":2,"column":22},"end":{"line":15,"column":2}},"2":{"start":{"line":16,"column":0},"end":{"line":16,"column":59}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["mongoose","require","ContactSchema","Schema","name","type","String","email","address","message","module","exports","model"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\models\\","sources":["Contacts.js"],"sourcesContent":["const mongoose=require('mongoose');\r\n\r\nconst ContactSchema=new mongoose.Schema({\r\n    name:{\r\n            type:String\r\n    },\r\n    email:{\r\n        type:String\r\n    },\r\n    address:{\r\n        type:String\r\n    },\r\n    message:{\r\n        type:String\r\n    },\r\n});\r\nmodule.exports=mongoose.model(\"Contacts\",ContactSchema);"],"mappings":"AAAA,MAAMA,QAAQ,GAACC,OAAO,CAAC,UAAU,CAAC;AAElC,MAAMC,aAAa,GAAC,IAAIF,QAAQ,CAACG,MAAM,CAAC;EACpCC,IAAI,EAAC;IACGC,IAAI,EAACC;EACb,CAAC;EACDC,KAAK,EAAC;IACFF,IAAI,EAACC;EACT,CAAC;EACDE,OAAO,EAAC;IACJH,IAAI,EAACC;EACT,CAAC;EACDG,OAAO,EAAC;IACJJ,IAAI,EAACC;EACT;AACJ,CAAC,CAAC;AACFI,MAAM,CAACC,OAAO,GAACX,QAAQ,CAACY,KAAK,CAAC,UAAU,EAACV,aAAa,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f9395de1fabad59356c67cee6a1e278cece5e116","contentHash":"8aeac5a01971b7f02d8b89f5ed55fdddc5113459ea135799b6220f1c2482162e"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\auth.routers.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\auth.routers.js","statementMap":{"0":{"start":{"line":89,"column":15},"end":{"line":89,"column":42}},"1":{"start":{"line":90,"column":23},"end":{"line":90,"column":63}},"2":{"start":{"line":91,"column":19},"end":{"line":91,"column":55}},"3":{"start":{"line":92,"column":0},"end":{"line":92,"column":64}},"4":{"start":{"line":93,"column":0},"end":{"line":93,"column":44}},"5":{"start":{"line":94,"column":0},"end":{"line":94,"column":42}},"6":{"start":{"line":95,"column":0},"end":{"line":95,"column":24}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["router","require","Router","authController","validation","post","creatAccount","Login","put","update","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\routers\\","sources":["auth.routers.js"],"sourcesContent":["/**\r\n * @swagger\r\n * tags:\r\n *   name: User\r\n *   description: This is the Users API\r\n * /auth/signup:\r\n *   post:\r\n *     summary: SignUp user \r\n *     tags: [User]\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               Fullname:\r\n *                 type: string\r\n *               age:\r\n *                 type: string\r\n *               email:\r\n *                 type: string\r\n *               password:\r\n *                 type: string\r\n *             example:\r\n *               fullname: \"Mirindi Saidi\"\r\n *               age: \"23\"\r\n *               email: \"mirindisaidi@mail.com\"\r\n *               password: \"Password@1\"\r\n *     responses:\r\n *       200:\r\n *         description: SignUp Successfull.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n * /auth/login:\r\n *   post:\r\n *     summary: Login a user \r\n *     tags: [User]\r\n *     requestBody:\r\n *       required: true\r\n *       content: \r\n *         application/json:\r\n *           schema:\r\n *             type: object\r\n *             required:\r\n *               - email\r\n *               - password\r\n *             properties:\r\n *               email:\r\n *                 type: string\r\n *               password:\r\n *                 type: string\r\n *             example:\r\n *               email: \"mirindisaidi@mail.com\"\r\n *               password: \"Password@1\"\r\n *     responses:\r\n *       200:\r\n *         description: Login Successfull.\r\n *         content:\r\n *           application/json:\r\n *             schema:\r\n *               type: object\r\n *               properties: \r\n *                 status:\r\n *                  type: integer\r\n *                 message:\r\n *                  type: string\r\n *                 data:\r\n *                  type: object\r\n *       500:\r\n *         description: Some server error\r\n *\r\n */\r\n\r\nconst router=require(\"express\").Router();\r\nconst authController=require(\"../controllers/authController\");\r\nconst validation=require(\"../middlewares/validation\");\r\nrouter.post(\"/signup\",validation,authController.creatAccount);\r\nrouter.post(\"/login\",authController.Login);\r\nrouter.put(\"/:id\",authController.update);\r\nmodule.exports =router;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMA,MAAM,GAACC,OAAO,CAAC,SAAS,CAAC,CAACC,MAAM,EAAE;AACxC,MAAMC,cAAc,GAACF,OAAO,CAAC,+BAA+B,CAAC;AAC7D,MAAMG,UAAU,GAACH,OAAO,CAAC,2BAA2B,CAAC;AACrDD,MAAM,CAACK,IAAI,CAAC,SAAS,EAACD,UAAU,EAACD,cAAc,CAACG,YAAY,CAAC;AAC7DN,MAAM,CAACK,IAAI,CAAC,QAAQ,EAACF,cAAc,CAACI,KAAK,CAAC;AAC1CP,MAAM,CAACQ,GAAG,CAAC,MAAM,EAACL,cAAc,CAACM,MAAM,CAAC;AACxCC,MAAM,CAACC,OAAO,GAAEX,MAAM"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3bdf7a4266567d2a7b528087a1be7f6438fb8c1e","contentHash":"68d1bbc7bb2e366afcb07804b6e6e87b073886812b54ecb66f92b74870699b23"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\authController.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\authController.js","statementMap":{"0":{"start":{"line":1,"column":13},"end":{"line":1,"column":39}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":32}},"2":{"start":{"line":6,"column":4},"end":{"line":6,"column":36}},"3":{"start":{"line":7,"column":15},"end":{"line":7,"column":32}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":16}},"5":{"start":{"line":11,"column":4},"end":{"line":50,"column":5}},"6":{"start":{"line":17,"column":10},"end":{"line":17,"column":18}},"7":{"start":{"line":19,"column":19},"end":{"line":19,"column":54}},"8":{"start":{"line":20,"column":24},"end":{"line":22,"column":8}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":27}},"10":{"start":{"line":25,"column":6},"end":{"line":43,"column":7}},"11":{"start":{"line":26,"column":8},"end":{"line":29,"column":11}},"12":{"start":{"line":31,"column":27},"end":{"line":37,"column":10}},"13":{"start":{"line":38,"column":8},"end":{"line":42,"column":11}},"14":{"start":{"line":45,"column":6},"end":{"line":45,"column":25}},"15":{"start":{"line":46,"column":6},"end":{"line":49,"column":9}},"16":{"start":{"line":53,"column":4},"end":{"line":112,"column":5}},"17":{"start":{"line":57,"column":10},"end":{"line":57,"column":18}},"18":{"start":{"line":58,"column":23},"end":{"line":60,"column":8}},"19":{"start":{"line":61,"column":6},"end":{"line":61,"column":26}},"20":{"start":{"line":62,"column":6},"end":{"line":106,"column":7}},"21":{"start":{"line":63,"column":8},"end":{"line":66,"column":11}},"22":{"start":{"line":68,"column":24},"end":{"line":68,"column":38}},"23":{"start":{"line":69,"column":27},"end":{"line":69,"column":44}},"24":{"start":{"line":70,"column":23},"end":{"line":70,"column":36}},"25":{"start":{"line":71,"column":34},"end":{"line":71,"column":76}},"26":{"start":{"line":74,"column":8},"end":{"line":105,"column":9}},"27":{"start":{"line":75,"column":10},"end":{"line":99,"column":11}},"28":{"start":{"line":76,"column":26},"end":{"line":79,"column":14}},"29":{"start":{"line":82,"column":32},"end":{"line":82,"column":51}},"30":{"start":{"line":83,"column":25},"end":{"line":83,"column":43}},"31":{"start":{"line":84,"column":35},"end":{"line":84,"column":52}},"32":{"start":{"line":85,"column":12},"end":{"line":93,"column":15}},"33":{"start":{"line":95,"column":12},"end":{"line":98,"column":15}},"34":{"start":{"line":101,"column":10},"end":{"line":104,"column":13}},"35":{"start":{"line":108,"column":6},"end":{"line":111,"column":9}},"36":{"start":{"line":115,"column":4},"end":{"line":143,"column":5}},"37":{"start":{"line":117,"column":25},"end":{"line":119,"column":8}},"38":{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},"39":{"start":{"line":121,"column":8},"end":{"line":121,"column":48}},"40":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"41":{"start":{"line":124,"column":8},"end":{"line":124,"column":38}},"42":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"43":{"start":{"line":127,"column":8},"end":{"line":127,"column":42}},"44":{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},"45":{"start":{"line":130,"column":8},"end":{"line":130,"column":48}},"46":{"start":{"line":132,"column":6},"end":{"line":132,"column":30}},"47":{"start":{"line":133,"column":6},"end":{"line":137,"column":10}},"48":{"start":{"line":139,"column":6},"end":{"line":142,"column":10}},"49":{"start":{"line":146,"column":0},"end":{"line":146,"column":32}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":10,"column":2},"end":{"line":10,"column":3}},"loc":{"start":{"line":10,"column":38},"end":{"line":51,"column":3}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":52,"column":2},"end":{"line":52,"column":3}},"loc":{"start":{"line":52,"column":31},"end":{"line":113,"column":3}},"line":52},"2":{"name":"(anonymous_2)","decl":{"start":{"line":114,"column":2},"end":{"line":114,"column":3}},"loc":{"start":{"line":114,"column":32},"end":{"line":144,"column":3}},"line":114}},"branchMap":{"0":{"loc":{"start":{"line":25,"column":6},"end":{"line":43,"column":7}},"type":"if","locations":[{"start":{"line":25,"column":6},"end":{"line":43,"column":7}},{"start":{"line":25,"column":6},"end":{"line":43,"column":7}}],"line":25},"1":{"loc":{"start":{"line":62,"column":6},"end":{"line":106,"column":7}},"type":"if","locations":[{"start":{"line":62,"column":6},"end":{"line":106,"column":7}},{"start":{"line":62,"column":6},"end":{"line":106,"column":7}}],"line":62},"2":{"loc":{"start":{"line":74,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":74,"column":8},"end":{"line":105,"column":9}},{"start":{"line":74,"column":8},"end":{"line":105,"column":9}}],"line":74},"3":{"loc":{"start":{"line":75,"column":10},"end":{"line":99,"column":11}},"type":"if","locations":[{"start":{"line":75,"column":10},"end":{"line":99,"column":11}},{"start":{"line":75,"column":10},"end":{"line":99,"column":11}}],"line":75},"4":{"loc":{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},"type":"if","locations":[{"start":{"line":120,"column":6},"end":{"line":122,"column":7}},{"start":{"line":120,"column":6},"end":{"line":122,"column":7}}],"line":120},"5":{"loc":{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},"type":"if","locations":[{"start":{"line":123,"column":6},"end":{"line":125,"column":7}},{"start":{"line":123,"column":6},"end":{"line":125,"column":7}}],"line":123},"6":{"loc":{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},"type":"if","locations":[{"start":{"line":126,"column":6},"end":{"line":128,"column":7}},{"start":{"line":126,"column":6},"end":{"line":128,"column":7}}],"line":126},"7":{"loc":{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},"type":"if","locations":[{"start":{"line":129,"column":6},"end":{"line":131,"column":7}},{"start":{"line":129,"column":6},"end":{"line":131,"column":7}}],"line":129}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":4,"6":4,"7":4,"8":4,"9":4,"10":4,"11":2,"12":2,"13":2,"14":0,"15":0,"16":5,"17":5,"18":5,"19":5,"20":5,"21":1,"22":4,"23":4,"24":4,"25":4,"26":4,"27":4,"28":3,"29":3,"30":3,"31":3,"32":3,"33":1,"34":0,"35":0,"36":1,"37":1,"38":1,"39":1,"40":1,"41":1,"42":1,"43":1,"44":1,"45":1,"46":1,"47":1,"48":1,"49":1},"f":{"0":4,"1":5,"2":1},"b":{"0":[2,2],"1":[1,4],"2":[4,0],"3":[3,1],"4":[1,0],"5":[1,0],"6":[1,0],"7":[1,0]},"inputSourceMap":{"version":3,"names":["User","require","bcrypt","encode","decode","dotenv","config","authController","creatAccount","req","res","Fullname","age","email","password","body","hash","hashSync","checkUser","findOne","user","status","json","message","createDate","create","role","data","error","console","log","Login","findUser","dbEmail","dbPassword","dbRole","decreptedPassword","compare","token","decodeToken","emailfromtoken","stastus","update","userupdate","_id","params","id","save","send","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\controllers\\","sources":["authController.js"],"sourcesContent":["const User =require(\"../models/users\");\r\nconst bcrypt =require(\"bcrypt\");\r\nconst {encode, decode} =require(\"../helper/jwtTokenize\")\r\nconst dotenv=require(\"dotenv\");\r\n\r\ndotenv.config();\r\nclass authController{\r\n    static async creatAccount(req, res){\r\n        try {\r\n            const {Fullname,age,email,password}=req.body;\r\n            // console.log(\"email:\",email);\r\n            const hash = await bcrypt.hashSync(password, 10);\r\n            const checkUser = await User.findOne({email});\r\n            req.user=checkUser\r\n            // console.log(\"this:\",checkUser)\r\n            if(req.user){\r\n                return res.status(409).json({\r\n                    status:409,\r\n                    message:\"Email already exist\"\r\n                    \r\n                })\r\n            }\r\n            else{\r\n                const createDate = await User.create({\r\n                 Fullname,\r\n                 age,\r\n                 email,\r\n                 role:\"user\",\r\n                 password:hash\r\n                });\r\n               return res.status(200).json({\r\n                    status: 200,\r\n                    message: \"Account created\",\r\n                    data:createDate\r\n                })\r\n\r\n            }\r\n        } catch (error) {\r\n            console.log(error)\r\n            res.status(500).json({\r\n                status:500,\r\n                message:\"server problem:\" + error.message\r\n            })\r\n            \r\n        }\r\n    }\r\n\r\n    static async Login(req, res){\r\n        try {\r\n            const {email,password}=req.body\r\n            const findUser = await User.findOne({email})\r\n            req.user=findUser\r\n            if(!findUser){\r\n                res.status(404).json({\r\n                    status: 404,\r\n                    message:\"Account don't exit\"\r\n                })\r\n            }\r\n            else{\r\n                const dbEmail = req.user.email\r\n                const dbPassword = req.user.password\r\n                const dbRole= req.user.role\r\n                const decreptedPassword = await bcrypt.compare(password, dbPassword)\r\n                // console.log(\"dec\",decreptedPassword)\r\n                // console.log(dbEmail,dbPassword);\r\n                if(dbEmail == email){\r\n                    if(decreptedPassword){\r\n                        const token=await encode({\r\n                            email,\r\n                            dbRole   \r\n                        });\r\n                        // const maxAge=3*24*60*60\r\n                        // res.cookie('jwt',token,{httpOnly:true,maxAge:maxAge *1000})\r\n                        const decodeToken = await decode(token);\r\n                        const role = decodeToken.dbRole\r\n                        const emailfromtoken =decodeToken.email\r\n                       \r\n                       return res.status(200).json({\r\n                            stastus: 200,\r\n                            message: \"Login succefull\",\r\n                            data:{\r\n                                role,\r\n                                emailfromtoken,\r\n                                token\r\n                            }\r\n                        })\r\n                    }else{\r\n                        res.status(400).json({\r\n                            stastus: 400,\r\n                            message:\"Wrong Password\"\r\n                        })\r\n                    }\r\n                }else{\r\n                    res.status(400).json({\r\n                        stastus: 400,\r\n                        message:\"Wrong Email\"\r\n                    })\r\n                }\r\n            }\r\n            \r\n        } catch (error) {\r\n            res.status(500).json({\r\n                stastus: 500,\r\n                message:\"server problem\" +error.message\r\n            })\r\n        }\r\n    }\r\n\r\n    static async update(req,res){\r\n        try {\r\n            // const hash = await bcrypt.hashSync(password, 10);\r\n            const userupdate = await User.findOne({ _id: req.params.id })\r\n            \r\n            if (req.body.Fullname) {\r\n                userupdate.Fullname = req.body.Fullname\r\n            }\r\n    \r\n            if (req.body.age) {\r\n                userupdate.age = req.body.age\r\n            }\r\n            if (req.body.email) {\r\n                userupdate.email = req.body.email\r\n            }\r\n            if (req.body.password) {\r\n                userupdate.password = req.body.password\r\n                \r\n            }\r\n           \r\n\r\n            await userupdate.save()\r\n            res.send( res.status(200).json({\r\n                status:200,\r\n                message:\"Account Updated Successfull\",\r\n                data: userupdate\r\n            }) \r\n            )\r\n        } catch {\r\n            res.send( res.status(404).json({\r\n                status:404,\r\n                error:\"Account doesn't exist!\",\r\n            }) \r\n            )\r\n        }\r\n    }\r\n}\r\nmodule.exports=authController;"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7e9f3a3aee24e1b90288b498b098a4b2226e4e94","contentHash":"2c6d8012d5bc59412637f065cf997004f46e65a09fdeb014e883d4c5c5eefe87"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\jwtTokenize.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\jwtTokenize.js","statementMap":{"0":{"start":{"line":1,"column":12},"end":{"line":1,"column":35}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":32}},"2":{"start":{"line":3,"column":0},"end":{"line":3,"column":16}},"3":{"start":{"line":4,"column":15},"end":{"line":9,"column":1}},"4":{"start":{"line":5,"column":16},"end":{"line":7,"column":4}},"5":{"start":{"line":8,"column":2},"end":{"line":8,"column":15}},"6":{"start":{"line":10,"column":15},"end":{"line":13,"column":1}},"7":{"start":{"line":11,"column":18},"end":{"line":11,"column":59}},"8":{"start":{"line":12,"column":2},"end":{"line":12,"column":17}},"9":{"start":{"line":14,"column":0},"end":{"line":17,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":4,"column":15},"end":{"line":4,"column":16}},"loc":{"start":{"line":4,"column":25},"end":{"line":9,"column":1}},"line":4},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":15},"end":{"line":10,"column":16}},"loc":{"start":{"line":10,"column":24},"end":{"line":13,"column":1}},"line":10}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":3,"5":3,"6":1,"7":3,"8":3,"9":1},"f":{"0":3,"1":3},"b":{},"inputSourceMap":{"version":3,"names":["jwt","require","dotenv","config","encode","claims","token","sign","process","env","JWT_SECRET","expiresIn","decode","payload","verify","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\helper\\","sources":["jwtTokenize.js"],"sourcesContent":["const jwt =require(\"jsonwebtoken\");\r\nconst dotenv= require(\"dotenv\");\r\n\r\n\r\n\r\ndotenv.config();\r\n\r\n const encode = (claims)=>{\r\n    const token= jwt.sign(claims, process.env.JWT_SECRET, { expiresIn: \"7d\"});\r\n    return token;\r\n};\r\n\r\n const decode=(token)=>{\r\n    const payload=jwt.verify(token, process.env.JWT_SECRET)\r\n    return payload;\r\n}\r\nmodule.exports = {encode,decode};"],"mappings":"AAAA,MAAMA,GAAG,GAAEC,OAAO,CAAC,cAAc,CAAC;AAClC,MAAMC,MAAM,GAAED,OAAO,CAAC,QAAQ,CAAC;AAI/BC,MAAM,CAACC,MAAM,EAAE;AAEd,MAAMC,MAAM,GAAIC,MAAM,IAAG;EACtB,MAAMC,KAAK,GAAEN,GAAG,CAACO,IAAI,CAACF,MAAM,EAAEG,OAAO,CAACC,GAAG,CAACC,UAAU,EAAE;IAAEC,SAAS,EAAE;EAAI,CAAC,CAAC;EACzE,OAAOL,KAAK;AAChB,CAAC;AAEA,MAAMM,MAAM,GAAEN,KAAK,IAAG;EACnB,MAAMO,OAAO,GAACb,GAAG,CAACc,MAAM,CAACR,KAAK,EAAEE,OAAO,CAACC,GAAG,CAACC,UAAU,CAAC;EACvD,OAAOG,OAAO;AAClB,CAAC;AACDE,MAAM,CAACC,OAAO,GAAG;EAACZ,MAAM;EAACQ;AAAM,CAAC"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6e0b0eb83bc761192241d573e5271042ba786b77","contentHash":"4f17aa12ce86765bede89957615aa5943823eb7c914e914cf43e1c1f184f7992"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\validation.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\validation.js","statementMap":{"0":{"start":{"line":1,"column":12},"end":{"line":1,"column":26}},"1":{"start":{"line":2,"column":19},"end":{"line":19,"column":1}},"2":{"start":{"line":3,"column":18},"end":{"line":8,"column":4}},"3":{"start":{"line":11,"column":6},"end":{"line":11,"column":32}},"4":{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},"5":{"start":{"line":13,"column":4},"end":{"line":16,"column":7}},"6":{"start":{"line":18,"column":2},"end":{"line":18,"column":9}},"7":{"start":{"line":20,"column":0},"end":{"line":20,"column":28}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":19},"end":{"line":2,"column":20}},"loc":{"start":{"line":2,"column":39},"end":{"line":19,"column":1}},"line":2}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},"type":"if","locations":[{"start":{"line":12,"column":2},"end":{"line":17,"column":3}},{"start":{"line":12,"column":2},"end":{"line":17,"column":3}}],"line":12}},"s":{"0":1,"1":1,"2":4,"3":4,"4":4,"5":0,"6":4,"7":1},"f":{"0":4},"b":{"0":[0,4]},"inputSourceMap":{"version":3,"names":["Joi","require","validation","req","res","next","Schemas","object","keys","Fullname","string","min","required","age","email","password","pattern","RegExp","error","validate","body","status","json","details","message","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\middlewares\\","sources":["validation.js"],"sourcesContent":["const Joi =require(\"joi\");\r\n\r\nconst validation =(req, res, next)=>{\r\n    const Schemas = Joi.object().keys({\r\n        Fullname:Joi.string().min(5).required(),\r\n        age:Joi.string().min(2).required(),\r\n        email:Joi.string().email().required(),\r\n        password:Joi.string().required().pattern(new RegExp(\"^(?=.*[a-z])(?=.*[A-Z])(?=.*[0123456789])(?=.*[@$!%*?&])[A-Za-z0123456789@$!%*?&]{8,}$\"))\r\n\r\n    });\r\n    const {error}=Schemas.validate(req.body)\r\n    if(error){\r\n        return res.status(400).json({\r\n            status:400,\r\n            error:error.details[0].message\r\n        });\r\n    }\r\n    next()\r\n}\r\nmodule.exports=validation;"],"mappings":"AAAA,MAAMA,GAAG,GAAEC,OAAO,CAAC,KAAK,CAAC;AAEzB,MAAMC,UAAU,GAAE,CAACC,GAAG,EAAEC,GAAG,EAAEC,IAAI,KAAG;EAChC,MAAMC,OAAO,GAAGN,GAAG,CAACO,MAAM,EAAE,CAACC,IAAI,CAAC;IAC9BC,QAAQ,EAACT,GAAG,CAACU,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IACvCC,GAAG,EAACb,GAAG,CAACU,MAAM,EAAE,CAACC,GAAG,CAAC,CAAC,CAAC,CAACC,QAAQ,EAAE;IAClCE,KAAK,EAACd,GAAG,CAACU,MAAM,EAAE,CAACI,KAAK,EAAE,CAACF,QAAQ,EAAE;IACrCG,QAAQ,EAACf,GAAG,CAACU,MAAM,EAAE,CAACE,QAAQ,EAAE,CAACI,OAAO,CAAC,IAAIC,MAAM,CAAC,wFAAwF,CAAC;EAEjJ,CAAC,CAAC;EACF,MAAM;IAACC;EAAK,CAAC,GAACZ,OAAO,CAACa,QAAQ,CAAChB,GAAG,CAACiB,IAAI,CAAC;EACxC,IAAGF,KAAK,EAAC;IACL,OAAOd,GAAG,CAACiB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MACxBD,MAAM,EAAC,GAAG;MACVH,KAAK,EAACA,KAAK,CAACK,OAAO,CAAC,CAAC,CAAC,CAACC;IAC3B,CAAC,CAAC;EACN;EACAnB,IAAI,EAAE;AACV,CAAC;AACDoB,MAAM,CAACC,OAAO,GAACxB,UAAU"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"073f6c7e513a623253660e2cb3204f2111e69d66","contentHash":"bb43e7b3548bbf111170ecb84602c08ba4b50bfcdacd303f4c2f9a5d4b3a637b"},"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\configs\\db.js":{"path":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\configs\\db.js","statementMap":{"0":{"start":{"line":1,"column":17},"end":{"line":1,"column":36}},"1":{"start":{"line":2,"column":15},"end":{"line":2,"column":32}},"2":{"start":{"line":6,"column":0},"end":{"line":6,"column":16}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":34}},"4":{"start":{"line":8,"column":25},"end":{"line":8,"column":49}},"5":{"start":{"line":9,"column":18},"end":{"line":16,"column":1}},"6":{"start":{"line":10,"column":2},"end":{"line":15,"column":5}},"7":{"start":{"line":14,"column":4},"end":{"line":14,"column":38}},"8":{"start":{"line":17,"column":0},"end":{"line":17,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":18},"end":{"line":9,"column":19}},"loc":{"start":{"line":9,"column":32},"end":{"line":16,"column":1}},"line":9},"1":{"name":"(anonymous_1)","decl":{"start":{"line":13,"column":5},"end":{"line":13,"column":6}},"loc":{"start":{"line":13,"column":11},"end":{"line":15,"column":3}},"line":13}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1,"1":1},"b":{},"inputSourceMap":{"version":3,"names":["mongoose","require","dotenv","config","set","connectionString","process","env","MONGOOSE_URI","dbConnect","next","connect","MONGO_URL","useNewUrlParser","useUnifiedTopology","console","log","module","exports"],"sourceRoot":"E:\\andela\\New Andela\\MY BRAND\\SERVER\\src\\configs\\","sources":["db.js"],"sourcesContent":["const mongoose = require(\"mongoose\");\r\nconst dotenv = require(\"dotenv\");\r\n\r\n//LOAD DOTENV FILES\r\n// dotenv.config({ path: \"./src/configs/config.env\" });\r\ndotenv.config();\r\nmongoose.set('strictQuery', true);\r\nconst connectionString = process.env.MONGOOSE_URI;\r\nconst dbConnect = async (next) => {\r\n    mongoose.connect(process.env.MONGO_URL, {useNewUrlParser: true, useUnifiedTopology: true}, ()=>{\r\n        console.log(\"connect to mongoDB\");\r\n    })\r\n    \r\n};\r\nmodule.exports = dbConnect;"],"mappings":"AAAA,MAAMA,QAAQ,GAAGC,OAAO,CAAC,UAAU,CAAC;AACpC,MAAMC,MAAM,GAAGD,OAAO,CAAC,QAAQ,CAAC;;AAEhC;AACA;AACAC,MAAM,CAACC,MAAM,EAAE;AACfH,QAAQ,CAACI,GAAG,CAAC,aAAa,EAAE,IAAI,CAAC;AACjC,MAAMC,gBAAgB,GAAGC,OAAO,CAACC,GAAG,CAACC,YAAY;AACjD,MAAMC,SAAS,GAAG,MAAOC,IAAI,IAAK;EAC9BV,QAAQ,CAACW,OAAO,CAACL,OAAO,CAACC,GAAG,CAACK,SAAS,EAAE;IAACC,eAAe,EAAE,IAAI;IAAEC,kBAAkB,EAAE;EAAI,CAAC,EAAE,MAAI;IAC3FC,OAAO,CAACC,GAAG,CAAC,oBAAoB,CAAC;EACrC,CAAC,CAAC;AAEN,CAAC;AACDC,MAAM,CAACC,OAAO,GAAGT,SAAS"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9993e3b05414d236db8e26df7c8711a49ee7a493","contentHash":"8ae06cc99a1af9983c4165586ad813a2a8f577c652d1c1572171bb982ac85d70"}}